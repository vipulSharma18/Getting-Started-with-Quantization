name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: cleanup space on github vm
        run: |
          rm -rf /usr/share/dotnet
          rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Configure Docker to use unified storage across / and /mnt
      - name: Configure unified Docker storage
        run: |
          echo "Available space before Docker configuration:"
          df -h
          
          # Create unified storage structure
          sudo mkdir -p /mnt/unified-storage
          sudo mkdir -p /mnt/unified-storage/docker
          sudo mkdir -p /mnt/unified-storage/buildkit
          
          # Create bind mounts to unify storage
          sudo mount --bind /mnt/unified-storage/docker /var/lib/docker
          sudo mount --bind /mnt/unified-storage/buildkit /var/lib/buildkit
          
          # Ensure mounts persist
          echo "/mnt/unified-storage/docker /var/lib/docker none bind 0 0" | sudo tee -a /etc/fstab
          echo "/mnt/unified-storage/buildkit /var/lib/buildkit none bind 0 0" | sudo tee -a /etc/fstab
          
          # Stop Docker and configure
          sudo systemctl stop docker
          sudo mkdir -p /etc/docker
          
          # Configure Docker with multiple storage drivers and unified root
          cat << EOF | sudo tee /etc/docker/daemon.json
          {
            "data-root": "/var/lib/docker",
            "storage-driver": "overlay2",
            "storage-opts": [
              "overlay2.override_kernel_check=true"
            ],
            "max-concurrent-downloads": 10,
            "max-concurrent-uploads": 5
          }
          EOF
          
          # Start Docker
          sudo systemctl start docker
          sudo systemctl status docker
          
          echo "Unified storage configured:"
          echo "Docker root: $(docker info | grep 'Docker Root Dir')"
          echo "BuildKit root: /var/lib/buildkit"
          echo "Available space after configuration:"
          df -h
          echo "Mount points:"
          mount | grep -E "(docker|buildkit)"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.4
          buildkitd-flags: --root /var/lib/buildkit

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}