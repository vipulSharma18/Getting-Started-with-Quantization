
import os
os.environ['TORCH_TRACE'] = '/log/compile'
os.environ['TORCHINDUCTOR_CACHE_DIR'] = '/tmp/torchinductor_root'

import torch
from torch import tensor, device
import torch.fx as fx
from torch._dynamo.testing import rand_strided
from math import inf
import torch._inductor.inductor_prims

import torch._dynamo.config
import torch._inductor.config
import torch._functorch.config
import torch.fx.experimental._config
torch._dynamo.config.assume_static_by_default = False
import torchao.prototype.inductor.fx_passes.da8w4_concat_linear_fusion_cpu
torch._inductor.config.post_grad_custom_post_pass = torchao.prototype.inductor.fx_passes.da8w4_concat_linear_fusion_cpu._concat_linear_dq8w4_cpu
torch._inductor.config.max_autotune = True
torch._inductor.config.coordinate_descent_tuning = True
torch._inductor.config.benchmark_fusion = True
torch._inductor.config.benchmark_kernel = True
torch._inductor.config.triton.cudagraphs = True
torch._functorch.config.functionalize_rng_ops = False
torch._functorch.config.fake_tensor_allow_unsafe_data_ptr_access = True
torch._functorch.config.unlift_effect_tokens = True



isolate_fails_code_str = None




# torch version: 2.7.1+cu128
# torch cuda version: 12.8
# torch git version: e2d141dbde55c2a4370fac5165b0561b6af4798b


# CUDA Info: 
# nvcc not found
# GPU Hardware Info: 
# NVIDIA RTX A6000 : 1 


from torch.nn import *
class Repro(torch.nn.Module):
    def __init__(self) -> None:
        super().__init__()

    
    
    def forward(self, arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1):
        embedding = torch.ops.aten.embedding.default(arg2_1, arg1_1, 128004);  arg2_1 = arg1_1 = None
        unsqueeze = torch.ops.aten.unsqueeze.default(arg7_1, 0);  arg7_1 = None
        unsqueeze_1 = torch.ops.aten.unsqueeze.default(unsqueeze, 2);  unsqueeze = None
        expand = torch.ops.aten.expand.default(unsqueeze_1, [1, -1, 1]);  unsqueeze_1 = None
        unsqueeze_2 = torch.ops.aten.unsqueeze.default(arg4_1, 1);  arg4_1 = None
        convert_element_type = torch.ops.prims.convert_element_type.default(unsqueeze_2, torch.float32);  unsqueeze_2 = None
        expand_1 = torch.ops.aten.expand.default(expand, [1, 64, 1]);  expand = None
        expand_2 = torch.ops.aten.expand.default(convert_element_type, [1, 1, arg0_1]);  convert_element_type = None
        view_1 = torch.ops.aten.view.default(expand_2, [1, 1, arg0_1]);  expand_2 = None
        bmm = torch.ops.aten.bmm.default(expand_1, view_1);  expand_1 = view_1 = None
        view_2 = torch.ops.aten.view.default(bmm, [1, 64, arg0_1]);  bmm = None
        permute = torch.ops.aten.permute.default(view_2, [0, 2, 1]);  view_2 = None
        unsqueeze_3 = torch.ops.aten.unsqueeze.default(permute, 2);  permute = None
        expand_3 = torch.ops.aten.expand.default(unsqueeze_3, [1, arg0_1, 2, 64]);  unsqueeze_3 = None
        clone = torch.ops.aten.clone.default(expand_3, memory_format = torch.contiguous_format);  expand_3 = None
        view_3 = torch.ops.aten.view.default(clone, [1, arg0_1, 128]);  clone = None
        cos = torch.ops.aten.cos.default(view_3)
        mul_39 = torch.ops.aten.mul.Tensor(cos, 1.0);  cos = None
        sin = torch.ops.aten.sin.default(view_3);  view_3 = None
        mul_46 = torch.ops.aten.mul.Tensor(sin, 1.0);  sin = None
        convert_element_type_1 = torch.ops.prims.convert_element_type.default(mul_39, torch.float16);  mul_39 = None
        convert_element_type_2 = torch.ops.prims.convert_element_type.default(mul_46, torch.float16);  mul_46 = None
        view_4 = torch.ops.aten.view.default(embedding, [-1, 4096])
        empty = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_1 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 1, constant_args_idx = 0, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty, 'X_ptr': view_4, 'W_ptr': arg8_1, 'RSTD_ptr': empty_1}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty = view_4 = arg8_1 = empty_1 = None
        getitem = triton_kernel_wrapper_functional_proxy['Y_ptr'];  triton_kernel_wrapper_functional_proxy = None
        permute_1 = torch.ops.aten.permute.default(arg9_1, [1, 0]);  arg9_1 = None
        view_7 = torch.ops.aten.view.default(getitem, [1, arg0_1, 4096])
        view_8 = torch.ops.aten.view.default(view_7, [arg0_1, 4096]);  view_7 = None
        mm = torch.ops.aten.mm.default(view_8, permute_1);  view_8 = permute_1 = None
        view_9 = torch.ops.aten.view.default(mm, [1, arg0_1, 4096]);  mm = None
        view_10 = torch.ops.aten.view.default(view_9, [1, arg0_1, -1, 128]);  view_9 = None
        permute_2 = torch.ops.aten.permute.default(view_10, [0, 2, 1, 3]);  view_10 = None
        permute_3 = torch.ops.aten.permute.default(arg10_1, [1, 0]);  arg10_1 = None
        view_12 = torch.ops.aten.view.default(getitem, [1, arg0_1, 4096])
        view_13 = torch.ops.aten.view.default(view_12, [arg0_1, 4096]);  view_12 = None
        mm_1 = torch.ops.aten.mm.default(view_13, permute_3);  view_13 = permute_3 = None
        view_14 = torch.ops.aten.view.default(mm_1, [1, arg0_1, 1024]);  mm_1 = None
        view_15 = torch.ops.aten.view.default(view_14, [1, arg0_1, -1, 128]);  view_14 = None
        permute_4 = torch.ops.aten.permute.default(view_15, [0, 2, 1, 3]);  view_15 = None
        permute_5 = torch.ops.aten.permute.default(arg11_1, [1, 0]);  arg11_1 = None
        view_17 = torch.ops.aten.view.default(getitem, [1, arg0_1, 4096]);  getitem = None
        view_18 = torch.ops.aten.view.default(view_17, [arg0_1, 4096]);  view_17 = None
        mm_2 = torch.ops.aten.mm.default(view_18, permute_5);  view_18 = permute_5 = None
        view_19 = torch.ops.aten.view.default(mm_2, [1, arg0_1, 1024]);  mm_2 = None
        view_20 = torch.ops.aten.view.default(view_19, [1, arg0_1, -1, 128]);  view_19 = None
        permute_6 = torch.ops.aten.permute.default(view_20, [0, 2, 1, 3]);  view_20 = None
        unsqueeze_4 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_5 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_136 = torch.ops.aten.mul.Tensor(permute_2, unsqueeze_4)
        slice_4 = torch.ops.aten.slice.Tensor(permute_2, 3, 0, 64)
        slice_5 = torch.ops.aten.slice.Tensor(permute_2, 3, 64, 9223372036854775807);  permute_2 = None
        neg = torch.ops.aten.neg.default(slice_5);  slice_5 = None
        cat = torch.ops.aten.cat.default([neg, slice_4], -1);  neg = slice_4 = None
        mul_153 = torch.ops.aten.mul.Tensor(cat, unsqueeze_5);  cat = None
        add_135 = torch.ops.aten.add.Tensor(mul_136, mul_153);  mul_136 = mul_153 = None
        mul_161 = torch.ops.aten.mul.Tensor(permute_4, unsqueeze_4);  unsqueeze_4 = None
        slice_6 = torch.ops.aten.slice.Tensor(permute_4, 3, 0, 64)
        slice_7 = torch.ops.aten.slice.Tensor(permute_4, 3, 64, 9223372036854775807);  permute_4 = None
        neg_1 = torch.ops.aten.neg.default(slice_7);  slice_7 = None
        cat_1 = torch.ops.aten.cat.default([neg_1, slice_6], -1);  neg_1 = slice_6 = None
        mul_178 = torch.ops.aten.mul.Tensor(cat_1, unsqueeze_5);  cat_1 = unsqueeze_5 = None
        add_159 = torch.ops.aten.add.Tensor(mul_161, mul_178);  mul_161 = mul_178 = None
        full_default = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_1 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put = torch.ops.aten.index_put.default(full_default, [None, None, arg3_1], add_159);  full_default = add_159 = None
        index_put_1 = torch.ops.aten.index_put.default(full_default_1, [None, None, arg3_1], permute_6);  full_default_1 = permute_6 = None
        unsqueeze_7 = torch.ops.aten.unsqueeze.default(index_put, 2)
        expand_5 = torch.ops.aten.expand.default(unsqueeze_7, [1, 8, 4, arg5_1, 128]);  unsqueeze_7 = None
        clone_2 = torch.ops.aten.clone.default(expand_5, memory_format = torch.contiguous_format);  expand_5 = None
        view_21 = torch.ops.aten.view.default(clone_2, [1, 32, arg5_1, 128]);  clone_2 = None
        unsqueeze_9 = torch.ops.aten.unsqueeze.default(index_put_1, 2)
        expand_7 = torch.ops.aten.expand.default(unsqueeze_9, [1, 8, 4, arg5_1, 128]);  unsqueeze_9 = None
        clone_3 = torch.ops.aten.clone.default(expand_7, memory_format = torch.contiguous_format);  expand_7 = None
        view_22 = torch.ops.aten.view.default(clone_3, [1, 32, arg5_1, 128]);  clone_3 = None
        clone_4 = torch.ops.aten.clone.default(add_135, memory_format = torch.contiguous_format);  add_135 = None
        full_default_2 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_3 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where = torch.ops.aten.where.self(arg6_1, full_default_3, full_default_2);  full_default_3 = full_default_2 = None
        expand_8 = torch.ops.aten.expand.default(where, [1, 32, arg0_1, arg5_1]);  where = None
        _scaled_dot_product_efficient_attention = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_4, view_21, view_22, expand_8, False, scale = 0.08838834764831845);  clone_4 = view_21 = view_22 = expand_8 = None
        getitem_2 = _scaled_dot_product_efficient_attention[0];  _scaled_dot_product_efficient_attention = None
        permute_7 = torch.ops.aten.permute.default(getitem_2, [0, 2, 1, 3]);  getitem_2 = None
        view_23 = torch.ops.aten.view.default(permute_7, [1, arg0_1, -1]);  permute_7 = None
        permute_8 = torch.ops.aten.permute.default(arg13_1, [1, 0]);  arg13_1 = None
        view_24 = torch.ops.aten.view.default(view_23, [arg0_1, 4096]);  view_23 = None
        mm_3 = torch.ops.aten.mm.default(view_24, permute_8);  view_24 = permute_8 = None
        view_25 = torch.ops.aten.view.default(mm_3, [1, arg0_1, 4096]);  mm_3 = None
        add_317 = torch.ops.aten.add.Tensor(embedding, view_25);  embedding = view_25 = None
        view_26 = torch.ops.aten.view.default(add_317, [-1, 4096])
        empty_2 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_3 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_1 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 2, constant_args_idx = 1, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_2, 'X_ptr': view_26, 'W_ptr': arg14_1, 'RSTD_ptr': empty_3}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_2 = view_26 = arg14_1 = empty_3 = None
        getitem_6 = triton_kernel_wrapper_functional_proxy_1['Y_ptr'];  triton_kernel_wrapper_functional_proxy_1 = None
        permute_9 = torch.ops.aten.permute.default(arg15_1, [1, 0]);  arg15_1 = None
        view_29 = torch.ops.aten.view.default(getitem_6, [1, arg0_1, 4096])
        view_30 = torch.ops.aten.view.default(view_29, [arg0_1, 4096]);  view_29 = None
        mm_4 = torch.ops.aten.mm.default(view_30, permute_9);  view_30 = permute_9 = None
        view_31 = torch.ops.aten.view.default(mm_4, [1, arg0_1, 14336]);  mm_4 = None
        convert_element_type_13 = torch.ops.prims.convert_element_type.default(view_31, torch.float32);  view_31 = None
        sigmoid = torch.ops.aten.sigmoid.default(convert_element_type_13)
        mul_426 = torch.ops.aten.mul.Tensor(convert_element_type_13, sigmoid);  convert_element_type_13 = sigmoid = None
        convert_element_type_14 = torch.ops.prims.convert_element_type.default(mul_426, torch.float16);  mul_426 = None
        permute_10 = torch.ops.aten.permute.default(arg16_1, [1, 0]);  arg16_1 = None
        view_33 = torch.ops.aten.view.default(getitem_6, [1, arg0_1, 4096]);  getitem_6 = None
        view_34 = torch.ops.aten.view.default(view_33, [arg0_1, 4096]);  view_33 = None
        mm_5 = torch.ops.aten.mm.default(view_34, permute_10);  view_34 = permute_10 = None
        view_35 = torch.ops.aten.view.default(mm_5, [1, arg0_1, 14336]);  mm_5 = None
        mul_443 = torch.ops.aten.mul.Tensor(convert_element_type_14, view_35);  convert_element_type_14 = view_35 = None
        permute_11 = torch.ops.aten.permute.default(arg17_1, [1, 0]);  arg17_1 = None
        view_36 = torch.ops.aten.view.default(mul_443, [arg0_1, 14336]);  mul_443 = None
        mm_6 = torch.ops.aten.mm.default(view_36, permute_11);  view_36 = permute_11 = None
        view_37 = torch.ops.aten.view.default(mm_6, [1, arg0_1, 4096]);  mm_6 = None
        add_370 = torch.ops.aten.add.Tensor(add_317, view_37);  add_317 = view_37 = None
        view_38 = torch.ops.aten.view.default(add_370, [-1, 4096])
        empty_4 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_5 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_2 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 3, constant_args_idx = 2, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_4, 'X_ptr': view_38, 'W_ptr': arg18_1, 'RSTD_ptr': empty_5}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_4 = view_38 = arg18_1 = empty_5 = None
        getitem_8 = triton_kernel_wrapper_functional_proxy_2['Y_ptr'];  triton_kernel_wrapper_functional_proxy_2 = None
        permute_12 = torch.ops.aten.permute.default(arg19_1, [1, 0]);  arg19_1 = None
        view_41 = torch.ops.aten.view.default(getitem_8, [1, arg0_1, 4096])
        view_42 = torch.ops.aten.view.default(view_41, [arg0_1, 4096]);  view_41 = None
        mm_7 = torch.ops.aten.mm.default(view_42, permute_12);  view_42 = permute_12 = None
        view_43 = torch.ops.aten.view.default(mm_7, [1, arg0_1, 4096]);  mm_7 = None
        view_44 = torch.ops.aten.view.default(view_43, [1, arg0_1, -1, 128]);  view_43 = None
        permute_13 = torch.ops.aten.permute.default(view_44, [0, 2, 1, 3]);  view_44 = None
        permute_14 = torch.ops.aten.permute.default(arg20_1, [1, 0]);  arg20_1 = None
        view_46 = torch.ops.aten.view.default(getitem_8, [1, arg0_1, 4096])
        view_47 = torch.ops.aten.view.default(view_46, [arg0_1, 4096]);  view_46 = None
        mm_8 = torch.ops.aten.mm.default(view_47, permute_14);  view_47 = permute_14 = None
        view_48 = torch.ops.aten.view.default(mm_8, [1, arg0_1, 1024]);  mm_8 = None
        view_49 = torch.ops.aten.view.default(view_48, [1, arg0_1, -1, 128]);  view_48 = None
        permute_15 = torch.ops.aten.permute.default(view_49, [0, 2, 1, 3]);  view_49 = None
        permute_16 = torch.ops.aten.permute.default(arg21_1, [1, 0]);  arg21_1 = None
        view_51 = torch.ops.aten.view.default(getitem_8, [1, arg0_1, 4096]);  getitem_8 = None
        view_52 = torch.ops.aten.view.default(view_51, [arg0_1, 4096]);  view_51 = None
        mm_9 = torch.ops.aten.mm.default(view_52, permute_16);  view_52 = permute_16 = None
        view_53 = torch.ops.aten.view.default(mm_9, [1, arg0_1, 1024]);  mm_9 = None
        view_54 = torch.ops.aten.view.default(view_53, [1, arg0_1, -1, 128]);  view_53 = None
        permute_17 = torch.ops.aten.permute.default(view_54, [0, 2, 1, 3]);  view_54 = None
        unsqueeze_10 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_11 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_545 = torch.ops.aten.mul.Tensor(permute_13, unsqueeze_10)
        slice_27 = torch.ops.aten.slice.Tensor(permute_13, 3, 0, 64)
        slice_28 = torch.ops.aten.slice.Tensor(permute_13, 3, 64, 9223372036854775807);  permute_13 = None
        neg_2 = torch.ops.aten.neg.default(slice_28);  slice_28 = None
        cat_2 = torch.ops.aten.cat.default([neg_2, slice_27], -1);  neg_2 = slice_27 = None
        mul_562 = torch.ops.aten.mul.Tensor(cat_2, unsqueeze_11);  cat_2 = None
        add_464 = torch.ops.aten.add.Tensor(mul_545, mul_562);  mul_545 = mul_562 = None
        mul_570 = torch.ops.aten.mul.Tensor(permute_15, unsqueeze_10);  unsqueeze_10 = None
        slice_29 = torch.ops.aten.slice.Tensor(permute_15, 3, 0, 64)
        slice_30 = torch.ops.aten.slice.Tensor(permute_15, 3, 64, 9223372036854775807);  permute_15 = None
        neg_3 = torch.ops.aten.neg.default(slice_30);  slice_30 = None
        cat_3 = torch.ops.aten.cat.default([neg_3, slice_29], -1);  neg_3 = slice_29 = None
        mul_587 = torch.ops.aten.mul.Tensor(cat_3, unsqueeze_11);  cat_3 = unsqueeze_11 = None
        add_488 = torch.ops.aten.add.Tensor(mul_570, mul_587);  mul_570 = mul_587 = None
        full_default_4 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_5 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_2 = torch.ops.aten.index_put.default(full_default_4, [None, None, arg3_1], add_488);  full_default_4 = add_488 = None
        index_put_3 = torch.ops.aten.index_put.default(full_default_5, [None, None, arg3_1], permute_17);  full_default_5 = permute_17 = None
        unsqueeze_13 = torch.ops.aten.unsqueeze.default(index_put_2, 2)
        expand_10 = torch.ops.aten.expand.default(unsqueeze_13, [1, 8, 4, arg5_1, 128]);  unsqueeze_13 = None
        clone_5 = torch.ops.aten.clone.default(expand_10, memory_format = torch.contiguous_format);  expand_10 = None
        view_55 = torch.ops.aten.view.default(clone_5, [1, 32, arg5_1, 128]);  clone_5 = None
        unsqueeze_15 = torch.ops.aten.unsqueeze.default(index_put_3, 2)
        expand_12 = torch.ops.aten.expand.default(unsqueeze_15, [1, 8, 4, arg5_1, 128]);  unsqueeze_15 = None
        clone_6 = torch.ops.aten.clone.default(expand_12, memory_format = torch.contiguous_format);  expand_12 = None
        view_56 = torch.ops.aten.view.default(clone_6, [1, 32, arg5_1, 128]);  clone_6 = None
        clone_7 = torch.ops.aten.clone.default(add_464, memory_format = torch.contiguous_format);  add_464 = None
        full_default_6 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_7 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_1 = torch.ops.aten.where.self(arg6_1, full_default_7, full_default_6);  full_default_7 = full_default_6 = None
        expand_13 = torch.ops.aten.expand.default(where_1, [1, 32, arg0_1, arg5_1]);  where_1 = None
        _scaled_dot_product_efficient_attention_1 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_7, view_55, view_56, expand_13, False, scale = 0.08838834764831845);  clone_7 = view_55 = view_56 = expand_13 = None
        getitem_10 = _scaled_dot_product_efficient_attention_1[0];  _scaled_dot_product_efficient_attention_1 = None
        permute_18 = torch.ops.aten.permute.default(getitem_10, [0, 2, 1, 3]);  getitem_10 = None
        view_57 = torch.ops.aten.view.default(permute_18, [1, arg0_1, -1]);  permute_18 = None
        permute_19 = torch.ops.aten.permute.default(arg23_1, [1, 0]);  arg23_1 = None
        view_58 = torch.ops.aten.view.default(view_57, [arg0_1, 4096]);  view_57 = None
        mm_10 = torch.ops.aten.mm.default(view_58, permute_19);  view_58 = permute_19 = None
        view_59 = torch.ops.aten.view.default(mm_10, [1, arg0_1, 4096]);  mm_10 = None
        add_646 = torch.ops.aten.add.Tensor(add_370, view_59);  add_370 = view_59 = None
        view_60 = torch.ops.aten.view.default(add_646, [-1, 4096])
        empty_6 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_7 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_3 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 4, constant_args_idx = 3, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_6, 'X_ptr': view_60, 'W_ptr': arg24_1, 'RSTD_ptr': empty_7}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_6 = view_60 = arg24_1 = empty_7 = None
        getitem_14 = triton_kernel_wrapper_functional_proxy_3['Y_ptr'];  triton_kernel_wrapper_functional_proxy_3 = None
        permute_20 = torch.ops.aten.permute.default(arg25_1, [1, 0]);  arg25_1 = None
        view_63 = torch.ops.aten.view.default(getitem_14, [1, arg0_1, 4096])
        view_64 = torch.ops.aten.view.default(view_63, [arg0_1, 4096]);  view_63 = None
        mm_11 = torch.ops.aten.mm.default(view_64, permute_20);  view_64 = permute_20 = None
        view_65 = torch.ops.aten.view.default(mm_11, [1, arg0_1, 14336]);  mm_11 = None
        convert_element_type_29 = torch.ops.prims.convert_element_type.default(view_65, torch.float32);  view_65 = None
        sigmoid_1 = torch.ops.aten.sigmoid.default(convert_element_type_29)
        mul_835 = torch.ops.aten.mul.Tensor(convert_element_type_29, sigmoid_1);  convert_element_type_29 = sigmoid_1 = None
        convert_element_type_30 = torch.ops.prims.convert_element_type.default(mul_835, torch.float16);  mul_835 = None
        permute_21 = torch.ops.aten.permute.default(arg26_1, [1, 0]);  arg26_1 = None
        view_67 = torch.ops.aten.view.default(getitem_14, [1, arg0_1, 4096]);  getitem_14 = None
        view_68 = torch.ops.aten.view.default(view_67, [arg0_1, 4096]);  view_67 = None
        mm_12 = torch.ops.aten.mm.default(view_68, permute_21);  view_68 = permute_21 = None
        view_69 = torch.ops.aten.view.default(mm_12, [1, arg0_1, 14336]);  mm_12 = None
        mul_852 = torch.ops.aten.mul.Tensor(convert_element_type_30, view_69);  convert_element_type_30 = view_69 = None
        permute_22 = torch.ops.aten.permute.default(arg27_1, [1, 0]);  arg27_1 = None
        view_70 = torch.ops.aten.view.default(mul_852, [arg0_1, 14336]);  mul_852 = None
        mm_13 = torch.ops.aten.mm.default(view_70, permute_22);  view_70 = permute_22 = None
        view_71 = torch.ops.aten.view.default(mm_13, [1, arg0_1, 4096]);  mm_13 = None
        add_699 = torch.ops.aten.add.Tensor(add_646, view_71);  add_646 = view_71 = None
        view_72 = torch.ops.aten.view.default(add_699, [-1, 4096])
        empty_8 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_9 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_4 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 5, constant_args_idx = 4, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_8, 'X_ptr': view_72, 'W_ptr': arg28_1, 'RSTD_ptr': empty_9}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_8 = view_72 = arg28_1 = empty_9 = None
        getitem_16 = triton_kernel_wrapper_functional_proxy_4['Y_ptr'];  triton_kernel_wrapper_functional_proxy_4 = None
        permute_23 = torch.ops.aten.permute.default(arg29_1, [1, 0]);  arg29_1 = None
        view_75 = torch.ops.aten.view.default(getitem_16, [1, arg0_1, 4096])
        view_76 = torch.ops.aten.view.default(view_75, [arg0_1, 4096]);  view_75 = None
        mm_14 = torch.ops.aten.mm.default(view_76, permute_23);  view_76 = permute_23 = None
        view_77 = torch.ops.aten.view.default(mm_14, [1, arg0_1, 4096]);  mm_14 = None
        view_78 = torch.ops.aten.view.default(view_77, [1, arg0_1, -1, 128]);  view_77 = None
        permute_24 = torch.ops.aten.permute.default(view_78, [0, 2, 1, 3]);  view_78 = None
        permute_25 = torch.ops.aten.permute.default(arg30_1, [1, 0]);  arg30_1 = None
        view_80 = torch.ops.aten.view.default(getitem_16, [1, arg0_1, 4096])
        view_81 = torch.ops.aten.view.default(view_80, [arg0_1, 4096]);  view_80 = None
        mm_15 = torch.ops.aten.mm.default(view_81, permute_25);  view_81 = permute_25 = None
        view_82 = torch.ops.aten.view.default(mm_15, [1, arg0_1, 1024]);  mm_15 = None
        view_83 = torch.ops.aten.view.default(view_82, [1, arg0_1, -1, 128]);  view_82 = None
        permute_26 = torch.ops.aten.permute.default(view_83, [0, 2, 1, 3]);  view_83 = None
        permute_27 = torch.ops.aten.permute.default(arg31_1, [1, 0]);  arg31_1 = None
        view_85 = torch.ops.aten.view.default(getitem_16, [1, arg0_1, 4096]);  getitem_16 = None
        view_86 = torch.ops.aten.view.default(view_85, [arg0_1, 4096]);  view_85 = None
        mm_16 = torch.ops.aten.mm.default(view_86, permute_27);  view_86 = permute_27 = None
        view_87 = torch.ops.aten.view.default(mm_16, [1, arg0_1, 1024]);  mm_16 = None
        view_88 = torch.ops.aten.view.default(view_87, [1, arg0_1, -1, 128]);  view_87 = None
        permute_28 = torch.ops.aten.permute.default(view_88, [0, 2, 1, 3]);  view_88 = None
        unsqueeze_16 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_17 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_954 = torch.ops.aten.mul.Tensor(permute_24, unsqueeze_16)
        slice_50 = torch.ops.aten.slice.Tensor(permute_24, 3, 0, 64)
        slice_51 = torch.ops.aten.slice.Tensor(permute_24, 3, 64, 9223372036854775807);  permute_24 = None
        neg_4 = torch.ops.aten.neg.default(slice_51);  slice_51 = None
        cat_4 = torch.ops.aten.cat.default([neg_4, slice_50], -1);  neg_4 = slice_50 = None
        mul_971 = torch.ops.aten.mul.Tensor(cat_4, unsqueeze_17);  cat_4 = None
        add_793 = torch.ops.aten.add.Tensor(mul_954, mul_971);  mul_954 = mul_971 = None
        mul_979 = torch.ops.aten.mul.Tensor(permute_26, unsqueeze_16);  unsqueeze_16 = None
        slice_52 = torch.ops.aten.slice.Tensor(permute_26, 3, 0, 64)
        slice_53 = torch.ops.aten.slice.Tensor(permute_26, 3, 64, 9223372036854775807);  permute_26 = None
        neg_5 = torch.ops.aten.neg.default(slice_53);  slice_53 = None
        cat_5 = torch.ops.aten.cat.default([neg_5, slice_52], -1);  neg_5 = slice_52 = None
        mul_996 = torch.ops.aten.mul.Tensor(cat_5, unsqueeze_17);  cat_5 = unsqueeze_17 = None
        add_817 = torch.ops.aten.add.Tensor(mul_979, mul_996);  mul_979 = mul_996 = None
        full_default_8 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_9 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_4 = torch.ops.aten.index_put.default(full_default_8, [None, None, arg3_1], add_817);  full_default_8 = add_817 = None
        index_put_5 = torch.ops.aten.index_put.default(full_default_9, [None, None, arg3_1], permute_28);  full_default_9 = permute_28 = None
        unsqueeze_19 = torch.ops.aten.unsqueeze.default(index_put_4, 2)
        expand_15 = torch.ops.aten.expand.default(unsqueeze_19, [1, 8, 4, arg5_1, 128]);  unsqueeze_19 = None
        clone_8 = torch.ops.aten.clone.default(expand_15, memory_format = torch.contiguous_format);  expand_15 = None
        view_89 = torch.ops.aten.view.default(clone_8, [1, 32, arg5_1, 128]);  clone_8 = None
        unsqueeze_21 = torch.ops.aten.unsqueeze.default(index_put_5, 2)
        expand_17 = torch.ops.aten.expand.default(unsqueeze_21, [1, 8, 4, arg5_1, 128]);  unsqueeze_21 = None
        clone_9 = torch.ops.aten.clone.default(expand_17, memory_format = torch.contiguous_format);  expand_17 = None
        view_90 = torch.ops.aten.view.default(clone_9, [1, 32, arg5_1, 128]);  clone_9 = None
        clone_10 = torch.ops.aten.clone.default(add_793, memory_format = torch.contiguous_format);  add_793 = None
        full_default_10 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_11 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_2 = torch.ops.aten.where.self(arg6_1, full_default_11, full_default_10);  full_default_11 = full_default_10 = None
        expand_18 = torch.ops.aten.expand.default(where_2, [1, 32, arg0_1, arg5_1]);  where_2 = None
        _scaled_dot_product_efficient_attention_2 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_10, view_89, view_90, expand_18, False, scale = 0.08838834764831845);  clone_10 = view_89 = view_90 = expand_18 = None
        getitem_18 = _scaled_dot_product_efficient_attention_2[0];  _scaled_dot_product_efficient_attention_2 = None
        permute_29 = torch.ops.aten.permute.default(getitem_18, [0, 2, 1, 3]);  getitem_18 = None
        view_91 = torch.ops.aten.view.default(permute_29, [1, arg0_1, -1]);  permute_29 = None
        permute_30 = torch.ops.aten.permute.default(arg33_1, [1, 0]);  arg33_1 = None
        view_92 = torch.ops.aten.view.default(view_91, [arg0_1, 4096]);  view_91 = None
        mm_17 = torch.ops.aten.mm.default(view_92, permute_30);  view_92 = permute_30 = None
        view_93 = torch.ops.aten.view.default(mm_17, [1, arg0_1, 4096]);  mm_17 = None
        add_975 = torch.ops.aten.add.Tensor(add_699, view_93);  add_699 = view_93 = None
        view_94 = torch.ops.aten.view.default(add_975, [-1, 4096])
        empty_10 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_11 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_5 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 6, constant_args_idx = 5, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_10, 'X_ptr': view_94, 'W_ptr': arg34_1, 'RSTD_ptr': empty_11}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_10 = view_94 = arg34_1 = empty_11 = None
        getitem_22 = triton_kernel_wrapper_functional_proxy_5['Y_ptr'];  triton_kernel_wrapper_functional_proxy_5 = None
        permute_31 = torch.ops.aten.permute.default(arg35_1, [1, 0]);  arg35_1 = None
        view_97 = torch.ops.aten.view.default(getitem_22, [1, arg0_1, 4096])
        view_98 = torch.ops.aten.view.default(view_97, [arg0_1, 4096]);  view_97 = None
        mm_18 = torch.ops.aten.mm.default(view_98, permute_31);  view_98 = permute_31 = None
        view_99 = torch.ops.aten.view.default(mm_18, [1, arg0_1, 14336]);  mm_18 = None
        convert_element_type_45 = torch.ops.prims.convert_element_type.default(view_99, torch.float32);  view_99 = None
        sigmoid_2 = torch.ops.aten.sigmoid.default(convert_element_type_45)
        mul_1244 = torch.ops.aten.mul.Tensor(convert_element_type_45, sigmoid_2);  convert_element_type_45 = sigmoid_2 = None
        convert_element_type_46 = torch.ops.prims.convert_element_type.default(mul_1244, torch.float16);  mul_1244 = None
        permute_32 = torch.ops.aten.permute.default(arg36_1, [1, 0]);  arg36_1 = None
        view_101 = torch.ops.aten.view.default(getitem_22, [1, arg0_1, 4096]);  getitem_22 = None
        view_102 = torch.ops.aten.view.default(view_101, [arg0_1, 4096]);  view_101 = None
        mm_19 = torch.ops.aten.mm.default(view_102, permute_32);  view_102 = permute_32 = None
        view_103 = torch.ops.aten.view.default(mm_19, [1, arg0_1, 14336]);  mm_19 = None
        mul_1261 = torch.ops.aten.mul.Tensor(convert_element_type_46, view_103);  convert_element_type_46 = view_103 = None
        permute_33 = torch.ops.aten.permute.default(arg37_1, [1, 0]);  arg37_1 = None
        view_104 = torch.ops.aten.view.default(mul_1261, [arg0_1, 14336]);  mul_1261 = None
        mm_20 = torch.ops.aten.mm.default(view_104, permute_33);  view_104 = permute_33 = None
        view_105 = torch.ops.aten.view.default(mm_20, [1, arg0_1, 4096]);  mm_20 = None
        add_1028 = torch.ops.aten.add.Tensor(add_975, view_105);  add_975 = view_105 = None
        view_106 = torch.ops.aten.view.default(add_1028, [-1, 4096])
        empty_12 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_13 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_6 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 7, constant_args_idx = 6, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_12, 'X_ptr': view_106, 'W_ptr': arg38_1, 'RSTD_ptr': empty_13}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_12 = view_106 = arg38_1 = empty_13 = None
        getitem_24 = triton_kernel_wrapper_functional_proxy_6['Y_ptr'];  triton_kernel_wrapper_functional_proxy_6 = None
        permute_34 = torch.ops.aten.permute.default(arg39_1, [1, 0]);  arg39_1 = None
        view_109 = torch.ops.aten.view.default(getitem_24, [1, arg0_1, 4096])
        view_110 = torch.ops.aten.view.default(view_109, [arg0_1, 4096]);  view_109 = None
        mm_21 = torch.ops.aten.mm.default(view_110, permute_34);  view_110 = permute_34 = None
        view_111 = torch.ops.aten.view.default(mm_21, [1, arg0_1, 4096]);  mm_21 = None
        view_112 = torch.ops.aten.view.default(view_111, [1, arg0_1, -1, 128]);  view_111 = None
        permute_35 = torch.ops.aten.permute.default(view_112, [0, 2, 1, 3]);  view_112 = None
        permute_36 = torch.ops.aten.permute.default(arg40_1, [1, 0]);  arg40_1 = None
        view_114 = torch.ops.aten.view.default(getitem_24, [1, arg0_1, 4096])
        view_115 = torch.ops.aten.view.default(view_114, [arg0_1, 4096]);  view_114 = None
        mm_22 = torch.ops.aten.mm.default(view_115, permute_36);  view_115 = permute_36 = None
        view_116 = torch.ops.aten.view.default(mm_22, [1, arg0_1, 1024]);  mm_22 = None
        view_117 = torch.ops.aten.view.default(view_116, [1, arg0_1, -1, 128]);  view_116 = None
        permute_37 = torch.ops.aten.permute.default(view_117, [0, 2, 1, 3]);  view_117 = None
        permute_38 = torch.ops.aten.permute.default(arg41_1, [1, 0]);  arg41_1 = None
        view_119 = torch.ops.aten.view.default(getitem_24, [1, arg0_1, 4096]);  getitem_24 = None
        view_120 = torch.ops.aten.view.default(view_119, [arg0_1, 4096]);  view_119 = None
        mm_23 = torch.ops.aten.mm.default(view_120, permute_38);  view_120 = permute_38 = None
        view_121 = torch.ops.aten.view.default(mm_23, [1, arg0_1, 1024]);  mm_23 = None
        view_122 = torch.ops.aten.view.default(view_121, [1, arg0_1, -1, 128]);  view_121 = None
        permute_39 = torch.ops.aten.permute.default(view_122, [0, 2, 1, 3]);  view_122 = None
        unsqueeze_22 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_23 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_1363 = torch.ops.aten.mul.Tensor(permute_35, unsqueeze_22)
        slice_73 = torch.ops.aten.slice.Tensor(permute_35, 3, 0, 64)
        slice_74 = torch.ops.aten.slice.Tensor(permute_35, 3, 64, 9223372036854775807);  permute_35 = None
        neg_6 = torch.ops.aten.neg.default(slice_74);  slice_74 = None
        cat_6 = torch.ops.aten.cat.default([neg_6, slice_73], -1);  neg_6 = slice_73 = None
        mul_1380 = torch.ops.aten.mul.Tensor(cat_6, unsqueeze_23);  cat_6 = None
        add_1122 = torch.ops.aten.add.Tensor(mul_1363, mul_1380);  mul_1363 = mul_1380 = None
        mul_1388 = torch.ops.aten.mul.Tensor(permute_37, unsqueeze_22);  unsqueeze_22 = None
        slice_75 = torch.ops.aten.slice.Tensor(permute_37, 3, 0, 64)
        slice_76 = torch.ops.aten.slice.Tensor(permute_37, 3, 64, 9223372036854775807);  permute_37 = None
        neg_7 = torch.ops.aten.neg.default(slice_76);  slice_76 = None
        cat_7 = torch.ops.aten.cat.default([neg_7, slice_75], -1);  neg_7 = slice_75 = None
        mul_1405 = torch.ops.aten.mul.Tensor(cat_7, unsqueeze_23);  cat_7 = unsqueeze_23 = None
        add_1146 = torch.ops.aten.add.Tensor(mul_1388, mul_1405);  mul_1388 = mul_1405 = None
        full_default_12 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_13 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_6 = torch.ops.aten.index_put.default(full_default_12, [None, None, arg3_1], add_1146);  full_default_12 = add_1146 = None
        index_put_7 = torch.ops.aten.index_put.default(full_default_13, [None, None, arg3_1], permute_39);  full_default_13 = permute_39 = None
        unsqueeze_25 = torch.ops.aten.unsqueeze.default(index_put_6, 2)
        expand_20 = torch.ops.aten.expand.default(unsqueeze_25, [1, 8, 4, arg5_1, 128]);  unsqueeze_25 = None
        clone_11 = torch.ops.aten.clone.default(expand_20, memory_format = torch.contiguous_format);  expand_20 = None
        view_123 = torch.ops.aten.view.default(clone_11, [1, 32, arg5_1, 128]);  clone_11 = None
        unsqueeze_27 = torch.ops.aten.unsqueeze.default(index_put_7, 2)
        expand_22 = torch.ops.aten.expand.default(unsqueeze_27, [1, 8, 4, arg5_1, 128]);  unsqueeze_27 = None
        clone_12 = torch.ops.aten.clone.default(expand_22, memory_format = torch.contiguous_format);  expand_22 = None
        view_124 = torch.ops.aten.view.default(clone_12, [1, 32, arg5_1, 128]);  clone_12 = None
        clone_13 = torch.ops.aten.clone.default(add_1122, memory_format = torch.contiguous_format);  add_1122 = None
        full_default_14 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_15 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_3 = torch.ops.aten.where.self(arg6_1, full_default_15, full_default_14);  full_default_15 = full_default_14 = None
        expand_23 = torch.ops.aten.expand.default(where_3, [1, 32, arg0_1, arg5_1]);  where_3 = None
        _scaled_dot_product_efficient_attention_3 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_13, view_123, view_124, expand_23, False, scale = 0.08838834764831845);  clone_13 = view_123 = view_124 = expand_23 = None
        getitem_26 = _scaled_dot_product_efficient_attention_3[0];  _scaled_dot_product_efficient_attention_3 = None
        permute_40 = torch.ops.aten.permute.default(getitem_26, [0, 2, 1, 3]);  getitem_26 = None
        view_125 = torch.ops.aten.view.default(permute_40, [1, arg0_1, -1]);  permute_40 = None
        permute_41 = torch.ops.aten.permute.default(arg43_1, [1, 0]);  arg43_1 = None
        view_126 = torch.ops.aten.view.default(view_125, [arg0_1, 4096]);  view_125 = None
        mm_24 = torch.ops.aten.mm.default(view_126, permute_41);  view_126 = permute_41 = None
        view_127 = torch.ops.aten.view.default(mm_24, [1, arg0_1, 4096]);  mm_24 = None
        add_1304 = torch.ops.aten.add.Tensor(add_1028, view_127);  add_1028 = view_127 = None
        view_128 = torch.ops.aten.view.default(add_1304, [-1, 4096])
        empty_14 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_15 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_7 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 8, constant_args_idx = 7, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_14, 'X_ptr': view_128, 'W_ptr': arg44_1, 'RSTD_ptr': empty_15}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_14 = view_128 = arg44_1 = empty_15 = None
        getitem_30 = triton_kernel_wrapper_functional_proxy_7['Y_ptr'];  triton_kernel_wrapper_functional_proxy_7 = None
        permute_42 = torch.ops.aten.permute.default(arg45_1, [1, 0]);  arg45_1 = None
        view_131 = torch.ops.aten.view.default(getitem_30, [1, arg0_1, 4096])
        view_132 = torch.ops.aten.view.default(view_131, [arg0_1, 4096]);  view_131 = None
        mm_25 = torch.ops.aten.mm.default(view_132, permute_42);  view_132 = permute_42 = None
        view_133 = torch.ops.aten.view.default(mm_25, [1, arg0_1, 14336]);  mm_25 = None
        convert_element_type_61 = torch.ops.prims.convert_element_type.default(view_133, torch.float32);  view_133 = None
        sigmoid_3 = torch.ops.aten.sigmoid.default(convert_element_type_61)
        mul_1653 = torch.ops.aten.mul.Tensor(convert_element_type_61, sigmoid_3);  convert_element_type_61 = sigmoid_3 = None
        convert_element_type_62 = torch.ops.prims.convert_element_type.default(mul_1653, torch.float16);  mul_1653 = None
        permute_43 = torch.ops.aten.permute.default(arg46_1, [1, 0]);  arg46_1 = None
        view_135 = torch.ops.aten.view.default(getitem_30, [1, arg0_1, 4096]);  getitem_30 = None
        view_136 = torch.ops.aten.view.default(view_135, [arg0_1, 4096]);  view_135 = None
        mm_26 = torch.ops.aten.mm.default(view_136, permute_43);  view_136 = permute_43 = None
        view_137 = torch.ops.aten.view.default(mm_26, [1, arg0_1, 14336]);  mm_26 = None
        mul_1670 = torch.ops.aten.mul.Tensor(convert_element_type_62, view_137);  convert_element_type_62 = view_137 = None
        permute_44 = torch.ops.aten.permute.default(arg47_1, [1, 0]);  arg47_1 = None
        view_138 = torch.ops.aten.view.default(mul_1670, [arg0_1, 14336]);  mul_1670 = None
        mm_27 = torch.ops.aten.mm.default(view_138, permute_44);  view_138 = permute_44 = None
        view_139 = torch.ops.aten.view.default(mm_27, [1, arg0_1, 4096]);  mm_27 = None
        add_1357 = torch.ops.aten.add.Tensor(add_1304, view_139);  add_1304 = view_139 = None
        view_140 = torch.ops.aten.view.default(add_1357, [-1, 4096])
        empty_16 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_17 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_8 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 9, constant_args_idx = 8, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_16, 'X_ptr': view_140, 'W_ptr': arg48_1, 'RSTD_ptr': empty_17}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_16 = view_140 = arg48_1 = empty_17 = None
        getitem_32 = triton_kernel_wrapper_functional_proxy_8['Y_ptr'];  triton_kernel_wrapper_functional_proxy_8 = None
        permute_45 = torch.ops.aten.permute.default(arg49_1, [1, 0]);  arg49_1 = None
        view_143 = torch.ops.aten.view.default(getitem_32, [1, arg0_1, 4096])
        view_144 = torch.ops.aten.view.default(view_143, [arg0_1, 4096]);  view_143 = None
        mm_28 = torch.ops.aten.mm.default(view_144, permute_45);  view_144 = permute_45 = None
        view_145 = torch.ops.aten.view.default(mm_28, [1, arg0_1, 4096]);  mm_28 = None
        view_146 = torch.ops.aten.view.default(view_145, [1, arg0_1, -1, 128]);  view_145 = None
        permute_46 = torch.ops.aten.permute.default(view_146, [0, 2, 1, 3]);  view_146 = None
        permute_47 = torch.ops.aten.permute.default(arg50_1, [1, 0]);  arg50_1 = None
        view_148 = torch.ops.aten.view.default(getitem_32, [1, arg0_1, 4096])
        view_149 = torch.ops.aten.view.default(view_148, [arg0_1, 4096]);  view_148 = None
        mm_29 = torch.ops.aten.mm.default(view_149, permute_47);  view_149 = permute_47 = None
        view_150 = torch.ops.aten.view.default(mm_29, [1, arg0_1, 1024]);  mm_29 = None
        view_151 = torch.ops.aten.view.default(view_150, [1, arg0_1, -1, 128]);  view_150 = None
        permute_48 = torch.ops.aten.permute.default(view_151, [0, 2, 1, 3]);  view_151 = None
        permute_49 = torch.ops.aten.permute.default(arg51_1, [1, 0]);  arg51_1 = None
        view_153 = torch.ops.aten.view.default(getitem_32, [1, arg0_1, 4096]);  getitem_32 = None
        view_154 = torch.ops.aten.view.default(view_153, [arg0_1, 4096]);  view_153 = None
        mm_30 = torch.ops.aten.mm.default(view_154, permute_49);  view_154 = permute_49 = None
        view_155 = torch.ops.aten.view.default(mm_30, [1, arg0_1, 1024]);  mm_30 = None
        view_156 = torch.ops.aten.view.default(view_155, [1, arg0_1, -1, 128]);  view_155 = None
        permute_50 = torch.ops.aten.permute.default(view_156, [0, 2, 1, 3]);  view_156 = None
        unsqueeze_28 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_29 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_1772 = torch.ops.aten.mul.Tensor(permute_46, unsqueeze_28)
        slice_96 = torch.ops.aten.slice.Tensor(permute_46, 3, 0, 64)
        slice_97 = torch.ops.aten.slice.Tensor(permute_46, 3, 64, 9223372036854775807);  permute_46 = None
        neg_8 = torch.ops.aten.neg.default(slice_97);  slice_97 = None
        cat_8 = torch.ops.aten.cat.default([neg_8, slice_96], -1);  neg_8 = slice_96 = None
        mul_1789 = torch.ops.aten.mul.Tensor(cat_8, unsqueeze_29);  cat_8 = None
        add_1451 = torch.ops.aten.add.Tensor(mul_1772, mul_1789);  mul_1772 = mul_1789 = None
        mul_1797 = torch.ops.aten.mul.Tensor(permute_48, unsqueeze_28);  unsqueeze_28 = None
        slice_98 = torch.ops.aten.slice.Tensor(permute_48, 3, 0, 64)
        slice_99 = torch.ops.aten.slice.Tensor(permute_48, 3, 64, 9223372036854775807);  permute_48 = None
        neg_9 = torch.ops.aten.neg.default(slice_99);  slice_99 = None
        cat_9 = torch.ops.aten.cat.default([neg_9, slice_98], -1);  neg_9 = slice_98 = None
        mul_1814 = torch.ops.aten.mul.Tensor(cat_9, unsqueeze_29);  cat_9 = unsqueeze_29 = None
        add_1475 = torch.ops.aten.add.Tensor(mul_1797, mul_1814);  mul_1797 = mul_1814 = None
        full_default_16 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_17 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_8 = torch.ops.aten.index_put.default(full_default_16, [None, None, arg3_1], add_1475);  full_default_16 = add_1475 = None
        index_put_9 = torch.ops.aten.index_put.default(full_default_17, [None, None, arg3_1], permute_50);  full_default_17 = permute_50 = None
        unsqueeze_31 = torch.ops.aten.unsqueeze.default(index_put_8, 2)
        expand_25 = torch.ops.aten.expand.default(unsqueeze_31, [1, 8, 4, arg5_1, 128]);  unsqueeze_31 = None
        clone_14 = torch.ops.aten.clone.default(expand_25, memory_format = torch.contiguous_format);  expand_25 = None
        view_157 = torch.ops.aten.view.default(clone_14, [1, 32, arg5_1, 128]);  clone_14 = None
        unsqueeze_33 = torch.ops.aten.unsqueeze.default(index_put_9, 2)
        expand_27 = torch.ops.aten.expand.default(unsqueeze_33, [1, 8, 4, arg5_1, 128]);  unsqueeze_33 = None
        clone_15 = torch.ops.aten.clone.default(expand_27, memory_format = torch.contiguous_format);  expand_27 = None
        view_158 = torch.ops.aten.view.default(clone_15, [1, 32, arg5_1, 128]);  clone_15 = None
        clone_16 = torch.ops.aten.clone.default(add_1451, memory_format = torch.contiguous_format);  add_1451 = None
        full_default_18 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_19 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_4 = torch.ops.aten.where.self(arg6_1, full_default_19, full_default_18);  full_default_19 = full_default_18 = None
        expand_28 = torch.ops.aten.expand.default(where_4, [1, 32, arg0_1, arg5_1]);  where_4 = None
        _scaled_dot_product_efficient_attention_4 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_16, view_157, view_158, expand_28, False, scale = 0.08838834764831845);  clone_16 = view_157 = view_158 = expand_28 = None
        getitem_34 = _scaled_dot_product_efficient_attention_4[0];  _scaled_dot_product_efficient_attention_4 = None
        permute_51 = torch.ops.aten.permute.default(getitem_34, [0, 2, 1, 3]);  getitem_34 = None
        view_159 = torch.ops.aten.view.default(permute_51, [1, arg0_1, -1]);  permute_51 = None
        permute_52 = torch.ops.aten.permute.default(arg53_1, [1, 0]);  arg53_1 = None
        view_160 = torch.ops.aten.view.default(view_159, [arg0_1, 4096]);  view_159 = None
        mm_31 = torch.ops.aten.mm.default(view_160, permute_52);  view_160 = permute_52 = None
        view_161 = torch.ops.aten.view.default(mm_31, [1, arg0_1, 4096]);  mm_31 = None
        add_1633 = torch.ops.aten.add.Tensor(add_1357, view_161);  add_1357 = view_161 = None
        view_162 = torch.ops.aten.view.default(add_1633, [-1, 4096])
        empty_18 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_19 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_9 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 10, constant_args_idx = 9, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_18, 'X_ptr': view_162, 'W_ptr': arg54_1, 'RSTD_ptr': empty_19}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_18 = view_162 = arg54_1 = empty_19 = None
        getitem_38 = triton_kernel_wrapper_functional_proxy_9['Y_ptr'];  triton_kernel_wrapper_functional_proxy_9 = None
        permute_53 = torch.ops.aten.permute.default(arg55_1, [1, 0]);  arg55_1 = None
        view_165 = torch.ops.aten.view.default(getitem_38, [1, arg0_1, 4096])
        view_166 = torch.ops.aten.view.default(view_165, [arg0_1, 4096]);  view_165 = None
        mm_32 = torch.ops.aten.mm.default(view_166, permute_53);  view_166 = permute_53 = None
        view_167 = torch.ops.aten.view.default(mm_32, [1, arg0_1, 14336]);  mm_32 = None
        convert_element_type_77 = torch.ops.prims.convert_element_type.default(view_167, torch.float32);  view_167 = None
        sigmoid_4 = torch.ops.aten.sigmoid.default(convert_element_type_77)
        mul_2062 = torch.ops.aten.mul.Tensor(convert_element_type_77, sigmoid_4);  convert_element_type_77 = sigmoid_4 = None
        convert_element_type_78 = torch.ops.prims.convert_element_type.default(mul_2062, torch.float16);  mul_2062 = None
        permute_54 = torch.ops.aten.permute.default(arg56_1, [1, 0]);  arg56_1 = None
        view_169 = torch.ops.aten.view.default(getitem_38, [1, arg0_1, 4096]);  getitem_38 = None
        view_170 = torch.ops.aten.view.default(view_169, [arg0_1, 4096]);  view_169 = None
        mm_33 = torch.ops.aten.mm.default(view_170, permute_54);  view_170 = permute_54 = None
        view_171 = torch.ops.aten.view.default(mm_33, [1, arg0_1, 14336]);  mm_33 = None
        mul_2079 = torch.ops.aten.mul.Tensor(convert_element_type_78, view_171);  convert_element_type_78 = view_171 = None
        permute_55 = torch.ops.aten.permute.default(arg57_1, [1, 0]);  arg57_1 = None
        view_172 = torch.ops.aten.view.default(mul_2079, [arg0_1, 14336]);  mul_2079 = None
        mm_34 = torch.ops.aten.mm.default(view_172, permute_55);  view_172 = permute_55 = None
        view_173 = torch.ops.aten.view.default(mm_34, [1, arg0_1, 4096]);  mm_34 = None
        add_1686 = torch.ops.aten.add.Tensor(add_1633, view_173);  add_1633 = view_173 = None
        view_174 = torch.ops.aten.view.default(add_1686, [-1, 4096])
        empty_20 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_21 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_10 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 11, constant_args_idx = 10, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_20, 'X_ptr': view_174, 'W_ptr': arg58_1, 'RSTD_ptr': empty_21}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_20 = view_174 = arg58_1 = empty_21 = None
        getitem_40 = triton_kernel_wrapper_functional_proxy_10['Y_ptr'];  triton_kernel_wrapper_functional_proxy_10 = None
        permute_56 = torch.ops.aten.permute.default(arg59_1, [1, 0]);  arg59_1 = None
        view_177 = torch.ops.aten.view.default(getitem_40, [1, arg0_1, 4096])
        view_178 = torch.ops.aten.view.default(view_177, [arg0_1, 4096]);  view_177 = None
        mm_35 = torch.ops.aten.mm.default(view_178, permute_56);  view_178 = permute_56 = None
        view_179 = torch.ops.aten.view.default(mm_35, [1, arg0_1, 4096]);  mm_35 = None
        view_180 = torch.ops.aten.view.default(view_179, [1, arg0_1, -1, 128]);  view_179 = None
        permute_57 = torch.ops.aten.permute.default(view_180, [0, 2, 1, 3]);  view_180 = None
        permute_58 = torch.ops.aten.permute.default(arg60_1, [1, 0]);  arg60_1 = None
        view_182 = torch.ops.aten.view.default(getitem_40, [1, arg0_1, 4096])
        view_183 = torch.ops.aten.view.default(view_182, [arg0_1, 4096]);  view_182 = None
        mm_36 = torch.ops.aten.mm.default(view_183, permute_58);  view_183 = permute_58 = None
        view_184 = torch.ops.aten.view.default(mm_36, [1, arg0_1, 1024]);  mm_36 = None
        view_185 = torch.ops.aten.view.default(view_184, [1, arg0_1, -1, 128]);  view_184 = None
        permute_59 = torch.ops.aten.permute.default(view_185, [0, 2, 1, 3]);  view_185 = None
        permute_60 = torch.ops.aten.permute.default(arg61_1, [1, 0]);  arg61_1 = None
        view_187 = torch.ops.aten.view.default(getitem_40, [1, arg0_1, 4096]);  getitem_40 = None
        view_188 = torch.ops.aten.view.default(view_187, [arg0_1, 4096]);  view_187 = None
        mm_37 = torch.ops.aten.mm.default(view_188, permute_60);  view_188 = permute_60 = None
        view_189 = torch.ops.aten.view.default(mm_37, [1, arg0_1, 1024]);  mm_37 = None
        view_190 = torch.ops.aten.view.default(view_189, [1, arg0_1, -1, 128]);  view_189 = None
        permute_61 = torch.ops.aten.permute.default(view_190, [0, 2, 1, 3]);  view_190 = None
        unsqueeze_34 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_35 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_2181 = torch.ops.aten.mul.Tensor(permute_57, unsqueeze_34)
        slice_119 = torch.ops.aten.slice.Tensor(permute_57, 3, 0, 64)
        slice_120 = torch.ops.aten.slice.Tensor(permute_57, 3, 64, 9223372036854775807);  permute_57 = None
        neg_10 = torch.ops.aten.neg.default(slice_120);  slice_120 = None
        cat_10 = torch.ops.aten.cat.default([neg_10, slice_119], -1);  neg_10 = slice_119 = None
        mul_2198 = torch.ops.aten.mul.Tensor(cat_10, unsqueeze_35);  cat_10 = None
        add_1780 = torch.ops.aten.add.Tensor(mul_2181, mul_2198);  mul_2181 = mul_2198 = None
        mul_2206 = torch.ops.aten.mul.Tensor(permute_59, unsqueeze_34);  unsqueeze_34 = None
        slice_121 = torch.ops.aten.slice.Tensor(permute_59, 3, 0, 64)
        slice_122 = torch.ops.aten.slice.Tensor(permute_59, 3, 64, 9223372036854775807);  permute_59 = None
        neg_11 = torch.ops.aten.neg.default(slice_122);  slice_122 = None
        cat_11 = torch.ops.aten.cat.default([neg_11, slice_121], -1);  neg_11 = slice_121 = None
        mul_2223 = torch.ops.aten.mul.Tensor(cat_11, unsqueeze_35);  cat_11 = unsqueeze_35 = None
        add_1804 = torch.ops.aten.add.Tensor(mul_2206, mul_2223);  mul_2206 = mul_2223 = None
        full_default_20 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_21 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_10 = torch.ops.aten.index_put.default(full_default_20, [None, None, arg3_1], add_1804);  full_default_20 = add_1804 = None
        index_put_11 = torch.ops.aten.index_put.default(full_default_21, [None, None, arg3_1], permute_61);  full_default_21 = permute_61 = None
        unsqueeze_37 = torch.ops.aten.unsqueeze.default(index_put_10, 2)
        expand_30 = torch.ops.aten.expand.default(unsqueeze_37, [1, 8, 4, arg5_1, 128]);  unsqueeze_37 = None
        clone_17 = torch.ops.aten.clone.default(expand_30, memory_format = torch.contiguous_format);  expand_30 = None
        view_191 = torch.ops.aten.view.default(clone_17, [1, 32, arg5_1, 128]);  clone_17 = None
        unsqueeze_39 = torch.ops.aten.unsqueeze.default(index_put_11, 2)
        expand_32 = torch.ops.aten.expand.default(unsqueeze_39, [1, 8, 4, arg5_1, 128]);  unsqueeze_39 = None
        clone_18 = torch.ops.aten.clone.default(expand_32, memory_format = torch.contiguous_format);  expand_32 = None
        view_192 = torch.ops.aten.view.default(clone_18, [1, 32, arg5_1, 128]);  clone_18 = None
        clone_19 = torch.ops.aten.clone.default(add_1780, memory_format = torch.contiguous_format);  add_1780 = None
        full_default_22 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_23 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_5 = torch.ops.aten.where.self(arg6_1, full_default_23, full_default_22);  full_default_23 = full_default_22 = None
        expand_33 = torch.ops.aten.expand.default(where_5, [1, 32, arg0_1, arg5_1]);  where_5 = None
        _scaled_dot_product_efficient_attention_5 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_19, view_191, view_192, expand_33, False, scale = 0.08838834764831845);  clone_19 = view_191 = view_192 = expand_33 = None
        getitem_42 = _scaled_dot_product_efficient_attention_5[0];  _scaled_dot_product_efficient_attention_5 = None
        permute_62 = torch.ops.aten.permute.default(getitem_42, [0, 2, 1, 3]);  getitem_42 = None
        view_193 = torch.ops.aten.view.default(permute_62, [1, arg0_1, -1]);  permute_62 = None
        permute_63 = torch.ops.aten.permute.default(arg63_1, [1, 0]);  arg63_1 = None
        view_194 = torch.ops.aten.view.default(view_193, [arg0_1, 4096]);  view_193 = None
        mm_38 = torch.ops.aten.mm.default(view_194, permute_63);  view_194 = permute_63 = None
        view_195 = torch.ops.aten.view.default(mm_38, [1, arg0_1, 4096]);  mm_38 = None
        add_1962 = torch.ops.aten.add.Tensor(add_1686, view_195);  add_1686 = view_195 = None
        view_196 = torch.ops.aten.view.default(add_1962, [-1, 4096])
        empty_22 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_23 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_11 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 12, constant_args_idx = 11, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_22, 'X_ptr': view_196, 'W_ptr': arg64_1, 'RSTD_ptr': empty_23}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_22 = view_196 = arg64_1 = empty_23 = None
        getitem_46 = triton_kernel_wrapper_functional_proxy_11['Y_ptr'];  triton_kernel_wrapper_functional_proxy_11 = None
        permute_64 = torch.ops.aten.permute.default(arg65_1, [1, 0]);  arg65_1 = None
        view_199 = torch.ops.aten.view.default(getitem_46, [1, arg0_1, 4096])
        view_200 = torch.ops.aten.view.default(view_199, [arg0_1, 4096]);  view_199 = None
        mm_39 = torch.ops.aten.mm.default(view_200, permute_64);  view_200 = permute_64 = None
        view_201 = torch.ops.aten.view.default(mm_39, [1, arg0_1, 14336]);  mm_39 = None
        convert_element_type_93 = torch.ops.prims.convert_element_type.default(view_201, torch.float32);  view_201 = None
        sigmoid_5 = torch.ops.aten.sigmoid.default(convert_element_type_93)
        mul_2471 = torch.ops.aten.mul.Tensor(convert_element_type_93, sigmoid_5);  convert_element_type_93 = sigmoid_5 = None
        convert_element_type_94 = torch.ops.prims.convert_element_type.default(mul_2471, torch.float16);  mul_2471 = None
        permute_65 = torch.ops.aten.permute.default(arg66_1, [1, 0]);  arg66_1 = None
        view_203 = torch.ops.aten.view.default(getitem_46, [1, arg0_1, 4096]);  getitem_46 = None
        view_204 = torch.ops.aten.view.default(view_203, [arg0_1, 4096]);  view_203 = None
        mm_40 = torch.ops.aten.mm.default(view_204, permute_65);  view_204 = permute_65 = None
        view_205 = torch.ops.aten.view.default(mm_40, [1, arg0_1, 14336]);  mm_40 = None
        mul_2488 = torch.ops.aten.mul.Tensor(convert_element_type_94, view_205);  convert_element_type_94 = view_205 = None
        permute_66 = torch.ops.aten.permute.default(arg67_1, [1, 0]);  arg67_1 = None
        view_206 = torch.ops.aten.view.default(mul_2488, [arg0_1, 14336]);  mul_2488 = None
        mm_41 = torch.ops.aten.mm.default(view_206, permute_66);  view_206 = permute_66 = None
        view_207 = torch.ops.aten.view.default(mm_41, [1, arg0_1, 4096]);  mm_41 = None
        add_2015 = torch.ops.aten.add.Tensor(add_1962, view_207);  add_1962 = view_207 = None
        view_208 = torch.ops.aten.view.default(add_2015, [-1, 4096])
        empty_24 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_25 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_12 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 13, constant_args_idx = 12, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_24, 'X_ptr': view_208, 'W_ptr': arg68_1, 'RSTD_ptr': empty_25}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_24 = view_208 = arg68_1 = empty_25 = None
        getitem_48 = triton_kernel_wrapper_functional_proxy_12['Y_ptr'];  triton_kernel_wrapper_functional_proxy_12 = None
        permute_67 = torch.ops.aten.permute.default(arg69_1, [1, 0]);  arg69_1 = None
        view_211 = torch.ops.aten.view.default(getitem_48, [1, arg0_1, 4096])
        view_212 = torch.ops.aten.view.default(view_211, [arg0_1, 4096]);  view_211 = None
        mm_42 = torch.ops.aten.mm.default(view_212, permute_67);  view_212 = permute_67 = None
        view_213 = torch.ops.aten.view.default(mm_42, [1, arg0_1, 4096]);  mm_42 = None
        view_214 = torch.ops.aten.view.default(view_213, [1, arg0_1, -1, 128]);  view_213 = None
        permute_68 = torch.ops.aten.permute.default(view_214, [0, 2, 1, 3]);  view_214 = None
        permute_69 = torch.ops.aten.permute.default(arg70_1, [1, 0]);  arg70_1 = None
        view_216 = torch.ops.aten.view.default(getitem_48, [1, arg0_1, 4096])
        view_217 = torch.ops.aten.view.default(view_216, [arg0_1, 4096]);  view_216 = None
        mm_43 = torch.ops.aten.mm.default(view_217, permute_69);  view_217 = permute_69 = None
        view_218 = torch.ops.aten.view.default(mm_43, [1, arg0_1, 1024]);  mm_43 = None
        view_219 = torch.ops.aten.view.default(view_218, [1, arg0_1, -1, 128]);  view_218 = None
        permute_70 = torch.ops.aten.permute.default(view_219, [0, 2, 1, 3]);  view_219 = None
        permute_71 = torch.ops.aten.permute.default(arg71_1, [1, 0]);  arg71_1 = None
        view_221 = torch.ops.aten.view.default(getitem_48, [1, arg0_1, 4096]);  getitem_48 = None
        view_222 = torch.ops.aten.view.default(view_221, [arg0_1, 4096]);  view_221 = None
        mm_44 = torch.ops.aten.mm.default(view_222, permute_71);  view_222 = permute_71 = None
        view_223 = torch.ops.aten.view.default(mm_44, [1, arg0_1, 1024]);  mm_44 = None
        view_224 = torch.ops.aten.view.default(view_223, [1, arg0_1, -1, 128]);  view_223 = None
        permute_72 = torch.ops.aten.permute.default(view_224, [0, 2, 1, 3]);  view_224 = None
        unsqueeze_40 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_41 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_2590 = torch.ops.aten.mul.Tensor(permute_68, unsqueeze_40)
        slice_142 = torch.ops.aten.slice.Tensor(permute_68, 3, 0, 64)
        slice_143 = torch.ops.aten.slice.Tensor(permute_68, 3, 64, 9223372036854775807);  permute_68 = None
        neg_12 = torch.ops.aten.neg.default(slice_143);  slice_143 = None
        cat_12 = torch.ops.aten.cat.default([neg_12, slice_142], -1);  neg_12 = slice_142 = None
        mul_2607 = torch.ops.aten.mul.Tensor(cat_12, unsqueeze_41);  cat_12 = None
        add_2109 = torch.ops.aten.add.Tensor(mul_2590, mul_2607);  mul_2590 = mul_2607 = None
        mul_2615 = torch.ops.aten.mul.Tensor(permute_70, unsqueeze_40);  unsqueeze_40 = None
        slice_144 = torch.ops.aten.slice.Tensor(permute_70, 3, 0, 64)
        slice_145 = torch.ops.aten.slice.Tensor(permute_70, 3, 64, 9223372036854775807);  permute_70 = None
        neg_13 = torch.ops.aten.neg.default(slice_145);  slice_145 = None
        cat_13 = torch.ops.aten.cat.default([neg_13, slice_144], -1);  neg_13 = slice_144 = None
        mul_2632 = torch.ops.aten.mul.Tensor(cat_13, unsqueeze_41);  cat_13 = unsqueeze_41 = None
        add_2133 = torch.ops.aten.add.Tensor(mul_2615, mul_2632);  mul_2615 = mul_2632 = None
        full_default_24 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_25 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_12 = torch.ops.aten.index_put.default(full_default_24, [None, None, arg3_1], add_2133);  full_default_24 = add_2133 = None
        index_put_13 = torch.ops.aten.index_put.default(full_default_25, [None, None, arg3_1], permute_72);  full_default_25 = permute_72 = None
        unsqueeze_43 = torch.ops.aten.unsqueeze.default(index_put_12, 2)
        expand_35 = torch.ops.aten.expand.default(unsqueeze_43, [1, 8, 4, arg5_1, 128]);  unsqueeze_43 = None
        clone_20 = torch.ops.aten.clone.default(expand_35, memory_format = torch.contiguous_format);  expand_35 = None
        view_225 = torch.ops.aten.view.default(clone_20, [1, 32, arg5_1, 128]);  clone_20 = None
        unsqueeze_45 = torch.ops.aten.unsqueeze.default(index_put_13, 2)
        expand_37 = torch.ops.aten.expand.default(unsqueeze_45, [1, 8, 4, arg5_1, 128]);  unsqueeze_45 = None
        clone_21 = torch.ops.aten.clone.default(expand_37, memory_format = torch.contiguous_format);  expand_37 = None
        view_226 = torch.ops.aten.view.default(clone_21, [1, 32, arg5_1, 128]);  clone_21 = None
        clone_22 = torch.ops.aten.clone.default(add_2109, memory_format = torch.contiguous_format);  add_2109 = None
        full_default_26 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_27 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_6 = torch.ops.aten.where.self(arg6_1, full_default_27, full_default_26);  full_default_27 = full_default_26 = None
        expand_38 = torch.ops.aten.expand.default(where_6, [1, 32, arg0_1, arg5_1]);  where_6 = None
        _scaled_dot_product_efficient_attention_6 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_22, view_225, view_226, expand_38, False, scale = 0.08838834764831845);  clone_22 = view_225 = view_226 = expand_38 = None
        getitem_50 = _scaled_dot_product_efficient_attention_6[0];  _scaled_dot_product_efficient_attention_6 = None
        permute_73 = torch.ops.aten.permute.default(getitem_50, [0, 2, 1, 3]);  getitem_50 = None
        view_227 = torch.ops.aten.view.default(permute_73, [1, arg0_1, -1]);  permute_73 = None
        permute_74 = torch.ops.aten.permute.default(arg73_1, [1, 0]);  arg73_1 = None
        view_228 = torch.ops.aten.view.default(view_227, [arg0_1, 4096]);  view_227 = None
        mm_45 = torch.ops.aten.mm.default(view_228, permute_74);  view_228 = permute_74 = None
        view_229 = torch.ops.aten.view.default(mm_45, [1, arg0_1, 4096]);  mm_45 = None
        add_2291 = torch.ops.aten.add.Tensor(add_2015, view_229);  add_2015 = view_229 = None
        view_230 = torch.ops.aten.view.default(add_2291, [-1, 4096])
        empty_26 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_27 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_13 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 14, constant_args_idx = 13, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_26, 'X_ptr': view_230, 'W_ptr': arg74_1, 'RSTD_ptr': empty_27}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_26 = view_230 = arg74_1 = empty_27 = None
        getitem_54 = triton_kernel_wrapper_functional_proxy_13['Y_ptr'];  triton_kernel_wrapper_functional_proxy_13 = None
        permute_75 = torch.ops.aten.permute.default(arg75_1, [1, 0]);  arg75_1 = None
        view_233 = torch.ops.aten.view.default(getitem_54, [1, arg0_1, 4096])
        view_234 = torch.ops.aten.view.default(view_233, [arg0_1, 4096]);  view_233 = None
        mm_46 = torch.ops.aten.mm.default(view_234, permute_75);  view_234 = permute_75 = None
        view_235 = torch.ops.aten.view.default(mm_46, [1, arg0_1, 14336]);  mm_46 = None
        convert_element_type_109 = torch.ops.prims.convert_element_type.default(view_235, torch.float32);  view_235 = None
        sigmoid_6 = torch.ops.aten.sigmoid.default(convert_element_type_109)
        mul_2880 = torch.ops.aten.mul.Tensor(convert_element_type_109, sigmoid_6);  convert_element_type_109 = sigmoid_6 = None
        convert_element_type_110 = torch.ops.prims.convert_element_type.default(mul_2880, torch.float16);  mul_2880 = None
        permute_76 = torch.ops.aten.permute.default(arg76_1, [1, 0]);  arg76_1 = None
        view_237 = torch.ops.aten.view.default(getitem_54, [1, arg0_1, 4096]);  getitem_54 = None
        view_238 = torch.ops.aten.view.default(view_237, [arg0_1, 4096]);  view_237 = None
        mm_47 = torch.ops.aten.mm.default(view_238, permute_76);  view_238 = permute_76 = None
        view_239 = torch.ops.aten.view.default(mm_47, [1, arg0_1, 14336]);  mm_47 = None
        mul_2897 = torch.ops.aten.mul.Tensor(convert_element_type_110, view_239);  convert_element_type_110 = view_239 = None
        permute_77 = torch.ops.aten.permute.default(arg77_1, [1, 0]);  arg77_1 = None
        view_240 = torch.ops.aten.view.default(mul_2897, [arg0_1, 14336]);  mul_2897 = None
        mm_48 = torch.ops.aten.mm.default(view_240, permute_77);  view_240 = permute_77 = None
        view_241 = torch.ops.aten.view.default(mm_48, [1, arg0_1, 4096]);  mm_48 = None
        add_2344 = torch.ops.aten.add.Tensor(add_2291, view_241);  add_2291 = view_241 = None
        view_242 = torch.ops.aten.view.default(add_2344, [-1, 4096])
        empty_28 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_29 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_14 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 15, constant_args_idx = 14, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_28, 'X_ptr': view_242, 'W_ptr': arg78_1, 'RSTD_ptr': empty_29}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_28 = view_242 = arg78_1 = empty_29 = None
        getitem_56 = triton_kernel_wrapper_functional_proxy_14['Y_ptr'];  triton_kernel_wrapper_functional_proxy_14 = None
        permute_78 = torch.ops.aten.permute.default(arg79_1, [1, 0]);  arg79_1 = None
        view_245 = torch.ops.aten.view.default(getitem_56, [1, arg0_1, 4096])
        view_246 = torch.ops.aten.view.default(view_245, [arg0_1, 4096]);  view_245 = None
        mm_49 = torch.ops.aten.mm.default(view_246, permute_78);  view_246 = permute_78 = None
        view_247 = torch.ops.aten.view.default(mm_49, [1, arg0_1, 4096]);  mm_49 = None
        view_248 = torch.ops.aten.view.default(view_247, [1, arg0_1, -1, 128]);  view_247 = None
        permute_79 = torch.ops.aten.permute.default(view_248, [0, 2, 1, 3]);  view_248 = None
        permute_80 = torch.ops.aten.permute.default(arg80_1, [1, 0]);  arg80_1 = None
        view_250 = torch.ops.aten.view.default(getitem_56, [1, arg0_1, 4096])
        view_251 = torch.ops.aten.view.default(view_250, [arg0_1, 4096]);  view_250 = None
        mm_50 = torch.ops.aten.mm.default(view_251, permute_80);  view_251 = permute_80 = None
        view_252 = torch.ops.aten.view.default(mm_50, [1, arg0_1, 1024]);  mm_50 = None
        view_253 = torch.ops.aten.view.default(view_252, [1, arg0_1, -1, 128]);  view_252 = None
        permute_81 = torch.ops.aten.permute.default(view_253, [0, 2, 1, 3]);  view_253 = None
        permute_82 = torch.ops.aten.permute.default(arg81_1, [1, 0]);  arg81_1 = None
        view_255 = torch.ops.aten.view.default(getitem_56, [1, arg0_1, 4096]);  getitem_56 = None
        view_256 = torch.ops.aten.view.default(view_255, [arg0_1, 4096]);  view_255 = None
        mm_51 = torch.ops.aten.mm.default(view_256, permute_82);  view_256 = permute_82 = None
        view_257 = torch.ops.aten.view.default(mm_51, [1, arg0_1, 1024]);  mm_51 = None
        view_258 = torch.ops.aten.view.default(view_257, [1, arg0_1, -1, 128]);  view_257 = None
        permute_83 = torch.ops.aten.permute.default(view_258, [0, 2, 1, 3]);  view_258 = None
        unsqueeze_46 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_47 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_2999 = torch.ops.aten.mul.Tensor(permute_79, unsqueeze_46)
        slice_165 = torch.ops.aten.slice.Tensor(permute_79, 3, 0, 64)
        slice_166 = torch.ops.aten.slice.Tensor(permute_79, 3, 64, 9223372036854775807);  permute_79 = None
        neg_14 = torch.ops.aten.neg.default(slice_166);  slice_166 = None
        cat_14 = torch.ops.aten.cat.default([neg_14, slice_165], -1);  neg_14 = slice_165 = None
        mul_3016 = torch.ops.aten.mul.Tensor(cat_14, unsqueeze_47);  cat_14 = None
        add_2438 = torch.ops.aten.add.Tensor(mul_2999, mul_3016);  mul_2999 = mul_3016 = None
        mul_3024 = torch.ops.aten.mul.Tensor(permute_81, unsqueeze_46);  unsqueeze_46 = None
        slice_167 = torch.ops.aten.slice.Tensor(permute_81, 3, 0, 64)
        slice_168 = torch.ops.aten.slice.Tensor(permute_81, 3, 64, 9223372036854775807);  permute_81 = None
        neg_15 = torch.ops.aten.neg.default(slice_168);  slice_168 = None
        cat_15 = torch.ops.aten.cat.default([neg_15, slice_167], -1);  neg_15 = slice_167 = None
        mul_3041 = torch.ops.aten.mul.Tensor(cat_15, unsqueeze_47);  cat_15 = unsqueeze_47 = None
        add_2462 = torch.ops.aten.add.Tensor(mul_3024, mul_3041);  mul_3024 = mul_3041 = None
        full_default_28 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_29 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_14 = torch.ops.aten.index_put.default(full_default_28, [None, None, arg3_1], add_2462);  full_default_28 = add_2462 = None
        index_put_15 = torch.ops.aten.index_put.default(full_default_29, [None, None, arg3_1], permute_83);  full_default_29 = permute_83 = None
        unsqueeze_49 = torch.ops.aten.unsqueeze.default(index_put_14, 2)
        expand_40 = torch.ops.aten.expand.default(unsqueeze_49, [1, 8, 4, arg5_1, 128]);  unsqueeze_49 = None
        clone_23 = torch.ops.aten.clone.default(expand_40, memory_format = torch.contiguous_format);  expand_40 = None
        view_259 = torch.ops.aten.view.default(clone_23, [1, 32, arg5_1, 128]);  clone_23 = None
        unsqueeze_51 = torch.ops.aten.unsqueeze.default(index_put_15, 2)
        expand_42 = torch.ops.aten.expand.default(unsqueeze_51, [1, 8, 4, arg5_1, 128]);  unsqueeze_51 = None
        clone_24 = torch.ops.aten.clone.default(expand_42, memory_format = torch.contiguous_format);  expand_42 = None
        view_260 = torch.ops.aten.view.default(clone_24, [1, 32, arg5_1, 128]);  clone_24 = None
        clone_25 = torch.ops.aten.clone.default(add_2438, memory_format = torch.contiguous_format);  add_2438 = None
        full_default_30 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_31 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_7 = torch.ops.aten.where.self(arg6_1, full_default_31, full_default_30);  full_default_31 = full_default_30 = None
        expand_43 = torch.ops.aten.expand.default(where_7, [1, 32, arg0_1, arg5_1]);  where_7 = None
        _scaled_dot_product_efficient_attention_7 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_25, view_259, view_260, expand_43, False, scale = 0.08838834764831845);  clone_25 = view_259 = view_260 = expand_43 = None
        getitem_58 = _scaled_dot_product_efficient_attention_7[0];  _scaled_dot_product_efficient_attention_7 = None
        permute_84 = torch.ops.aten.permute.default(getitem_58, [0, 2, 1, 3]);  getitem_58 = None
        view_261 = torch.ops.aten.view.default(permute_84, [1, arg0_1, -1]);  permute_84 = None
        permute_85 = torch.ops.aten.permute.default(arg83_1, [1, 0]);  arg83_1 = None
        view_262 = torch.ops.aten.view.default(view_261, [arg0_1, 4096]);  view_261 = None
        mm_52 = torch.ops.aten.mm.default(view_262, permute_85);  view_262 = permute_85 = None
        view_263 = torch.ops.aten.view.default(mm_52, [1, arg0_1, 4096]);  mm_52 = None
        add_2620 = torch.ops.aten.add.Tensor(add_2344, view_263);  add_2344 = view_263 = None
        view_264 = torch.ops.aten.view.default(add_2620, [-1, 4096])
        empty_30 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_31 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_15 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 16, constant_args_idx = 15, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_30, 'X_ptr': view_264, 'W_ptr': arg84_1, 'RSTD_ptr': empty_31}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_30 = view_264 = arg84_1 = empty_31 = None
        getitem_62 = triton_kernel_wrapper_functional_proxy_15['Y_ptr'];  triton_kernel_wrapper_functional_proxy_15 = None
        permute_86 = torch.ops.aten.permute.default(arg85_1, [1, 0]);  arg85_1 = None
        view_267 = torch.ops.aten.view.default(getitem_62, [1, arg0_1, 4096])
        view_268 = torch.ops.aten.view.default(view_267, [arg0_1, 4096]);  view_267 = None
        mm_53 = torch.ops.aten.mm.default(view_268, permute_86);  view_268 = permute_86 = None
        view_269 = torch.ops.aten.view.default(mm_53, [1, arg0_1, 14336]);  mm_53 = None
        convert_element_type_125 = torch.ops.prims.convert_element_type.default(view_269, torch.float32);  view_269 = None
        sigmoid_7 = torch.ops.aten.sigmoid.default(convert_element_type_125)
        mul_3289 = torch.ops.aten.mul.Tensor(convert_element_type_125, sigmoid_7);  convert_element_type_125 = sigmoid_7 = None
        convert_element_type_126 = torch.ops.prims.convert_element_type.default(mul_3289, torch.float16);  mul_3289 = None
        permute_87 = torch.ops.aten.permute.default(arg86_1, [1, 0]);  arg86_1 = None
        view_271 = torch.ops.aten.view.default(getitem_62, [1, arg0_1, 4096]);  getitem_62 = None
        view_272 = torch.ops.aten.view.default(view_271, [arg0_1, 4096]);  view_271 = None
        mm_54 = torch.ops.aten.mm.default(view_272, permute_87);  view_272 = permute_87 = None
        view_273 = torch.ops.aten.view.default(mm_54, [1, arg0_1, 14336]);  mm_54 = None
        mul_3306 = torch.ops.aten.mul.Tensor(convert_element_type_126, view_273);  convert_element_type_126 = view_273 = None
        permute_88 = torch.ops.aten.permute.default(arg87_1, [1, 0]);  arg87_1 = None
        view_274 = torch.ops.aten.view.default(mul_3306, [arg0_1, 14336]);  mul_3306 = None
        mm_55 = torch.ops.aten.mm.default(view_274, permute_88);  view_274 = permute_88 = None
        view_275 = torch.ops.aten.view.default(mm_55, [1, arg0_1, 4096]);  mm_55 = None
        add_2673 = torch.ops.aten.add.Tensor(add_2620, view_275);  add_2620 = view_275 = None
        view_276 = torch.ops.aten.view.default(add_2673, [-1, 4096])
        empty_32 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_33 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_16 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 17, constant_args_idx = 16, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_32, 'X_ptr': view_276, 'W_ptr': arg88_1, 'RSTD_ptr': empty_33}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_32 = view_276 = arg88_1 = empty_33 = None
        getitem_64 = triton_kernel_wrapper_functional_proxy_16['Y_ptr'];  triton_kernel_wrapper_functional_proxy_16 = None
        permute_89 = torch.ops.aten.permute.default(arg89_1, [1, 0]);  arg89_1 = None
        view_279 = torch.ops.aten.view.default(getitem_64, [1, arg0_1, 4096])
        view_280 = torch.ops.aten.view.default(view_279, [arg0_1, 4096]);  view_279 = None
        mm_56 = torch.ops.aten.mm.default(view_280, permute_89);  view_280 = permute_89 = None
        view_281 = torch.ops.aten.view.default(mm_56, [1, arg0_1, 4096]);  mm_56 = None
        view_282 = torch.ops.aten.view.default(view_281, [1, arg0_1, -1, 128]);  view_281 = None
        permute_90 = torch.ops.aten.permute.default(view_282, [0, 2, 1, 3]);  view_282 = None
        permute_91 = torch.ops.aten.permute.default(arg90_1, [1, 0]);  arg90_1 = None
        view_284 = torch.ops.aten.view.default(getitem_64, [1, arg0_1, 4096])
        view_285 = torch.ops.aten.view.default(view_284, [arg0_1, 4096]);  view_284 = None
        mm_57 = torch.ops.aten.mm.default(view_285, permute_91);  view_285 = permute_91 = None
        view_286 = torch.ops.aten.view.default(mm_57, [1, arg0_1, 1024]);  mm_57 = None
        view_287 = torch.ops.aten.view.default(view_286, [1, arg0_1, -1, 128]);  view_286 = None
        permute_92 = torch.ops.aten.permute.default(view_287, [0, 2, 1, 3]);  view_287 = None
        permute_93 = torch.ops.aten.permute.default(arg91_1, [1, 0]);  arg91_1 = None
        view_289 = torch.ops.aten.view.default(getitem_64, [1, arg0_1, 4096]);  getitem_64 = None
        view_290 = torch.ops.aten.view.default(view_289, [arg0_1, 4096]);  view_289 = None
        mm_58 = torch.ops.aten.mm.default(view_290, permute_93);  view_290 = permute_93 = None
        view_291 = torch.ops.aten.view.default(mm_58, [1, arg0_1, 1024]);  mm_58 = None
        view_292 = torch.ops.aten.view.default(view_291, [1, arg0_1, -1, 128]);  view_291 = None
        permute_94 = torch.ops.aten.permute.default(view_292, [0, 2, 1, 3]);  view_292 = None
        unsqueeze_52 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_53 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_3408 = torch.ops.aten.mul.Tensor(permute_90, unsqueeze_52)
        slice_188 = torch.ops.aten.slice.Tensor(permute_90, 3, 0, 64)
        slice_189 = torch.ops.aten.slice.Tensor(permute_90, 3, 64, 9223372036854775807);  permute_90 = None
        neg_16 = torch.ops.aten.neg.default(slice_189);  slice_189 = None
        cat_16 = torch.ops.aten.cat.default([neg_16, slice_188], -1);  neg_16 = slice_188 = None
        mul_3425 = torch.ops.aten.mul.Tensor(cat_16, unsqueeze_53);  cat_16 = None
        add_2767 = torch.ops.aten.add.Tensor(mul_3408, mul_3425);  mul_3408 = mul_3425 = None
        mul_3433 = torch.ops.aten.mul.Tensor(permute_92, unsqueeze_52);  unsqueeze_52 = None
        slice_190 = torch.ops.aten.slice.Tensor(permute_92, 3, 0, 64)
        slice_191 = torch.ops.aten.slice.Tensor(permute_92, 3, 64, 9223372036854775807);  permute_92 = None
        neg_17 = torch.ops.aten.neg.default(slice_191);  slice_191 = None
        cat_17 = torch.ops.aten.cat.default([neg_17, slice_190], -1);  neg_17 = slice_190 = None
        mul_3450 = torch.ops.aten.mul.Tensor(cat_17, unsqueeze_53);  cat_17 = unsqueeze_53 = None
        add_2791 = torch.ops.aten.add.Tensor(mul_3433, mul_3450);  mul_3433 = mul_3450 = None
        full_default_32 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_33 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_16 = torch.ops.aten.index_put.default(full_default_32, [None, None, arg3_1], add_2791);  full_default_32 = add_2791 = None
        index_put_17 = torch.ops.aten.index_put.default(full_default_33, [None, None, arg3_1], permute_94);  full_default_33 = permute_94 = None
        unsqueeze_55 = torch.ops.aten.unsqueeze.default(index_put_16, 2)
        expand_45 = torch.ops.aten.expand.default(unsqueeze_55, [1, 8, 4, arg5_1, 128]);  unsqueeze_55 = None
        clone_26 = torch.ops.aten.clone.default(expand_45, memory_format = torch.contiguous_format);  expand_45 = None
        view_293 = torch.ops.aten.view.default(clone_26, [1, 32, arg5_1, 128]);  clone_26 = None
        unsqueeze_57 = torch.ops.aten.unsqueeze.default(index_put_17, 2)
        expand_47 = torch.ops.aten.expand.default(unsqueeze_57, [1, 8, 4, arg5_1, 128]);  unsqueeze_57 = None
        clone_27 = torch.ops.aten.clone.default(expand_47, memory_format = torch.contiguous_format);  expand_47 = None
        view_294 = torch.ops.aten.view.default(clone_27, [1, 32, arg5_1, 128]);  clone_27 = None
        clone_28 = torch.ops.aten.clone.default(add_2767, memory_format = torch.contiguous_format);  add_2767 = None
        full_default_34 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_35 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_8 = torch.ops.aten.where.self(arg6_1, full_default_35, full_default_34);  full_default_35 = full_default_34 = None
        expand_48 = torch.ops.aten.expand.default(where_8, [1, 32, arg0_1, arg5_1]);  where_8 = None
        _scaled_dot_product_efficient_attention_8 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_28, view_293, view_294, expand_48, False, scale = 0.08838834764831845);  clone_28 = view_293 = view_294 = expand_48 = None
        getitem_66 = _scaled_dot_product_efficient_attention_8[0];  _scaled_dot_product_efficient_attention_8 = None
        permute_95 = torch.ops.aten.permute.default(getitem_66, [0, 2, 1, 3]);  getitem_66 = None
        view_295 = torch.ops.aten.view.default(permute_95, [1, arg0_1, -1]);  permute_95 = None
        permute_96 = torch.ops.aten.permute.default(arg93_1, [1, 0]);  arg93_1 = None
        view_296 = torch.ops.aten.view.default(view_295, [arg0_1, 4096]);  view_295 = None
        mm_59 = torch.ops.aten.mm.default(view_296, permute_96);  view_296 = permute_96 = None
        view_297 = torch.ops.aten.view.default(mm_59, [1, arg0_1, 4096]);  mm_59 = None
        add_2949 = torch.ops.aten.add.Tensor(add_2673, view_297);  add_2673 = view_297 = None
        view_298 = torch.ops.aten.view.default(add_2949, [-1, 4096])
        empty_34 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_35 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_17 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 18, constant_args_idx = 17, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_34, 'X_ptr': view_298, 'W_ptr': arg94_1, 'RSTD_ptr': empty_35}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_34 = view_298 = arg94_1 = empty_35 = None
        getitem_70 = triton_kernel_wrapper_functional_proxy_17['Y_ptr'];  triton_kernel_wrapper_functional_proxy_17 = None
        permute_97 = torch.ops.aten.permute.default(arg95_1, [1, 0]);  arg95_1 = None
        view_301 = torch.ops.aten.view.default(getitem_70, [1, arg0_1, 4096])
        view_302 = torch.ops.aten.view.default(view_301, [arg0_1, 4096]);  view_301 = None
        mm_60 = torch.ops.aten.mm.default(view_302, permute_97);  view_302 = permute_97 = None
        view_303 = torch.ops.aten.view.default(mm_60, [1, arg0_1, 14336]);  mm_60 = None
        convert_element_type_141 = torch.ops.prims.convert_element_type.default(view_303, torch.float32);  view_303 = None
        sigmoid_8 = torch.ops.aten.sigmoid.default(convert_element_type_141)
        mul_3698 = torch.ops.aten.mul.Tensor(convert_element_type_141, sigmoid_8);  convert_element_type_141 = sigmoid_8 = None
        convert_element_type_142 = torch.ops.prims.convert_element_type.default(mul_3698, torch.float16);  mul_3698 = None
        permute_98 = torch.ops.aten.permute.default(arg96_1, [1, 0]);  arg96_1 = None
        view_305 = torch.ops.aten.view.default(getitem_70, [1, arg0_1, 4096]);  getitem_70 = None
        view_306 = torch.ops.aten.view.default(view_305, [arg0_1, 4096]);  view_305 = None
        mm_61 = torch.ops.aten.mm.default(view_306, permute_98);  view_306 = permute_98 = None
        view_307 = torch.ops.aten.view.default(mm_61, [1, arg0_1, 14336]);  mm_61 = None
        mul_3715 = torch.ops.aten.mul.Tensor(convert_element_type_142, view_307);  convert_element_type_142 = view_307 = None
        permute_99 = torch.ops.aten.permute.default(arg97_1, [1, 0]);  arg97_1 = None
        view_308 = torch.ops.aten.view.default(mul_3715, [arg0_1, 14336]);  mul_3715 = None
        mm_62 = torch.ops.aten.mm.default(view_308, permute_99);  view_308 = permute_99 = None
        view_309 = torch.ops.aten.view.default(mm_62, [1, arg0_1, 4096]);  mm_62 = None
        add_3002 = torch.ops.aten.add.Tensor(add_2949, view_309);  add_2949 = view_309 = None
        view_310 = torch.ops.aten.view.default(add_3002, [-1, 4096])
        empty_36 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_37 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_18 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 19, constant_args_idx = 18, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_36, 'X_ptr': view_310, 'W_ptr': arg98_1, 'RSTD_ptr': empty_37}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_36 = view_310 = arg98_1 = empty_37 = None
        getitem_72 = triton_kernel_wrapper_functional_proxy_18['Y_ptr'];  triton_kernel_wrapper_functional_proxy_18 = None
        permute_100 = torch.ops.aten.permute.default(arg99_1, [1, 0]);  arg99_1 = None
        view_313 = torch.ops.aten.view.default(getitem_72, [1, arg0_1, 4096])
        view_314 = torch.ops.aten.view.default(view_313, [arg0_1, 4096]);  view_313 = None
        mm_63 = torch.ops.aten.mm.default(view_314, permute_100);  view_314 = permute_100 = None
        view_315 = torch.ops.aten.view.default(mm_63, [1, arg0_1, 4096]);  mm_63 = None
        view_316 = torch.ops.aten.view.default(view_315, [1, arg0_1, -1, 128]);  view_315 = None
        permute_101 = torch.ops.aten.permute.default(view_316, [0, 2, 1, 3]);  view_316 = None
        permute_102 = torch.ops.aten.permute.default(arg100_1, [1, 0]);  arg100_1 = None
        view_318 = torch.ops.aten.view.default(getitem_72, [1, arg0_1, 4096])
        view_319 = torch.ops.aten.view.default(view_318, [arg0_1, 4096]);  view_318 = None
        mm_64 = torch.ops.aten.mm.default(view_319, permute_102);  view_319 = permute_102 = None
        view_320 = torch.ops.aten.view.default(mm_64, [1, arg0_1, 1024]);  mm_64 = None
        view_321 = torch.ops.aten.view.default(view_320, [1, arg0_1, -1, 128]);  view_320 = None
        permute_103 = torch.ops.aten.permute.default(view_321, [0, 2, 1, 3]);  view_321 = None
        permute_104 = torch.ops.aten.permute.default(arg101_1, [1, 0]);  arg101_1 = None
        view_323 = torch.ops.aten.view.default(getitem_72, [1, arg0_1, 4096]);  getitem_72 = None
        view_324 = torch.ops.aten.view.default(view_323, [arg0_1, 4096]);  view_323 = None
        mm_65 = torch.ops.aten.mm.default(view_324, permute_104);  view_324 = permute_104 = None
        view_325 = torch.ops.aten.view.default(mm_65, [1, arg0_1, 1024]);  mm_65 = None
        view_326 = torch.ops.aten.view.default(view_325, [1, arg0_1, -1, 128]);  view_325 = None
        permute_105 = torch.ops.aten.permute.default(view_326, [0, 2, 1, 3]);  view_326 = None
        unsqueeze_58 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_59 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_3817 = torch.ops.aten.mul.Tensor(permute_101, unsqueeze_58)
        slice_211 = torch.ops.aten.slice.Tensor(permute_101, 3, 0, 64)
        slice_212 = torch.ops.aten.slice.Tensor(permute_101, 3, 64, 9223372036854775807);  permute_101 = None
        neg_18 = torch.ops.aten.neg.default(slice_212);  slice_212 = None
        cat_18 = torch.ops.aten.cat.default([neg_18, slice_211], -1);  neg_18 = slice_211 = None
        mul_3834 = torch.ops.aten.mul.Tensor(cat_18, unsqueeze_59);  cat_18 = None
        add_3096 = torch.ops.aten.add.Tensor(mul_3817, mul_3834);  mul_3817 = mul_3834 = None
        mul_3842 = torch.ops.aten.mul.Tensor(permute_103, unsqueeze_58);  unsqueeze_58 = None
        slice_213 = torch.ops.aten.slice.Tensor(permute_103, 3, 0, 64)
        slice_214 = torch.ops.aten.slice.Tensor(permute_103, 3, 64, 9223372036854775807);  permute_103 = None
        neg_19 = torch.ops.aten.neg.default(slice_214);  slice_214 = None
        cat_19 = torch.ops.aten.cat.default([neg_19, slice_213], -1);  neg_19 = slice_213 = None
        mul_3859 = torch.ops.aten.mul.Tensor(cat_19, unsqueeze_59);  cat_19 = unsqueeze_59 = None
        add_3120 = torch.ops.aten.add.Tensor(mul_3842, mul_3859);  mul_3842 = mul_3859 = None
        full_default_36 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_37 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_18 = torch.ops.aten.index_put.default(full_default_36, [None, None, arg3_1], add_3120);  full_default_36 = add_3120 = None
        index_put_19 = torch.ops.aten.index_put.default(full_default_37, [None, None, arg3_1], permute_105);  full_default_37 = permute_105 = None
        unsqueeze_61 = torch.ops.aten.unsqueeze.default(index_put_18, 2)
        expand_50 = torch.ops.aten.expand.default(unsqueeze_61, [1, 8, 4, arg5_1, 128]);  unsqueeze_61 = None
        clone_29 = torch.ops.aten.clone.default(expand_50, memory_format = torch.contiguous_format);  expand_50 = None
        view_327 = torch.ops.aten.view.default(clone_29, [1, 32, arg5_1, 128]);  clone_29 = None
        unsqueeze_63 = torch.ops.aten.unsqueeze.default(index_put_19, 2)
        expand_52 = torch.ops.aten.expand.default(unsqueeze_63, [1, 8, 4, arg5_1, 128]);  unsqueeze_63 = None
        clone_30 = torch.ops.aten.clone.default(expand_52, memory_format = torch.contiguous_format);  expand_52 = None
        view_328 = torch.ops.aten.view.default(clone_30, [1, 32, arg5_1, 128]);  clone_30 = None
        clone_31 = torch.ops.aten.clone.default(add_3096, memory_format = torch.contiguous_format);  add_3096 = None
        full_default_38 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_39 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_9 = torch.ops.aten.where.self(arg6_1, full_default_39, full_default_38);  full_default_39 = full_default_38 = None
        expand_53 = torch.ops.aten.expand.default(where_9, [1, 32, arg0_1, arg5_1]);  where_9 = None
        _scaled_dot_product_efficient_attention_9 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_31, view_327, view_328, expand_53, False, scale = 0.08838834764831845);  clone_31 = view_327 = view_328 = expand_53 = None
        getitem_74 = _scaled_dot_product_efficient_attention_9[0];  _scaled_dot_product_efficient_attention_9 = None
        permute_106 = torch.ops.aten.permute.default(getitem_74, [0, 2, 1, 3]);  getitem_74 = None
        view_329 = torch.ops.aten.view.default(permute_106, [1, arg0_1, -1]);  permute_106 = None
        permute_107 = torch.ops.aten.permute.default(arg103_1, [1, 0]);  arg103_1 = None
        view_330 = torch.ops.aten.view.default(view_329, [arg0_1, 4096]);  view_329 = None
        mm_66 = torch.ops.aten.mm.default(view_330, permute_107);  view_330 = permute_107 = None
        view_331 = torch.ops.aten.view.default(mm_66, [1, arg0_1, 4096]);  mm_66 = None
        add_3278 = torch.ops.aten.add.Tensor(add_3002, view_331);  add_3002 = view_331 = None
        view_332 = torch.ops.aten.view.default(add_3278, [-1, 4096])
        empty_38 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_39 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_19 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 20, constant_args_idx = 19, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_38, 'X_ptr': view_332, 'W_ptr': arg104_1, 'RSTD_ptr': empty_39}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_38 = view_332 = arg104_1 = empty_39 = None
        getitem_78 = triton_kernel_wrapper_functional_proxy_19['Y_ptr'];  triton_kernel_wrapper_functional_proxy_19 = None
        permute_108 = torch.ops.aten.permute.default(arg105_1, [1, 0]);  arg105_1 = None
        view_335 = torch.ops.aten.view.default(getitem_78, [1, arg0_1, 4096])
        view_336 = torch.ops.aten.view.default(view_335, [arg0_1, 4096]);  view_335 = None
        mm_67 = torch.ops.aten.mm.default(view_336, permute_108);  view_336 = permute_108 = None
        view_337 = torch.ops.aten.view.default(mm_67, [1, arg0_1, 14336]);  mm_67 = None
        convert_element_type_157 = torch.ops.prims.convert_element_type.default(view_337, torch.float32);  view_337 = None
        sigmoid_9 = torch.ops.aten.sigmoid.default(convert_element_type_157)
        mul_4107 = torch.ops.aten.mul.Tensor(convert_element_type_157, sigmoid_9);  convert_element_type_157 = sigmoid_9 = None
        convert_element_type_158 = torch.ops.prims.convert_element_type.default(mul_4107, torch.float16);  mul_4107 = None
        permute_109 = torch.ops.aten.permute.default(arg106_1, [1, 0]);  arg106_1 = None
        view_339 = torch.ops.aten.view.default(getitem_78, [1, arg0_1, 4096]);  getitem_78 = None
        view_340 = torch.ops.aten.view.default(view_339, [arg0_1, 4096]);  view_339 = None
        mm_68 = torch.ops.aten.mm.default(view_340, permute_109);  view_340 = permute_109 = None
        view_341 = torch.ops.aten.view.default(mm_68, [1, arg0_1, 14336]);  mm_68 = None
        mul_4124 = torch.ops.aten.mul.Tensor(convert_element_type_158, view_341);  convert_element_type_158 = view_341 = None
        permute_110 = torch.ops.aten.permute.default(arg107_1, [1, 0]);  arg107_1 = None
        view_342 = torch.ops.aten.view.default(mul_4124, [arg0_1, 14336]);  mul_4124 = None
        mm_69 = torch.ops.aten.mm.default(view_342, permute_110);  view_342 = permute_110 = None
        view_343 = torch.ops.aten.view.default(mm_69, [1, arg0_1, 4096]);  mm_69 = None
        add_3331 = torch.ops.aten.add.Tensor(add_3278, view_343);  add_3278 = view_343 = None
        view_344 = torch.ops.aten.view.default(add_3331, [-1, 4096])
        empty_40 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_41 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_20 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 21, constant_args_idx = 20, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_40, 'X_ptr': view_344, 'W_ptr': arg108_1, 'RSTD_ptr': empty_41}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_40 = view_344 = arg108_1 = empty_41 = None
        getitem_80 = triton_kernel_wrapper_functional_proxy_20['Y_ptr'];  triton_kernel_wrapper_functional_proxy_20 = None
        permute_111 = torch.ops.aten.permute.default(arg109_1, [1, 0]);  arg109_1 = None
        view_347 = torch.ops.aten.view.default(getitem_80, [1, arg0_1, 4096])
        view_348 = torch.ops.aten.view.default(view_347, [arg0_1, 4096]);  view_347 = None
        mm_70 = torch.ops.aten.mm.default(view_348, permute_111);  view_348 = permute_111 = None
        view_349 = torch.ops.aten.view.default(mm_70, [1, arg0_1, 4096]);  mm_70 = None
        view_350 = torch.ops.aten.view.default(view_349, [1, arg0_1, -1, 128]);  view_349 = None
        permute_112 = torch.ops.aten.permute.default(view_350, [0, 2, 1, 3]);  view_350 = None
        permute_113 = torch.ops.aten.permute.default(arg110_1, [1, 0]);  arg110_1 = None
        view_352 = torch.ops.aten.view.default(getitem_80, [1, arg0_1, 4096])
        view_353 = torch.ops.aten.view.default(view_352, [arg0_1, 4096]);  view_352 = None
        mm_71 = torch.ops.aten.mm.default(view_353, permute_113);  view_353 = permute_113 = None
        view_354 = torch.ops.aten.view.default(mm_71, [1, arg0_1, 1024]);  mm_71 = None
        view_355 = torch.ops.aten.view.default(view_354, [1, arg0_1, -1, 128]);  view_354 = None
        permute_114 = torch.ops.aten.permute.default(view_355, [0, 2, 1, 3]);  view_355 = None
        permute_115 = torch.ops.aten.permute.default(arg111_1, [1, 0]);  arg111_1 = None
        view_357 = torch.ops.aten.view.default(getitem_80, [1, arg0_1, 4096]);  getitem_80 = None
        view_358 = torch.ops.aten.view.default(view_357, [arg0_1, 4096]);  view_357 = None
        mm_72 = torch.ops.aten.mm.default(view_358, permute_115);  view_358 = permute_115 = None
        view_359 = torch.ops.aten.view.default(mm_72, [1, arg0_1, 1024]);  mm_72 = None
        view_360 = torch.ops.aten.view.default(view_359, [1, arg0_1, -1, 128]);  view_359 = None
        permute_116 = torch.ops.aten.permute.default(view_360, [0, 2, 1, 3]);  view_360 = None
        unsqueeze_64 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_65 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_4226 = torch.ops.aten.mul.Tensor(permute_112, unsqueeze_64)
        slice_234 = torch.ops.aten.slice.Tensor(permute_112, 3, 0, 64)
        slice_235 = torch.ops.aten.slice.Tensor(permute_112, 3, 64, 9223372036854775807);  permute_112 = None
        neg_20 = torch.ops.aten.neg.default(slice_235);  slice_235 = None
        cat_20 = torch.ops.aten.cat.default([neg_20, slice_234], -1);  neg_20 = slice_234 = None
        mul_4243 = torch.ops.aten.mul.Tensor(cat_20, unsqueeze_65);  cat_20 = None
        add_3425 = torch.ops.aten.add.Tensor(mul_4226, mul_4243);  mul_4226 = mul_4243 = None
        mul_4251 = torch.ops.aten.mul.Tensor(permute_114, unsqueeze_64);  unsqueeze_64 = None
        slice_236 = torch.ops.aten.slice.Tensor(permute_114, 3, 0, 64)
        slice_237 = torch.ops.aten.slice.Tensor(permute_114, 3, 64, 9223372036854775807);  permute_114 = None
        neg_21 = torch.ops.aten.neg.default(slice_237);  slice_237 = None
        cat_21 = torch.ops.aten.cat.default([neg_21, slice_236], -1);  neg_21 = slice_236 = None
        mul_4268 = torch.ops.aten.mul.Tensor(cat_21, unsqueeze_65);  cat_21 = unsqueeze_65 = None
        add_3449 = torch.ops.aten.add.Tensor(mul_4251, mul_4268);  mul_4251 = mul_4268 = None
        full_default_40 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_41 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_20 = torch.ops.aten.index_put.default(full_default_40, [None, None, arg3_1], add_3449);  full_default_40 = add_3449 = None
        index_put_21 = torch.ops.aten.index_put.default(full_default_41, [None, None, arg3_1], permute_116);  full_default_41 = permute_116 = None
        unsqueeze_67 = torch.ops.aten.unsqueeze.default(index_put_20, 2)
        expand_55 = torch.ops.aten.expand.default(unsqueeze_67, [1, 8, 4, arg5_1, 128]);  unsqueeze_67 = None
        clone_32 = torch.ops.aten.clone.default(expand_55, memory_format = torch.contiguous_format);  expand_55 = None
        view_361 = torch.ops.aten.view.default(clone_32, [1, 32, arg5_1, 128]);  clone_32 = None
        unsqueeze_69 = torch.ops.aten.unsqueeze.default(index_put_21, 2)
        expand_57 = torch.ops.aten.expand.default(unsqueeze_69, [1, 8, 4, arg5_1, 128]);  unsqueeze_69 = None
        clone_33 = torch.ops.aten.clone.default(expand_57, memory_format = torch.contiguous_format);  expand_57 = None
        view_362 = torch.ops.aten.view.default(clone_33, [1, 32, arg5_1, 128]);  clone_33 = None
        clone_34 = torch.ops.aten.clone.default(add_3425, memory_format = torch.contiguous_format);  add_3425 = None
        full_default_42 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_43 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_10 = torch.ops.aten.where.self(arg6_1, full_default_43, full_default_42);  full_default_43 = full_default_42 = None
        expand_58 = torch.ops.aten.expand.default(where_10, [1, 32, arg0_1, arg5_1]);  where_10 = None
        _scaled_dot_product_efficient_attention_10 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_34, view_361, view_362, expand_58, False, scale = 0.08838834764831845);  clone_34 = view_361 = view_362 = expand_58 = None
        getitem_82 = _scaled_dot_product_efficient_attention_10[0];  _scaled_dot_product_efficient_attention_10 = None
        permute_117 = torch.ops.aten.permute.default(getitem_82, [0, 2, 1, 3]);  getitem_82 = None
        view_363 = torch.ops.aten.view.default(permute_117, [1, arg0_1, -1]);  permute_117 = None
        permute_118 = torch.ops.aten.permute.default(arg113_1, [1, 0]);  arg113_1 = None
        view_364 = torch.ops.aten.view.default(view_363, [arg0_1, 4096]);  view_363 = None
        mm_73 = torch.ops.aten.mm.default(view_364, permute_118);  view_364 = permute_118 = None
        view_365 = torch.ops.aten.view.default(mm_73, [1, arg0_1, 4096]);  mm_73 = None
        add_3607 = torch.ops.aten.add.Tensor(add_3331, view_365);  add_3331 = view_365 = None
        view_366 = torch.ops.aten.view.default(add_3607, [-1, 4096])
        empty_42 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_43 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_21 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 22, constant_args_idx = 21, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_42, 'X_ptr': view_366, 'W_ptr': arg114_1, 'RSTD_ptr': empty_43}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_42 = view_366 = arg114_1 = empty_43 = None
        getitem_86 = triton_kernel_wrapper_functional_proxy_21['Y_ptr'];  triton_kernel_wrapper_functional_proxy_21 = None
        permute_119 = torch.ops.aten.permute.default(arg115_1, [1, 0]);  arg115_1 = None
        view_369 = torch.ops.aten.view.default(getitem_86, [1, arg0_1, 4096])
        view_370 = torch.ops.aten.view.default(view_369, [arg0_1, 4096]);  view_369 = None
        mm_74 = torch.ops.aten.mm.default(view_370, permute_119);  view_370 = permute_119 = None
        view_371 = torch.ops.aten.view.default(mm_74, [1, arg0_1, 14336]);  mm_74 = None
        convert_element_type_173 = torch.ops.prims.convert_element_type.default(view_371, torch.float32);  view_371 = None
        sigmoid_10 = torch.ops.aten.sigmoid.default(convert_element_type_173)
        mul_4516 = torch.ops.aten.mul.Tensor(convert_element_type_173, sigmoid_10);  convert_element_type_173 = sigmoid_10 = None
        convert_element_type_174 = torch.ops.prims.convert_element_type.default(mul_4516, torch.float16);  mul_4516 = None
        permute_120 = torch.ops.aten.permute.default(arg116_1, [1, 0]);  arg116_1 = None
        view_373 = torch.ops.aten.view.default(getitem_86, [1, arg0_1, 4096]);  getitem_86 = None
        view_374 = torch.ops.aten.view.default(view_373, [arg0_1, 4096]);  view_373 = None
        mm_75 = torch.ops.aten.mm.default(view_374, permute_120);  view_374 = permute_120 = None
        view_375 = torch.ops.aten.view.default(mm_75, [1, arg0_1, 14336]);  mm_75 = None
        mul_4533 = torch.ops.aten.mul.Tensor(convert_element_type_174, view_375);  convert_element_type_174 = view_375 = None
        permute_121 = torch.ops.aten.permute.default(arg117_1, [1, 0]);  arg117_1 = None
        view_376 = torch.ops.aten.view.default(mul_4533, [arg0_1, 14336]);  mul_4533 = None
        mm_76 = torch.ops.aten.mm.default(view_376, permute_121);  view_376 = permute_121 = None
        view_377 = torch.ops.aten.view.default(mm_76, [1, arg0_1, 4096]);  mm_76 = None
        add_3660 = torch.ops.aten.add.Tensor(add_3607, view_377);  add_3607 = view_377 = None
        view_378 = torch.ops.aten.view.default(add_3660, [-1, 4096])
        empty_44 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_45 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_22 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 23, constant_args_idx = 22, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_44, 'X_ptr': view_378, 'W_ptr': arg118_1, 'RSTD_ptr': empty_45}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_44 = view_378 = arg118_1 = empty_45 = None
        getitem_88 = triton_kernel_wrapper_functional_proxy_22['Y_ptr'];  triton_kernel_wrapper_functional_proxy_22 = None
        permute_122 = torch.ops.aten.permute.default(arg119_1, [1, 0]);  arg119_1 = None
        view_381 = torch.ops.aten.view.default(getitem_88, [1, arg0_1, 4096])
        view_382 = torch.ops.aten.view.default(view_381, [arg0_1, 4096]);  view_381 = None
        mm_77 = torch.ops.aten.mm.default(view_382, permute_122);  view_382 = permute_122 = None
        view_383 = torch.ops.aten.view.default(mm_77, [1, arg0_1, 4096]);  mm_77 = None
        view_384 = torch.ops.aten.view.default(view_383, [1, arg0_1, -1, 128]);  view_383 = None
        permute_123 = torch.ops.aten.permute.default(view_384, [0, 2, 1, 3]);  view_384 = None
        permute_124 = torch.ops.aten.permute.default(arg120_1, [1, 0]);  arg120_1 = None
        view_386 = torch.ops.aten.view.default(getitem_88, [1, arg0_1, 4096])
        view_387 = torch.ops.aten.view.default(view_386, [arg0_1, 4096]);  view_386 = None
        mm_78 = torch.ops.aten.mm.default(view_387, permute_124);  view_387 = permute_124 = None
        view_388 = torch.ops.aten.view.default(mm_78, [1, arg0_1, 1024]);  mm_78 = None
        view_389 = torch.ops.aten.view.default(view_388, [1, arg0_1, -1, 128]);  view_388 = None
        permute_125 = torch.ops.aten.permute.default(view_389, [0, 2, 1, 3]);  view_389 = None
        permute_126 = torch.ops.aten.permute.default(arg121_1, [1, 0]);  arg121_1 = None
        view_391 = torch.ops.aten.view.default(getitem_88, [1, arg0_1, 4096]);  getitem_88 = None
        view_392 = torch.ops.aten.view.default(view_391, [arg0_1, 4096]);  view_391 = None
        mm_79 = torch.ops.aten.mm.default(view_392, permute_126);  view_392 = permute_126 = None
        view_393 = torch.ops.aten.view.default(mm_79, [1, arg0_1, 1024]);  mm_79 = None
        view_394 = torch.ops.aten.view.default(view_393, [1, arg0_1, -1, 128]);  view_393 = None
        permute_127 = torch.ops.aten.permute.default(view_394, [0, 2, 1, 3]);  view_394 = None
        unsqueeze_70 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_71 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_4635 = torch.ops.aten.mul.Tensor(permute_123, unsqueeze_70)
        slice_257 = torch.ops.aten.slice.Tensor(permute_123, 3, 0, 64)
        slice_258 = torch.ops.aten.slice.Tensor(permute_123, 3, 64, 9223372036854775807);  permute_123 = None
        neg_22 = torch.ops.aten.neg.default(slice_258);  slice_258 = None
        cat_22 = torch.ops.aten.cat.default([neg_22, slice_257], -1);  neg_22 = slice_257 = None
        mul_4652 = torch.ops.aten.mul.Tensor(cat_22, unsqueeze_71);  cat_22 = None
        add_3754 = torch.ops.aten.add.Tensor(mul_4635, mul_4652);  mul_4635 = mul_4652 = None
        mul_4660 = torch.ops.aten.mul.Tensor(permute_125, unsqueeze_70);  unsqueeze_70 = None
        slice_259 = torch.ops.aten.slice.Tensor(permute_125, 3, 0, 64)
        slice_260 = torch.ops.aten.slice.Tensor(permute_125, 3, 64, 9223372036854775807);  permute_125 = None
        neg_23 = torch.ops.aten.neg.default(slice_260);  slice_260 = None
        cat_23 = torch.ops.aten.cat.default([neg_23, slice_259], -1);  neg_23 = slice_259 = None
        mul_4677 = torch.ops.aten.mul.Tensor(cat_23, unsqueeze_71);  cat_23 = unsqueeze_71 = None
        add_3778 = torch.ops.aten.add.Tensor(mul_4660, mul_4677);  mul_4660 = mul_4677 = None
        full_default_44 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_45 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_22 = torch.ops.aten.index_put.default(full_default_44, [None, None, arg3_1], add_3778);  full_default_44 = add_3778 = None
        index_put_23 = torch.ops.aten.index_put.default(full_default_45, [None, None, arg3_1], permute_127);  full_default_45 = permute_127 = None
        unsqueeze_73 = torch.ops.aten.unsqueeze.default(index_put_22, 2)
        expand_60 = torch.ops.aten.expand.default(unsqueeze_73, [1, 8, 4, arg5_1, 128]);  unsqueeze_73 = None
        clone_35 = torch.ops.aten.clone.default(expand_60, memory_format = torch.contiguous_format);  expand_60 = None
        view_395 = torch.ops.aten.view.default(clone_35, [1, 32, arg5_1, 128]);  clone_35 = None
        unsqueeze_75 = torch.ops.aten.unsqueeze.default(index_put_23, 2)
        expand_62 = torch.ops.aten.expand.default(unsqueeze_75, [1, 8, 4, arg5_1, 128]);  unsqueeze_75 = None
        clone_36 = torch.ops.aten.clone.default(expand_62, memory_format = torch.contiguous_format);  expand_62 = None
        view_396 = torch.ops.aten.view.default(clone_36, [1, 32, arg5_1, 128]);  clone_36 = None
        clone_37 = torch.ops.aten.clone.default(add_3754, memory_format = torch.contiguous_format);  add_3754 = None
        full_default_46 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_47 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_11 = torch.ops.aten.where.self(arg6_1, full_default_47, full_default_46);  full_default_47 = full_default_46 = None
        expand_63 = torch.ops.aten.expand.default(where_11, [1, 32, arg0_1, arg5_1]);  where_11 = None
        _scaled_dot_product_efficient_attention_11 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_37, view_395, view_396, expand_63, False, scale = 0.08838834764831845);  clone_37 = view_395 = view_396 = expand_63 = None
        getitem_90 = _scaled_dot_product_efficient_attention_11[0];  _scaled_dot_product_efficient_attention_11 = None
        permute_128 = torch.ops.aten.permute.default(getitem_90, [0, 2, 1, 3]);  getitem_90 = None
        view_397 = torch.ops.aten.view.default(permute_128, [1, arg0_1, -1]);  permute_128 = None
        permute_129 = torch.ops.aten.permute.default(arg123_1, [1, 0]);  arg123_1 = None
        view_398 = torch.ops.aten.view.default(view_397, [arg0_1, 4096]);  view_397 = None
        mm_80 = torch.ops.aten.mm.default(view_398, permute_129);  view_398 = permute_129 = None
        view_399 = torch.ops.aten.view.default(mm_80, [1, arg0_1, 4096]);  mm_80 = None
        add_3936 = torch.ops.aten.add.Tensor(add_3660, view_399);  add_3660 = view_399 = None
        view_400 = torch.ops.aten.view.default(add_3936, [-1, 4096])
        empty_46 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_47 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_23 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 24, constant_args_idx = 23, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_46, 'X_ptr': view_400, 'W_ptr': arg124_1, 'RSTD_ptr': empty_47}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_46 = view_400 = arg124_1 = empty_47 = None
        getitem_94 = triton_kernel_wrapper_functional_proxy_23['Y_ptr'];  triton_kernel_wrapper_functional_proxy_23 = None
        permute_130 = torch.ops.aten.permute.default(arg125_1, [1, 0]);  arg125_1 = None
        view_403 = torch.ops.aten.view.default(getitem_94, [1, arg0_1, 4096])
        view_404 = torch.ops.aten.view.default(view_403, [arg0_1, 4096]);  view_403 = None
        mm_81 = torch.ops.aten.mm.default(view_404, permute_130);  view_404 = permute_130 = None
        view_405 = torch.ops.aten.view.default(mm_81, [1, arg0_1, 14336]);  mm_81 = None
        convert_element_type_189 = torch.ops.prims.convert_element_type.default(view_405, torch.float32);  view_405 = None
        sigmoid_11 = torch.ops.aten.sigmoid.default(convert_element_type_189)
        mul_4925 = torch.ops.aten.mul.Tensor(convert_element_type_189, sigmoid_11);  convert_element_type_189 = sigmoid_11 = None
        convert_element_type_190 = torch.ops.prims.convert_element_type.default(mul_4925, torch.float16);  mul_4925 = None
        permute_131 = torch.ops.aten.permute.default(arg126_1, [1, 0]);  arg126_1 = None
        view_407 = torch.ops.aten.view.default(getitem_94, [1, arg0_1, 4096]);  getitem_94 = None
        view_408 = torch.ops.aten.view.default(view_407, [arg0_1, 4096]);  view_407 = None
        mm_82 = torch.ops.aten.mm.default(view_408, permute_131);  view_408 = permute_131 = None
        view_409 = torch.ops.aten.view.default(mm_82, [1, arg0_1, 14336]);  mm_82 = None
        mul_4942 = torch.ops.aten.mul.Tensor(convert_element_type_190, view_409);  convert_element_type_190 = view_409 = None
        permute_132 = torch.ops.aten.permute.default(arg127_1, [1, 0]);  arg127_1 = None
        view_410 = torch.ops.aten.view.default(mul_4942, [arg0_1, 14336]);  mul_4942 = None
        mm_83 = torch.ops.aten.mm.default(view_410, permute_132);  view_410 = permute_132 = None
        view_411 = torch.ops.aten.view.default(mm_83, [1, arg0_1, 4096]);  mm_83 = None
        add_3989 = torch.ops.aten.add.Tensor(add_3936, view_411);  add_3936 = view_411 = None
        view_412 = torch.ops.aten.view.default(add_3989, [-1, 4096])
        empty_48 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_49 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_24 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 25, constant_args_idx = 24, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_48, 'X_ptr': view_412, 'W_ptr': arg128_1, 'RSTD_ptr': empty_49}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_48 = view_412 = arg128_1 = empty_49 = None
        getitem_96 = triton_kernel_wrapper_functional_proxy_24['Y_ptr'];  triton_kernel_wrapper_functional_proxy_24 = None
        permute_133 = torch.ops.aten.permute.default(arg129_1, [1, 0]);  arg129_1 = None
        view_415 = torch.ops.aten.view.default(getitem_96, [1, arg0_1, 4096])
        view_416 = torch.ops.aten.view.default(view_415, [arg0_1, 4096]);  view_415 = None
        mm_84 = torch.ops.aten.mm.default(view_416, permute_133);  view_416 = permute_133 = None
        view_417 = torch.ops.aten.view.default(mm_84, [1, arg0_1, 4096]);  mm_84 = None
        view_418 = torch.ops.aten.view.default(view_417, [1, arg0_1, -1, 128]);  view_417 = None
        permute_134 = torch.ops.aten.permute.default(view_418, [0, 2, 1, 3]);  view_418 = None
        permute_135 = torch.ops.aten.permute.default(arg130_1, [1, 0]);  arg130_1 = None
        view_420 = torch.ops.aten.view.default(getitem_96, [1, arg0_1, 4096])
        view_421 = torch.ops.aten.view.default(view_420, [arg0_1, 4096]);  view_420 = None
        mm_85 = torch.ops.aten.mm.default(view_421, permute_135);  view_421 = permute_135 = None
        view_422 = torch.ops.aten.view.default(mm_85, [1, arg0_1, 1024]);  mm_85 = None
        view_423 = torch.ops.aten.view.default(view_422, [1, arg0_1, -1, 128]);  view_422 = None
        permute_136 = torch.ops.aten.permute.default(view_423, [0, 2, 1, 3]);  view_423 = None
        permute_137 = torch.ops.aten.permute.default(arg131_1, [1, 0]);  arg131_1 = None
        view_425 = torch.ops.aten.view.default(getitem_96, [1, arg0_1, 4096]);  getitem_96 = None
        view_426 = torch.ops.aten.view.default(view_425, [arg0_1, 4096]);  view_425 = None
        mm_86 = torch.ops.aten.mm.default(view_426, permute_137);  view_426 = permute_137 = None
        view_427 = torch.ops.aten.view.default(mm_86, [1, arg0_1, 1024]);  mm_86 = None
        view_428 = torch.ops.aten.view.default(view_427, [1, arg0_1, -1, 128]);  view_427 = None
        permute_138 = torch.ops.aten.permute.default(view_428, [0, 2, 1, 3]);  view_428 = None
        unsqueeze_76 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_77 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_5044 = torch.ops.aten.mul.Tensor(permute_134, unsqueeze_76)
        slice_280 = torch.ops.aten.slice.Tensor(permute_134, 3, 0, 64)
        slice_281 = torch.ops.aten.slice.Tensor(permute_134, 3, 64, 9223372036854775807);  permute_134 = None
        neg_24 = torch.ops.aten.neg.default(slice_281);  slice_281 = None
        cat_24 = torch.ops.aten.cat.default([neg_24, slice_280], -1);  neg_24 = slice_280 = None
        mul_5061 = torch.ops.aten.mul.Tensor(cat_24, unsqueeze_77);  cat_24 = None
        add_4083 = torch.ops.aten.add.Tensor(mul_5044, mul_5061);  mul_5044 = mul_5061 = None
        mul_5069 = torch.ops.aten.mul.Tensor(permute_136, unsqueeze_76);  unsqueeze_76 = None
        slice_282 = torch.ops.aten.slice.Tensor(permute_136, 3, 0, 64)
        slice_283 = torch.ops.aten.slice.Tensor(permute_136, 3, 64, 9223372036854775807);  permute_136 = None
        neg_25 = torch.ops.aten.neg.default(slice_283);  slice_283 = None
        cat_25 = torch.ops.aten.cat.default([neg_25, slice_282], -1);  neg_25 = slice_282 = None
        mul_5086 = torch.ops.aten.mul.Tensor(cat_25, unsqueeze_77);  cat_25 = unsqueeze_77 = None
        add_4107 = torch.ops.aten.add.Tensor(mul_5069, mul_5086);  mul_5069 = mul_5086 = None
        full_default_48 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_49 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_24 = torch.ops.aten.index_put.default(full_default_48, [None, None, arg3_1], add_4107);  full_default_48 = add_4107 = None
        index_put_25 = torch.ops.aten.index_put.default(full_default_49, [None, None, arg3_1], permute_138);  full_default_49 = permute_138 = None
        unsqueeze_79 = torch.ops.aten.unsqueeze.default(index_put_24, 2)
        expand_65 = torch.ops.aten.expand.default(unsqueeze_79, [1, 8, 4, arg5_1, 128]);  unsqueeze_79 = None
        clone_38 = torch.ops.aten.clone.default(expand_65, memory_format = torch.contiguous_format);  expand_65 = None
        view_429 = torch.ops.aten.view.default(clone_38, [1, 32, arg5_1, 128]);  clone_38 = None
        unsqueeze_81 = torch.ops.aten.unsqueeze.default(index_put_25, 2)
        expand_67 = torch.ops.aten.expand.default(unsqueeze_81, [1, 8, 4, arg5_1, 128]);  unsqueeze_81 = None
        clone_39 = torch.ops.aten.clone.default(expand_67, memory_format = torch.contiguous_format);  expand_67 = None
        view_430 = torch.ops.aten.view.default(clone_39, [1, 32, arg5_1, 128]);  clone_39 = None
        clone_40 = torch.ops.aten.clone.default(add_4083, memory_format = torch.contiguous_format);  add_4083 = None
        full_default_50 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_51 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_12 = torch.ops.aten.where.self(arg6_1, full_default_51, full_default_50);  full_default_51 = full_default_50 = None
        expand_68 = torch.ops.aten.expand.default(where_12, [1, 32, arg0_1, arg5_1]);  where_12 = None
        _scaled_dot_product_efficient_attention_12 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_40, view_429, view_430, expand_68, False, scale = 0.08838834764831845);  clone_40 = view_429 = view_430 = expand_68 = None
        getitem_98 = _scaled_dot_product_efficient_attention_12[0];  _scaled_dot_product_efficient_attention_12 = None
        permute_139 = torch.ops.aten.permute.default(getitem_98, [0, 2, 1, 3]);  getitem_98 = None
        view_431 = torch.ops.aten.view.default(permute_139, [1, arg0_1, -1]);  permute_139 = None
        permute_140 = torch.ops.aten.permute.default(arg133_1, [1, 0]);  arg133_1 = None
        view_432 = torch.ops.aten.view.default(view_431, [arg0_1, 4096]);  view_431 = None
        mm_87 = torch.ops.aten.mm.default(view_432, permute_140);  view_432 = permute_140 = None
        view_433 = torch.ops.aten.view.default(mm_87, [1, arg0_1, 4096]);  mm_87 = None
        add_4265 = torch.ops.aten.add.Tensor(add_3989, view_433);  add_3989 = view_433 = None
        view_434 = torch.ops.aten.view.default(add_4265, [-1, 4096])
        empty_50 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_51 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_25 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 26, constant_args_idx = 25, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_50, 'X_ptr': view_434, 'W_ptr': arg134_1, 'RSTD_ptr': empty_51}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_50 = view_434 = arg134_1 = empty_51 = None
        getitem_102 = triton_kernel_wrapper_functional_proxy_25['Y_ptr'];  triton_kernel_wrapper_functional_proxy_25 = None
        permute_141 = torch.ops.aten.permute.default(arg135_1, [1, 0]);  arg135_1 = None
        view_437 = torch.ops.aten.view.default(getitem_102, [1, arg0_1, 4096])
        view_438 = torch.ops.aten.view.default(view_437, [arg0_1, 4096]);  view_437 = None
        mm_88 = torch.ops.aten.mm.default(view_438, permute_141);  view_438 = permute_141 = None
        view_439 = torch.ops.aten.view.default(mm_88, [1, arg0_1, 14336]);  mm_88 = None
        convert_element_type_205 = torch.ops.prims.convert_element_type.default(view_439, torch.float32);  view_439 = None
        sigmoid_12 = torch.ops.aten.sigmoid.default(convert_element_type_205)
        mul_5334 = torch.ops.aten.mul.Tensor(convert_element_type_205, sigmoid_12);  convert_element_type_205 = sigmoid_12 = None
        convert_element_type_206 = torch.ops.prims.convert_element_type.default(mul_5334, torch.float16);  mul_5334 = None
        permute_142 = torch.ops.aten.permute.default(arg136_1, [1, 0]);  arg136_1 = None
        view_441 = torch.ops.aten.view.default(getitem_102, [1, arg0_1, 4096]);  getitem_102 = None
        view_442 = torch.ops.aten.view.default(view_441, [arg0_1, 4096]);  view_441 = None
        mm_89 = torch.ops.aten.mm.default(view_442, permute_142);  view_442 = permute_142 = None
        view_443 = torch.ops.aten.view.default(mm_89, [1, arg0_1, 14336]);  mm_89 = None
        mul_5351 = torch.ops.aten.mul.Tensor(convert_element_type_206, view_443);  convert_element_type_206 = view_443 = None
        permute_143 = torch.ops.aten.permute.default(arg137_1, [1, 0]);  arg137_1 = None
        view_444 = torch.ops.aten.view.default(mul_5351, [arg0_1, 14336]);  mul_5351 = None
        mm_90 = torch.ops.aten.mm.default(view_444, permute_143);  view_444 = permute_143 = None
        view_445 = torch.ops.aten.view.default(mm_90, [1, arg0_1, 4096]);  mm_90 = None
        add_4318 = torch.ops.aten.add.Tensor(add_4265, view_445);  add_4265 = view_445 = None
        view_446 = torch.ops.aten.view.default(add_4318, [-1, 4096])
        empty_52 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_53 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_26 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 27, constant_args_idx = 26, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_52, 'X_ptr': view_446, 'W_ptr': arg138_1, 'RSTD_ptr': empty_53}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_52 = view_446 = arg138_1 = empty_53 = None
        getitem_104 = triton_kernel_wrapper_functional_proxy_26['Y_ptr'];  triton_kernel_wrapper_functional_proxy_26 = None
        permute_144 = torch.ops.aten.permute.default(arg139_1, [1, 0]);  arg139_1 = None
        view_449 = torch.ops.aten.view.default(getitem_104, [1, arg0_1, 4096])
        view_450 = torch.ops.aten.view.default(view_449, [arg0_1, 4096]);  view_449 = None
        mm_91 = torch.ops.aten.mm.default(view_450, permute_144);  view_450 = permute_144 = None
        view_451 = torch.ops.aten.view.default(mm_91, [1, arg0_1, 4096]);  mm_91 = None
        view_452 = torch.ops.aten.view.default(view_451, [1, arg0_1, -1, 128]);  view_451 = None
        permute_145 = torch.ops.aten.permute.default(view_452, [0, 2, 1, 3]);  view_452 = None
        permute_146 = torch.ops.aten.permute.default(arg140_1, [1, 0]);  arg140_1 = None
        view_454 = torch.ops.aten.view.default(getitem_104, [1, arg0_1, 4096])
        view_455 = torch.ops.aten.view.default(view_454, [arg0_1, 4096]);  view_454 = None
        mm_92 = torch.ops.aten.mm.default(view_455, permute_146);  view_455 = permute_146 = None
        view_456 = torch.ops.aten.view.default(mm_92, [1, arg0_1, 1024]);  mm_92 = None
        view_457 = torch.ops.aten.view.default(view_456, [1, arg0_1, -1, 128]);  view_456 = None
        permute_147 = torch.ops.aten.permute.default(view_457, [0, 2, 1, 3]);  view_457 = None
        permute_148 = torch.ops.aten.permute.default(arg141_1, [1, 0]);  arg141_1 = None
        view_459 = torch.ops.aten.view.default(getitem_104, [1, arg0_1, 4096]);  getitem_104 = None
        view_460 = torch.ops.aten.view.default(view_459, [arg0_1, 4096]);  view_459 = None
        mm_93 = torch.ops.aten.mm.default(view_460, permute_148);  view_460 = permute_148 = None
        view_461 = torch.ops.aten.view.default(mm_93, [1, arg0_1, 1024]);  mm_93 = None
        view_462 = torch.ops.aten.view.default(view_461, [1, arg0_1, -1, 128]);  view_461 = None
        permute_149 = torch.ops.aten.permute.default(view_462, [0, 2, 1, 3]);  view_462 = None
        unsqueeze_82 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_83 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_5453 = torch.ops.aten.mul.Tensor(permute_145, unsqueeze_82)
        slice_303 = torch.ops.aten.slice.Tensor(permute_145, 3, 0, 64)
        slice_304 = torch.ops.aten.slice.Tensor(permute_145, 3, 64, 9223372036854775807);  permute_145 = None
        neg_26 = torch.ops.aten.neg.default(slice_304);  slice_304 = None
        cat_26 = torch.ops.aten.cat.default([neg_26, slice_303], -1);  neg_26 = slice_303 = None
        mul_5470 = torch.ops.aten.mul.Tensor(cat_26, unsqueeze_83);  cat_26 = None
        add_4412 = torch.ops.aten.add.Tensor(mul_5453, mul_5470);  mul_5453 = mul_5470 = None
        mul_5478 = torch.ops.aten.mul.Tensor(permute_147, unsqueeze_82);  unsqueeze_82 = None
        slice_305 = torch.ops.aten.slice.Tensor(permute_147, 3, 0, 64)
        slice_306 = torch.ops.aten.slice.Tensor(permute_147, 3, 64, 9223372036854775807);  permute_147 = None
        neg_27 = torch.ops.aten.neg.default(slice_306);  slice_306 = None
        cat_27 = torch.ops.aten.cat.default([neg_27, slice_305], -1);  neg_27 = slice_305 = None
        mul_5495 = torch.ops.aten.mul.Tensor(cat_27, unsqueeze_83);  cat_27 = unsqueeze_83 = None
        add_4436 = torch.ops.aten.add.Tensor(mul_5478, mul_5495);  mul_5478 = mul_5495 = None
        full_default_52 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_53 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_26 = torch.ops.aten.index_put.default(full_default_52, [None, None, arg3_1], add_4436);  full_default_52 = add_4436 = None
        index_put_27 = torch.ops.aten.index_put.default(full_default_53, [None, None, arg3_1], permute_149);  full_default_53 = permute_149 = None
        unsqueeze_85 = torch.ops.aten.unsqueeze.default(index_put_26, 2)
        expand_70 = torch.ops.aten.expand.default(unsqueeze_85, [1, 8, 4, arg5_1, 128]);  unsqueeze_85 = None
        clone_41 = torch.ops.aten.clone.default(expand_70, memory_format = torch.contiguous_format);  expand_70 = None
        view_463 = torch.ops.aten.view.default(clone_41, [1, 32, arg5_1, 128]);  clone_41 = None
        unsqueeze_87 = torch.ops.aten.unsqueeze.default(index_put_27, 2)
        expand_72 = torch.ops.aten.expand.default(unsqueeze_87, [1, 8, 4, arg5_1, 128]);  unsqueeze_87 = None
        clone_42 = torch.ops.aten.clone.default(expand_72, memory_format = torch.contiguous_format);  expand_72 = None
        view_464 = torch.ops.aten.view.default(clone_42, [1, 32, arg5_1, 128]);  clone_42 = None
        clone_43 = torch.ops.aten.clone.default(add_4412, memory_format = torch.contiguous_format);  add_4412 = None
        full_default_54 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_55 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_13 = torch.ops.aten.where.self(arg6_1, full_default_55, full_default_54);  full_default_55 = full_default_54 = None
        expand_73 = torch.ops.aten.expand.default(where_13, [1, 32, arg0_1, arg5_1]);  where_13 = None
        _scaled_dot_product_efficient_attention_13 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_43, view_463, view_464, expand_73, False, scale = 0.08838834764831845);  clone_43 = view_463 = view_464 = expand_73 = None
        getitem_106 = _scaled_dot_product_efficient_attention_13[0];  _scaled_dot_product_efficient_attention_13 = None
        permute_150 = torch.ops.aten.permute.default(getitem_106, [0, 2, 1, 3]);  getitem_106 = None
        view_465 = torch.ops.aten.view.default(permute_150, [1, arg0_1, -1]);  permute_150 = None
        permute_151 = torch.ops.aten.permute.default(arg143_1, [1, 0]);  arg143_1 = None
        view_466 = torch.ops.aten.view.default(view_465, [arg0_1, 4096]);  view_465 = None
        mm_94 = torch.ops.aten.mm.default(view_466, permute_151);  view_466 = permute_151 = None
        view_467 = torch.ops.aten.view.default(mm_94, [1, arg0_1, 4096]);  mm_94 = None
        add_4594 = torch.ops.aten.add.Tensor(add_4318, view_467);  add_4318 = view_467 = None
        view_468 = torch.ops.aten.view.default(add_4594, [-1, 4096])
        empty_54 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_55 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_27 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 28, constant_args_idx = 27, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_54, 'X_ptr': view_468, 'W_ptr': arg144_1, 'RSTD_ptr': empty_55}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_54 = view_468 = arg144_1 = empty_55 = None
        getitem_110 = triton_kernel_wrapper_functional_proxy_27['Y_ptr'];  triton_kernel_wrapper_functional_proxy_27 = None
        permute_152 = torch.ops.aten.permute.default(arg145_1, [1, 0]);  arg145_1 = None
        view_471 = torch.ops.aten.view.default(getitem_110, [1, arg0_1, 4096])
        view_472 = torch.ops.aten.view.default(view_471, [arg0_1, 4096]);  view_471 = None
        mm_95 = torch.ops.aten.mm.default(view_472, permute_152);  view_472 = permute_152 = None
        view_473 = torch.ops.aten.view.default(mm_95, [1, arg0_1, 14336]);  mm_95 = None
        convert_element_type_221 = torch.ops.prims.convert_element_type.default(view_473, torch.float32);  view_473 = None
        sigmoid_13 = torch.ops.aten.sigmoid.default(convert_element_type_221)
        mul_5743 = torch.ops.aten.mul.Tensor(convert_element_type_221, sigmoid_13);  convert_element_type_221 = sigmoid_13 = None
        convert_element_type_222 = torch.ops.prims.convert_element_type.default(mul_5743, torch.float16);  mul_5743 = None
        permute_153 = torch.ops.aten.permute.default(arg146_1, [1, 0]);  arg146_1 = None
        view_475 = torch.ops.aten.view.default(getitem_110, [1, arg0_1, 4096]);  getitem_110 = None
        view_476 = torch.ops.aten.view.default(view_475, [arg0_1, 4096]);  view_475 = None
        mm_96 = torch.ops.aten.mm.default(view_476, permute_153);  view_476 = permute_153 = None
        view_477 = torch.ops.aten.view.default(mm_96, [1, arg0_1, 14336]);  mm_96 = None
        mul_5760 = torch.ops.aten.mul.Tensor(convert_element_type_222, view_477);  convert_element_type_222 = view_477 = None
        permute_154 = torch.ops.aten.permute.default(arg147_1, [1, 0]);  arg147_1 = None
        view_478 = torch.ops.aten.view.default(mul_5760, [arg0_1, 14336]);  mul_5760 = None
        mm_97 = torch.ops.aten.mm.default(view_478, permute_154);  view_478 = permute_154 = None
        view_479 = torch.ops.aten.view.default(mm_97, [1, arg0_1, 4096]);  mm_97 = None
        add_4647 = torch.ops.aten.add.Tensor(add_4594, view_479);  add_4594 = view_479 = None
        view_480 = torch.ops.aten.view.default(add_4647, [-1, 4096])
        empty_56 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_57 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_28 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 29, constant_args_idx = 28, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_56, 'X_ptr': view_480, 'W_ptr': arg148_1, 'RSTD_ptr': empty_57}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_56 = view_480 = arg148_1 = empty_57 = None
        getitem_112 = triton_kernel_wrapper_functional_proxy_28['Y_ptr'];  triton_kernel_wrapper_functional_proxy_28 = None
        permute_155 = torch.ops.aten.permute.default(arg149_1, [1, 0]);  arg149_1 = None
        view_483 = torch.ops.aten.view.default(getitem_112, [1, arg0_1, 4096])
        view_484 = torch.ops.aten.view.default(view_483, [arg0_1, 4096]);  view_483 = None
        mm_98 = torch.ops.aten.mm.default(view_484, permute_155);  view_484 = permute_155 = None
        view_485 = torch.ops.aten.view.default(mm_98, [1, arg0_1, 4096]);  mm_98 = None
        view_486 = torch.ops.aten.view.default(view_485, [1, arg0_1, -1, 128]);  view_485 = None
        permute_156 = torch.ops.aten.permute.default(view_486, [0, 2, 1, 3]);  view_486 = None
        permute_157 = torch.ops.aten.permute.default(arg150_1, [1, 0]);  arg150_1 = None
        view_488 = torch.ops.aten.view.default(getitem_112, [1, arg0_1, 4096])
        view_489 = torch.ops.aten.view.default(view_488, [arg0_1, 4096]);  view_488 = None
        mm_99 = torch.ops.aten.mm.default(view_489, permute_157);  view_489 = permute_157 = None
        view_490 = torch.ops.aten.view.default(mm_99, [1, arg0_1, 1024]);  mm_99 = None
        view_491 = torch.ops.aten.view.default(view_490, [1, arg0_1, -1, 128]);  view_490 = None
        permute_158 = torch.ops.aten.permute.default(view_491, [0, 2, 1, 3]);  view_491 = None
        permute_159 = torch.ops.aten.permute.default(arg151_1, [1, 0]);  arg151_1 = None
        view_493 = torch.ops.aten.view.default(getitem_112, [1, arg0_1, 4096]);  getitem_112 = None
        view_494 = torch.ops.aten.view.default(view_493, [arg0_1, 4096]);  view_493 = None
        mm_100 = torch.ops.aten.mm.default(view_494, permute_159);  view_494 = permute_159 = None
        view_495 = torch.ops.aten.view.default(mm_100, [1, arg0_1, 1024]);  mm_100 = None
        view_496 = torch.ops.aten.view.default(view_495, [1, arg0_1, -1, 128]);  view_495 = None
        permute_160 = torch.ops.aten.permute.default(view_496, [0, 2, 1, 3]);  view_496 = None
        unsqueeze_88 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_89 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_5862 = torch.ops.aten.mul.Tensor(permute_156, unsqueeze_88)
        slice_326 = torch.ops.aten.slice.Tensor(permute_156, 3, 0, 64)
        slice_327 = torch.ops.aten.slice.Tensor(permute_156, 3, 64, 9223372036854775807);  permute_156 = None
        neg_28 = torch.ops.aten.neg.default(slice_327);  slice_327 = None
        cat_28 = torch.ops.aten.cat.default([neg_28, slice_326], -1);  neg_28 = slice_326 = None
        mul_5879 = torch.ops.aten.mul.Tensor(cat_28, unsqueeze_89);  cat_28 = None
        add_4741 = torch.ops.aten.add.Tensor(mul_5862, mul_5879);  mul_5862 = mul_5879 = None
        mul_5887 = torch.ops.aten.mul.Tensor(permute_158, unsqueeze_88);  unsqueeze_88 = None
        slice_328 = torch.ops.aten.slice.Tensor(permute_158, 3, 0, 64)
        slice_329 = torch.ops.aten.slice.Tensor(permute_158, 3, 64, 9223372036854775807);  permute_158 = None
        neg_29 = torch.ops.aten.neg.default(slice_329);  slice_329 = None
        cat_29 = torch.ops.aten.cat.default([neg_29, slice_328], -1);  neg_29 = slice_328 = None
        mul_5904 = torch.ops.aten.mul.Tensor(cat_29, unsqueeze_89);  cat_29 = unsqueeze_89 = None
        add_4765 = torch.ops.aten.add.Tensor(mul_5887, mul_5904);  mul_5887 = mul_5904 = None
        full_default_56 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_57 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_28 = torch.ops.aten.index_put.default(full_default_56, [None, None, arg3_1], add_4765);  full_default_56 = add_4765 = None
        index_put_29 = torch.ops.aten.index_put.default(full_default_57, [None, None, arg3_1], permute_160);  full_default_57 = permute_160 = None
        unsqueeze_91 = torch.ops.aten.unsqueeze.default(index_put_28, 2)
        expand_75 = torch.ops.aten.expand.default(unsqueeze_91, [1, 8, 4, arg5_1, 128]);  unsqueeze_91 = None
        clone_44 = torch.ops.aten.clone.default(expand_75, memory_format = torch.contiguous_format);  expand_75 = None
        view_497 = torch.ops.aten.view.default(clone_44, [1, 32, arg5_1, 128]);  clone_44 = None
        unsqueeze_93 = torch.ops.aten.unsqueeze.default(index_put_29, 2)
        expand_77 = torch.ops.aten.expand.default(unsqueeze_93, [1, 8, 4, arg5_1, 128]);  unsqueeze_93 = None
        clone_45 = torch.ops.aten.clone.default(expand_77, memory_format = torch.contiguous_format);  expand_77 = None
        view_498 = torch.ops.aten.view.default(clone_45, [1, 32, arg5_1, 128]);  clone_45 = None
        clone_46 = torch.ops.aten.clone.default(add_4741, memory_format = torch.contiguous_format);  add_4741 = None
        full_default_58 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_59 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_14 = torch.ops.aten.where.self(arg6_1, full_default_59, full_default_58);  full_default_59 = full_default_58 = None
        expand_78 = torch.ops.aten.expand.default(where_14, [1, 32, arg0_1, arg5_1]);  where_14 = None
        _scaled_dot_product_efficient_attention_14 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_46, view_497, view_498, expand_78, False, scale = 0.08838834764831845);  clone_46 = view_497 = view_498 = expand_78 = None
        getitem_114 = _scaled_dot_product_efficient_attention_14[0];  _scaled_dot_product_efficient_attention_14 = None
        permute_161 = torch.ops.aten.permute.default(getitem_114, [0, 2, 1, 3]);  getitem_114 = None
        view_499 = torch.ops.aten.view.default(permute_161, [1, arg0_1, -1]);  permute_161 = None
        permute_162 = torch.ops.aten.permute.default(arg153_1, [1, 0]);  arg153_1 = None
        view_500 = torch.ops.aten.view.default(view_499, [arg0_1, 4096]);  view_499 = None
        mm_101 = torch.ops.aten.mm.default(view_500, permute_162);  view_500 = permute_162 = None
        view_501 = torch.ops.aten.view.default(mm_101, [1, arg0_1, 4096]);  mm_101 = None
        add_4923 = torch.ops.aten.add.Tensor(add_4647, view_501);  add_4647 = view_501 = None
        view_502 = torch.ops.aten.view.default(add_4923, [-1, 4096])
        empty_58 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_59 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_29 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 30, constant_args_idx = 29, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_58, 'X_ptr': view_502, 'W_ptr': arg154_1, 'RSTD_ptr': empty_59}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_58 = view_502 = arg154_1 = empty_59 = None
        getitem_118 = triton_kernel_wrapper_functional_proxy_29['Y_ptr'];  triton_kernel_wrapper_functional_proxy_29 = None
        permute_163 = torch.ops.aten.permute.default(arg155_1, [1, 0]);  arg155_1 = None
        view_505 = torch.ops.aten.view.default(getitem_118, [1, arg0_1, 4096])
        view_506 = torch.ops.aten.view.default(view_505, [arg0_1, 4096]);  view_505 = None
        mm_102 = torch.ops.aten.mm.default(view_506, permute_163);  view_506 = permute_163 = None
        view_507 = torch.ops.aten.view.default(mm_102, [1, arg0_1, 14336]);  mm_102 = None
        convert_element_type_237 = torch.ops.prims.convert_element_type.default(view_507, torch.float32);  view_507 = None
        sigmoid_14 = torch.ops.aten.sigmoid.default(convert_element_type_237)
        mul_6152 = torch.ops.aten.mul.Tensor(convert_element_type_237, sigmoid_14);  convert_element_type_237 = sigmoid_14 = None
        convert_element_type_238 = torch.ops.prims.convert_element_type.default(mul_6152, torch.float16);  mul_6152 = None
        permute_164 = torch.ops.aten.permute.default(arg156_1, [1, 0]);  arg156_1 = None
        view_509 = torch.ops.aten.view.default(getitem_118, [1, arg0_1, 4096]);  getitem_118 = None
        view_510 = torch.ops.aten.view.default(view_509, [arg0_1, 4096]);  view_509 = None
        mm_103 = torch.ops.aten.mm.default(view_510, permute_164);  view_510 = permute_164 = None
        view_511 = torch.ops.aten.view.default(mm_103, [1, arg0_1, 14336]);  mm_103 = None
        mul_6169 = torch.ops.aten.mul.Tensor(convert_element_type_238, view_511);  convert_element_type_238 = view_511 = None
        permute_165 = torch.ops.aten.permute.default(arg157_1, [1, 0]);  arg157_1 = None
        view_512 = torch.ops.aten.view.default(mul_6169, [arg0_1, 14336]);  mul_6169 = None
        mm_104 = torch.ops.aten.mm.default(view_512, permute_165);  view_512 = permute_165 = None
        view_513 = torch.ops.aten.view.default(mm_104, [1, arg0_1, 4096]);  mm_104 = None
        add_4976 = torch.ops.aten.add.Tensor(add_4923, view_513);  add_4923 = view_513 = None
        view_514 = torch.ops.aten.view.default(add_4976, [-1, 4096])
        empty_60 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_61 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_30 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 31, constant_args_idx = 30, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_60, 'X_ptr': view_514, 'W_ptr': arg158_1, 'RSTD_ptr': empty_61}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_60 = view_514 = arg158_1 = empty_61 = None
        getitem_120 = triton_kernel_wrapper_functional_proxy_30['Y_ptr'];  triton_kernel_wrapper_functional_proxy_30 = None
        permute_166 = torch.ops.aten.permute.default(arg159_1, [1, 0]);  arg159_1 = None
        view_517 = torch.ops.aten.view.default(getitem_120, [1, arg0_1, 4096])
        view_518 = torch.ops.aten.view.default(view_517, [arg0_1, 4096]);  view_517 = None
        mm_105 = torch.ops.aten.mm.default(view_518, permute_166);  view_518 = permute_166 = None
        view_519 = torch.ops.aten.view.default(mm_105, [1, arg0_1, 4096]);  mm_105 = None
        view_520 = torch.ops.aten.view.default(view_519, [1, arg0_1, -1, 128]);  view_519 = None
        permute_167 = torch.ops.aten.permute.default(view_520, [0, 2, 1, 3]);  view_520 = None
        permute_168 = torch.ops.aten.permute.default(arg160_1, [1, 0]);  arg160_1 = None
        view_522 = torch.ops.aten.view.default(getitem_120, [1, arg0_1, 4096])
        view_523 = torch.ops.aten.view.default(view_522, [arg0_1, 4096]);  view_522 = None
        mm_106 = torch.ops.aten.mm.default(view_523, permute_168);  view_523 = permute_168 = None
        view_524 = torch.ops.aten.view.default(mm_106, [1, arg0_1, 1024]);  mm_106 = None
        view_525 = torch.ops.aten.view.default(view_524, [1, arg0_1, -1, 128]);  view_524 = None
        permute_169 = torch.ops.aten.permute.default(view_525, [0, 2, 1, 3]);  view_525 = None
        permute_170 = torch.ops.aten.permute.default(arg161_1, [1, 0]);  arg161_1 = None
        view_527 = torch.ops.aten.view.default(getitem_120, [1, arg0_1, 4096]);  getitem_120 = None
        view_528 = torch.ops.aten.view.default(view_527, [arg0_1, 4096]);  view_527 = None
        mm_107 = torch.ops.aten.mm.default(view_528, permute_170);  view_528 = permute_170 = None
        view_529 = torch.ops.aten.view.default(mm_107, [1, arg0_1, 1024]);  mm_107 = None
        view_530 = torch.ops.aten.view.default(view_529, [1, arg0_1, -1, 128]);  view_529 = None
        permute_171 = torch.ops.aten.permute.default(view_530, [0, 2, 1, 3]);  view_530 = None
        unsqueeze_94 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_95 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_6271 = torch.ops.aten.mul.Tensor(permute_167, unsqueeze_94)
        slice_349 = torch.ops.aten.slice.Tensor(permute_167, 3, 0, 64)
        slice_350 = torch.ops.aten.slice.Tensor(permute_167, 3, 64, 9223372036854775807);  permute_167 = None
        neg_30 = torch.ops.aten.neg.default(slice_350);  slice_350 = None
        cat_30 = torch.ops.aten.cat.default([neg_30, slice_349], -1);  neg_30 = slice_349 = None
        mul_6288 = torch.ops.aten.mul.Tensor(cat_30, unsqueeze_95);  cat_30 = None
        add_5070 = torch.ops.aten.add.Tensor(mul_6271, mul_6288);  mul_6271 = mul_6288 = None
        mul_6296 = torch.ops.aten.mul.Tensor(permute_169, unsqueeze_94);  unsqueeze_94 = None
        slice_351 = torch.ops.aten.slice.Tensor(permute_169, 3, 0, 64)
        slice_352 = torch.ops.aten.slice.Tensor(permute_169, 3, 64, 9223372036854775807);  permute_169 = None
        neg_31 = torch.ops.aten.neg.default(slice_352);  slice_352 = None
        cat_31 = torch.ops.aten.cat.default([neg_31, slice_351], -1);  neg_31 = slice_351 = None
        mul_6313 = torch.ops.aten.mul.Tensor(cat_31, unsqueeze_95);  cat_31 = unsqueeze_95 = None
        add_5094 = torch.ops.aten.add.Tensor(mul_6296, mul_6313);  mul_6296 = mul_6313 = None
        full_default_60 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_61 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_30 = torch.ops.aten.index_put.default(full_default_60, [None, None, arg3_1], add_5094);  full_default_60 = add_5094 = None
        index_put_31 = torch.ops.aten.index_put.default(full_default_61, [None, None, arg3_1], permute_171);  full_default_61 = permute_171 = None
        unsqueeze_97 = torch.ops.aten.unsqueeze.default(index_put_30, 2)
        expand_80 = torch.ops.aten.expand.default(unsqueeze_97, [1, 8, 4, arg5_1, 128]);  unsqueeze_97 = None
        clone_47 = torch.ops.aten.clone.default(expand_80, memory_format = torch.contiguous_format);  expand_80 = None
        view_531 = torch.ops.aten.view.default(clone_47, [1, 32, arg5_1, 128]);  clone_47 = None
        unsqueeze_99 = torch.ops.aten.unsqueeze.default(index_put_31, 2)
        expand_82 = torch.ops.aten.expand.default(unsqueeze_99, [1, 8, 4, arg5_1, 128]);  unsqueeze_99 = None
        clone_48 = torch.ops.aten.clone.default(expand_82, memory_format = torch.contiguous_format);  expand_82 = None
        view_532 = torch.ops.aten.view.default(clone_48, [1, 32, arg5_1, 128]);  clone_48 = None
        clone_49 = torch.ops.aten.clone.default(add_5070, memory_format = torch.contiguous_format);  add_5070 = None
        full_default_62 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_63 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_15 = torch.ops.aten.where.self(arg6_1, full_default_63, full_default_62);  full_default_63 = full_default_62 = None
        expand_83 = torch.ops.aten.expand.default(where_15, [1, 32, arg0_1, arg5_1]);  where_15 = None
        _scaled_dot_product_efficient_attention_15 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_49, view_531, view_532, expand_83, False, scale = 0.08838834764831845);  clone_49 = view_531 = view_532 = expand_83 = None
        getitem_122 = _scaled_dot_product_efficient_attention_15[0];  _scaled_dot_product_efficient_attention_15 = None
        permute_172 = torch.ops.aten.permute.default(getitem_122, [0, 2, 1, 3]);  getitem_122 = None
        view_533 = torch.ops.aten.view.default(permute_172, [1, arg0_1, -1]);  permute_172 = None
        permute_173 = torch.ops.aten.permute.default(arg163_1, [1, 0]);  arg163_1 = None
        view_534 = torch.ops.aten.view.default(view_533, [arg0_1, 4096]);  view_533 = None
        mm_108 = torch.ops.aten.mm.default(view_534, permute_173);  view_534 = permute_173 = None
        view_535 = torch.ops.aten.view.default(mm_108, [1, arg0_1, 4096]);  mm_108 = None
        add_5252 = torch.ops.aten.add.Tensor(add_4976, view_535);  add_4976 = view_535 = None
        view_536 = torch.ops.aten.view.default(add_5252, [-1, 4096])
        empty_62 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_63 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_31 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 32, constant_args_idx = 31, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_62, 'X_ptr': view_536, 'W_ptr': arg164_1, 'RSTD_ptr': empty_63}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_62 = view_536 = arg164_1 = empty_63 = None
        getitem_126 = triton_kernel_wrapper_functional_proxy_31['Y_ptr'];  triton_kernel_wrapper_functional_proxy_31 = None
        permute_174 = torch.ops.aten.permute.default(arg165_1, [1, 0]);  arg165_1 = None
        view_539 = torch.ops.aten.view.default(getitem_126, [1, arg0_1, 4096])
        view_540 = torch.ops.aten.view.default(view_539, [arg0_1, 4096]);  view_539 = None
        mm_109 = torch.ops.aten.mm.default(view_540, permute_174);  view_540 = permute_174 = None
        view_541 = torch.ops.aten.view.default(mm_109, [1, arg0_1, 14336]);  mm_109 = None
        convert_element_type_253 = torch.ops.prims.convert_element_type.default(view_541, torch.float32);  view_541 = None
        sigmoid_15 = torch.ops.aten.sigmoid.default(convert_element_type_253)
        mul_6561 = torch.ops.aten.mul.Tensor(convert_element_type_253, sigmoid_15);  convert_element_type_253 = sigmoid_15 = None
        convert_element_type_254 = torch.ops.prims.convert_element_type.default(mul_6561, torch.float16);  mul_6561 = None
        permute_175 = torch.ops.aten.permute.default(arg166_1, [1, 0]);  arg166_1 = None
        view_543 = torch.ops.aten.view.default(getitem_126, [1, arg0_1, 4096]);  getitem_126 = None
        view_544 = torch.ops.aten.view.default(view_543, [arg0_1, 4096]);  view_543 = None
        mm_110 = torch.ops.aten.mm.default(view_544, permute_175);  view_544 = permute_175 = None
        view_545 = torch.ops.aten.view.default(mm_110, [1, arg0_1, 14336]);  mm_110 = None
        mul_6578 = torch.ops.aten.mul.Tensor(convert_element_type_254, view_545);  convert_element_type_254 = view_545 = None
        permute_176 = torch.ops.aten.permute.default(arg167_1, [1, 0]);  arg167_1 = None
        view_546 = torch.ops.aten.view.default(mul_6578, [arg0_1, 14336]);  mul_6578 = None
        mm_111 = torch.ops.aten.mm.default(view_546, permute_176);  view_546 = permute_176 = None
        view_547 = torch.ops.aten.view.default(mm_111, [1, arg0_1, 4096]);  mm_111 = None
        add_5305 = torch.ops.aten.add.Tensor(add_5252, view_547);  add_5252 = view_547 = None
        view_548 = torch.ops.aten.view.default(add_5305, [-1, 4096])
        empty_64 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_65 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_32 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 33, constant_args_idx = 32, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_64, 'X_ptr': view_548, 'W_ptr': arg168_1, 'RSTD_ptr': empty_65}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_64 = view_548 = arg168_1 = empty_65 = None
        getitem_128 = triton_kernel_wrapper_functional_proxy_32['Y_ptr'];  triton_kernel_wrapper_functional_proxy_32 = None
        permute_177 = torch.ops.aten.permute.default(arg169_1, [1, 0]);  arg169_1 = None
        view_551 = torch.ops.aten.view.default(getitem_128, [1, arg0_1, 4096])
        view_552 = torch.ops.aten.view.default(view_551, [arg0_1, 4096]);  view_551 = None
        mm_112 = torch.ops.aten.mm.default(view_552, permute_177);  view_552 = permute_177 = None
        view_553 = torch.ops.aten.view.default(mm_112, [1, arg0_1, 4096]);  mm_112 = None
        view_554 = torch.ops.aten.view.default(view_553, [1, arg0_1, -1, 128]);  view_553 = None
        permute_178 = torch.ops.aten.permute.default(view_554, [0, 2, 1, 3]);  view_554 = None
        permute_179 = torch.ops.aten.permute.default(arg170_1, [1, 0]);  arg170_1 = None
        view_556 = torch.ops.aten.view.default(getitem_128, [1, arg0_1, 4096])
        view_557 = torch.ops.aten.view.default(view_556, [arg0_1, 4096]);  view_556 = None
        mm_113 = torch.ops.aten.mm.default(view_557, permute_179);  view_557 = permute_179 = None
        view_558 = torch.ops.aten.view.default(mm_113, [1, arg0_1, 1024]);  mm_113 = None
        view_559 = torch.ops.aten.view.default(view_558, [1, arg0_1, -1, 128]);  view_558 = None
        permute_180 = torch.ops.aten.permute.default(view_559, [0, 2, 1, 3]);  view_559 = None
        permute_181 = torch.ops.aten.permute.default(arg171_1, [1, 0]);  arg171_1 = None
        view_561 = torch.ops.aten.view.default(getitem_128, [1, arg0_1, 4096]);  getitem_128 = None
        view_562 = torch.ops.aten.view.default(view_561, [arg0_1, 4096]);  view_561 = None
        mm_114 = torch.ops.aten.mm.default(view_562, permute_181);  view_562 = permute_181 = None
        view_563 = torch.ops.aten.view.default(mm_114, [1, arg0_1, 1024]);  mm_114 = None
        view_564 = torch.ops.aten.view.default(view_563, [1, arg0_1, -1, 128]);  view_563 = None
        permute_182 = torch.ops.aten.permute.default(view_564, [0, 2, 1, 3]);  view_564 = None
        unsqueeze_100 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_101 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_6680 = torch.ops.aten.mul.Tensor(permute_178, unsqueeze_100)
        slice_372 = torch.ops.aten.slice.Tensor(permute_178, 3, 0, 64)
        slice_373 = torch.ops.aten.slice.Tensor(permute_178, 3, 64, 9223372036854775807);  permute_178 = None
        neg_32 = torch.ops.aten.neg.default(slice_373);  slice_373 = None
        cat_32 = torch.ops.aten.cat.default([neg_32, slice_372], -1);  neg_32 = slice_372 = None
        mul_6697 = torch.ops.aten.mul.Tensor(cat_32, unsqueeze_101);  cat_32 = None
        add_5399 = torch.ops.aten.add.Tensor(mul_6680, mul_6697);  mul_6680 = mul_6697 = None
        mul_6705 = torch.ops.aten.mul.Tensor(permute_180, unsqueeze_100);  unsqueeze_100 = None
        slice_374 = torch.ops.aten.slice.Tensor(permute_180, 3, 0, 64)
        slice_375 = torch.ops.aten.slice.Tensor(permute_180, 3, 64, 9223372036854775807);  permute_180 = None
        neg_33 = torch.ops.aten.neg.default(slice_375);  slice_375 = None
        cat_33 = torch.ops.aten.cat.default([neg_33, slice_374], -1);  neg_33 = slice_374 = None
        mul_6722 = torch.ops.aten.mul.Tensor(cat_33, unsqueeze_101);  cat_33 = unsqueeze_101 = None
        add_5423 = torch.ops.aten.add.Tensor(mul_6705, mul_6722);  mul_6705 = mul_6722 = None
        full_default_64 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_65 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_32 = torch.ops.aten.index_put.default(full_default_64, [None, None, arg3_1], add_5423);  full_default_64 = add_5423 = None
        index_put_33 = torch.ops.aten.index_put.default(full_default_65, [None, None, arg3_1], permute_182);  full_default_65 = permute_182 = None
        unsqueeze_103 = torch.ops.aten.unsqueeze.default(index_put_32, 2)
        expand_85 = torch.ops.aten.expand.default(unsqueeze_103, [1, 8, 4, arg5_1, 128]);  unsqueeze_103 = None
        clone_50 = torch.ops.aten.clone.default(expand_85, memory_format = torch.contiguous_format);  expand_85 = None
        view_565 = torch.ops.aten.view.default(clone_50, [1, 32, arg5_1, 128]);  clone_50 = None
        unsqueeze_105 = torch.ops.aten.unsqueeze.default(index_put_33, 2)
        expand_87 = torch.ops.aten.expand.default(unsqueeze_105, [1, 8, 4, arg5_1, 128]);  unsqueeze_105 = None
        clone_51 = torch.ops.aten.clone.default(expand_87, memory_format = torch.contiguous_format);  expand_87 = None
        view_566 = torch.ops.aten.view.default(clone_51, [1, 32, arg5_1, 128]);  clone_51 = None
        clone_52 = torch.ops.aten.clone.default(add_5399, memory_format = torch.contiguous_format);  add_5399 = None
        full_default_66 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_67 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_16 = torch.ops.aten.where.self(arg6_1, full_default_67, full_default_66);  full_default_67 = full_default_66 = None
        expand_88 = torch.ops.aten.expand.default(where_16, [1, 32, arg0_1, arg5_1]);  where_16 = None
        _scaled_dot_product_efficient_attention_16 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_52, view_565, view_566, expand_88, False, scale = 0.08838834764831845);  clone_52 = view_565 = view_566 = expand_88 = None
        getitem_130 = _scaled_dot_product_efficient_attention_16[0];  _scaled_dot_product_efficient_attention_16 = None
        permute_183 = torch.ops.aten.permute.default(getitem_130, [0, 2, 1, 3]);  getitem_130 = None
        view_567 = torch.ops.aten.view.default(permute_183, [1, arg0_1, -1]);  permute_183 = None
        permute_184 = torch.ops.aten.permute.default(arg173_1, [1, 0]);  arg173_1 = None
        view_568 = torch.ops.aten.view.default(view_567, [arg0_1, 4096]);  view_567 = None
        mm_115 = torch.ops.aten.mm.default(view_568, permute_184);  view_568 = permute_184 = None
        view_569 = torch.ops.aten.view.default(mm_115, [1, arg0_1, 4096]);  mm_115 = None
        add_5581 = torch.ops.aten.add.Tensor(add_5305, view_569);  add_5305 = view_569 = None
        view_570 = torch.ops.aten.view.default(add_5581, [-1, 4096])
        empty_66 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_67 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_33 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 34, constant_args_idx = 33, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_66, 'X_ptr': view_570, 'W_ptr': arg174_1, 'RSTD_ptr': empty_67}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_66 = view_570 = arg174_1 = empty_67 = None
        getitem_134 = triton_kernel_wrapper_functional_proxy_33['Y_ptr'];  triton_kernel_wrapper_functional_proxy_33 = None
        permute_185 = torch.ops.aten.permute.default(arg175_1, [1, 0]);  arg175_1 = None
        view_573 = torch.ops.aten.view.default(getitem_134, [1, arg0_1, 4096])
        view_574 = torch.ops.aten.view.default(view_573, [arg0_1, 4096]);  view_573 = None
        mm_116 = torch.ops.aten.mm.default(view_574, permute_185);  view_574 = permute_185 = None
        view_575 = torch.ops.aten.view.default(mm_116, [1, arg0_1, 14336]);  mm_116 = None
        convert_element_type_269 = torch.ops.prims.convert_element_type.default(view_575, torch.float32);  view_575 = None
        sigmoid_16 = torch.ops.aten.sigmoid.default(convert_element_type_269)
        mul_6970 = torch.ops.aten.mul.Tensor(convert_element_type_269, sigmoid_16);  convert_element_type_269 = sigmoid_16 = None
        convert_element_type_270 = torch.ops.prims.convert_element_type.default(mul_6970, torch.float16);  mul_6970 = None
        permute_186 = torch.ops.aten.permute.default(arg176_1, [1, 0]);  arg176_1 = None
        view_577 = torch.ops.aten.view.default(getitem_134, [1, arg0_1, 4096]);  getitem_134 = None
        view_578 = torch.ops.aten.view.default(view_577, [arg0_1, 4096]);  view_577 = None
        mm_117 = torch.ops.aten.mm.default(view_578, permute_186);  view_578 = permute_186 = None
        view_579 = torch.ops.aten.view.default(mm_117, [1, arg0_1, 14336]);  mm_117 = None
        mul_6987 = torch.ops.aten.mul.Tensor(convert_element_type_270, view_579);  convert_element_type_270 = view_579 = None
        permute_187 = torch.ops.aten.permute.default(arg177_1, [1, 0]);  arg177_1 = None
        view_580 = torch.ops.aten.view.default(mul_6987, [arg0_1, 14336]);  mul_6987 = None
        mm_118 = torch.ops.aten.mm.default(view_580, permute_187);  view_580 = permute_187 = None
        view_581 = torch.ops.aten.view.default(mm_118, [1, arg0_1, 4096]);  mm_118 = None
        add_5634 = torch.ops.aten.add.Tensor(add_5581, view_581);  add_5581 = view_581 = None
        view_582 = torch.ops.aten.view.default(add_5634, [-1, 4096])
        empty_68 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_69 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_34 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 35, constant_args_idx = 34, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_68, 'X_ptr': view_582, 'W_ptr': arg178_1, 'RSTD_ptr': empty_69}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_68 = view_582 = arg178_1 = empty_69 = None
        getitem_136 = triton_kernel_wrapper_functional_proxy_34['Y_ptr'];  triton_kernel_wrapper_functional_proxy_34 = None
        permute_188 = torch.ops.aten.permute.default(arg179_1, [1, 0]);  arg179_1 = None
        view_585 = torch.ops.aten.view.default(getitem_136, [1, arg0_1, 4096])
        view_586 = torch.ops.aten.view.default(view_585, [arg0_1, 4096]);  view_585 = None
        mm_119 = torch.ops.aten.mm.default(view_586, permute_188);  view_586 = permute_188 = None
        view_587 = torch.ops.aten.view.default(mm_119, [1, arg0_1, 4096]);  mm_119 = None
        view_588 = torch.ops.aten.view.default(view_587, [1, arg0_1, -1, 128]);  view_587 = None
        permute_189 = torch.ops.aten.permute.default(view_588, [0, 2, 1, 3]);  view_588 = None
        permute_190 = torch.ops.aten.permute.default(arg180_1, [1, 0]);  arg180_1 = None
        view_590 = torch.ops.aten.view.default(getitem_136, [1, arg0_1, 4096])
        view_591 = torch.ops.aten.view.default(view_590, [arg0_1, 4096]);  view_590 = None
        mm_120 = torch.ops.aten.mm.default(view_591, permute_190);  view_591 = permute_190 = None
        view_592 = torch.ops.aten.view.default(mm_120, [1, arg0_1, 1024]);  mm_120 = None
        view_593 = torch.ops.aten.view.default(view_592, [1, arg0_1, -1, 128]);  view_592 = None
        permute_191 = torch.ops.aten.permute.default(view_593, [0, 2, 1, 3]);  view_593 = None
        permute_192 = torch.ops.aten.permute.default(arg181_1, [1, 0]);  arg181_1 = None
        view_595 = torch.ops.aten.view.default(getitem_136, [1, arg0_1, 4096]);  getitem_136 = None
        view_596 = torch.ops.aten.view.default(view_595, [arg0_1, 4096]);  view_595 = None
        mm_121 = torch.ops.aten.mm.default(view_596, permute_192);  view_596 = permute_192 = None
        view_597 = torch.ops.aten.view.default(mm_121, [1, arg0_1, 1024]);  mm_121 = None
        view_598 = torch.ops.aten.view.default(view_597, [1, arg0_1, -1, 128]);  view_597 = None
        permute_193 = torch.ops.aten.permute.default(view_598, [0, 2, 1, 3]);  view_598 = None
        unsqueeze_106 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_107 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_7089 = torch.ops.aten.mul.Tensor(permute_189, unsqueeze_106)
        slice_395 = torch.ops.aten.slice.Tensor(permute_189, 3, 0, 64)
        slice_396 = torch.ops.aten.slice.Tensor(permute_189, 3, 64, 9223372036854775807);  permute_189 = None
        neg_34 = torch.ops.aten.neg.default(slice_396);  slice_396 = None
        cat_34 = torch.ops.aten.cat.default([neg_34, slice_395], -1);  neg_34 = slice_395 = None
        mul_7106 = torch.ops.aten.mul.Tensor(cat_34, unsqueeze_107);  cat_34 = None
        add_5728 = torch.ops.aten.add.Tensor(mul_7089, mul_7106);  mul_7089 = mul_7106 = None
        mul_7114 = torch.ops.aten.mul.Tensor(permute_191, unsqueeze_106);  unsqueeze_106 = None
        slice_397 = torch.ops.aten.slice.Tensor(permute_191, 3, 0, 64)
        slice_398 = torch.ops.aten.slice.Tensor(permute_191, 3, 64, 9223372036854775807);  permute_191 = None
        neg_35 = torch.ops.aten.neg.default(slice_398);  slice_398 = None
        cat_35 = torch.ops.aten.cat.default([neg_35, slice_397], -1);  neg_35 = slice_397 = None
        mul_7131 = torch.ops.aten.mul.Tensor(cat_35, unsqueeze_107);  cat_35 = unsqueeze_107 = None
        add_5752 = torch.ops.aten.add.Tensor(mul_7114, mul_7131);  mul_7114 = mul_7131 = None
        full_default_68 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_69 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_34 = torch.ops.aten.index_put.default(full_default_68, [None, None, arg3_1], add_5752);  full_default_68 = add_5752 = None
        index_put_35 = torch.ops.aten.index_put.default(full_default_69, [None, None, arg3_1], permute_193);  full_default_69 = permute_193 = None
        unsqueeze_109 = torch.ops.aten.unsqueeze.default(index_put_34, 2)
        expand_90 = torch.ops.aten.expand.default(unsqueeze_109, [1, 8, 4, arg5_1, 128]);  unsqueeze_109 = None
        clone_53 = torch.ops.aten.clone.default(expand_90, memory_format = torch.contiguous_format);  expand_90 = None
        view_599 = torch.ops.aten.view.default(clone_53, [1, 32, arg5_1, 128]);  clone_53 = None
        unsqueeze_111 = torch.ops.aten.unsqueeze.default(index_put_35, 2)
        expand_92 = torch.ops.aten.expand.default(unsqueeze_111, [1, 8, 4, arg5_1, 128]);  unsqueeze_111 = None
        clone_54 = torch.ops.aten.clone.default(expand_92, memory_format = torch.contiguous_format);  expand_92 = None
        view_600 = torch.ops.aten.view.default(clone_54, [1, 32, arg5_1, 128]);  clone_54 = None
        clone_55 = torch.ops.aten.clone.default(add_5728, memory_format = torch.contiguous_format);  add_5728 = None
        full_default_70 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_71 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_17 = torch.ops.aten.where.self(arg6_1, full_default_71, full_default_70);  full_default_71 = full_default_70 = None
        expand_93 = torch.ops.aten.expand.default(where_17, [1, 32, arg0_1, arg5_1]);  where_17 = None
        _scaled_dot_product_efficient_attention_17 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_55, view_599, view_600, expand_93, False, scale = 0.08838834764831845);  clone_55 = view_599 = view_600 = expand_93 = None
        getitem_138 = _scaled_dot_product_efficient_attention_17[0];  _scaled_dot_product_efficient_attention_17 = None
        permute_194 = torch.ops.aten.permute.default(getitem_138, [0, 2, 1, 3]);  getitem_138 = None
        view_601 = torch.ops.aten.view.default(permute_194, [1, arg0_1, -1]);  permute_194 = None
        permute_195 = torch.ops.aten.permute.default(arg183_1, [1, 0]);  arg183_1 = None
        view_602 = torch.ops.aten.view.default(view_601, [arg0_1, 4096]);  view_601 = None
        mm_122 = torch.ops.aten.mm.default(view_602, permute_195);  view_602 = permute_195 = None
        view_603 = torch.ops.aten.view.default(mm_122, [1, arg0_1, 4096]);  mm_122 = None
        add_5910 = torch.ops.aten.add.Tensor(add_5634, view_603);  add_5634 = view_603 = None
        view_604 = torch.ops.aten.view.default(add_5910, [-1, 4096])
        empty_70 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_71 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_35 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 36, constant_args_idx = 35, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_70, 'X_ptr': view_604, 'W_ptr': arg184_1, 'RSTD_ptr': empty_71}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_70 = view_604 = arg184_1 = empty_71 = None
        getitem_142 = triton_kernel_wrapper_functional_proxy_35['Y_ptr'];  triton_kernel_wrapper_functional_proxy_35 = None
        permute_196 = torch.ops.aten.permute.default(arg185_1, [1, 0]);  arg185_1 = None
        view_607 = torch.ops.aten.view.default(getitem_142, [1, arg0_1, 4096])
        view_608 = torch.ops.aten.view.default(view_607, [arg0_1, 4096]);  view_607 = None
        mm_123 = torch.ops.aten.mm.default(view_608, permute_196);  view_608 = permute_196 = None
        view_609 = torch.ops.aten.view.default(mm_123, [1, arg0_1, 14336]);  mm_123 = None
        convert_element_type_285 = torch.ops.prims.convert_element_type.default(view_609, torch.float32);  view_609 = None
        sigmoid_17 = torch.ops.aten.sigmoid.default(convert_element_type_285)
        mul_7379 = torch.ops.aten.mul.Tensor(convert_element_type_285, sigmoid_17);  convert_element_type_285 = sigmoid_17 = None
        convert_element_type_286 = torch.ops.prims.convert_element_type.default(mul_7379, torch.float16);  mul_7379 = None
        permute_197 = torch.ops.aten.permute.default(arg186_1, [1, 0]);  arg186_1 = None
        view_611 = torch.ops.aten.view.default(getitem_142, [1, arg0_1, 4096]);  getitem_142 = None
        view_612 = torch.ops.aten.view.default(view_611, [arg0_1, 4096]);  view_611 = None
        mm_124 = torch.ops.aten.mm.default(view_612, permute_197);  view_612 = permute_197 = None
        view_613 = torch.ops.aten.view.default(mm_124, [1, arg0_1, 14336]);  mm_124 = None
        mul_7396 = torch.ops.aten.mul.Tensor(convert_element_type_286, view_613);  convert_element_type_286 = view_613 = None
        permute_198 = torch.ops.aten.permute.default(arg187_1, [1, 0]);  arg187_1 = None
        view_614 = torch.ops.aten.view.default(mul_7396, [arg0_1, 14336]);  mul_7396 = None
        mm_125 = torch.ops.aten.mm.default(view_614, permute_198);  view_614 = permute_198 = None
        view_615 = torch.ops.aten.view.default(mm_125, [1, arg0_1, 4096]);  mm_125 = None
        add_5963 = torch.ops.aten.add.Tensor(add_5910, view_615);  add_5910 = view_615 = None
        view_616 = torch.ops.aten.view.default(add_5963, [-1, 4096])
        empty_72 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_73 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_36 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 37, constant_args_idx = 36, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_72, 'X_ptr': view_616, 'W_ptr': arg188_1, 'RSTD_ptr': empty_73}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_72 = view_616 = arg188_1 = empty_73 = None
        getitem_144 = triton_kernel_wrapper_functional_proxy_36['Y_ptr'];  triton_kernel_wrapper_functional_proxy_36 = None
        permute_199 = torch.ops.aten.permute.default(arg189_1, [1, 0]);  arg189_1 = None
        view_619 = torch.ops.aten.view.default(getitem_144, [1, arg0_1, 4096])
        view_620 = torch.ops.aten.view.default(view_619, [arg0_1, 4096]);  view_619 = None
        mm_126 = torch.ops.aten.mm.default(view_620, permute_199);  view_620 = permute_199 = None
        view_621 = torch.ops.aten.view.default(mm_126, [1, arg0_1, 4096]);  mm_126 = None
        view_622 = torch.ops.aten.view.default(view_621, [1, arg0_1, -1, 128]);  view_621 = None
        permute_200 = torch.ops.aten.permute.default(view_622, [0, 2, 1, 3]);  view_622 = None
        permute_201 = torch.ops.aten.permute.default(arg190_1, [1, 0]);  arg190_1 = None
        view_624 = torch.ops.aten.view.default(getitem_144, [1, arg0_1, 4096])
        view_625 = torch.ops.aten.view.default(view_624, [arg0_1, 4096]);  view_624 = None
        mm_127 = torch.ops.aten.mm.default(view_625, permute_201);  view_625 = permute_201 = None
        view_626 = torch.ops.aten.view.default(mm_127, [1, arg0_1, 1024]);  mm_127 = None
        view_627 = torch.ops.aten.view.default(view_626, [1, arg0_1, -1, 128]);  view_626 = None
        permute_202 = torch.ops.aten.permute.default(view_627, [0, 2, 1, 3]);  view_627 = None
        permute_203 = torch.ops.aten.permute.default(arg191_1, [1, 0]);  arg191_1 = None
        view_629 = torch.ops.aten.view.default(getitem_144, [1, arg0_1, 4096]);  getitem_144 = None
        view_630 = torch.ops.aten.view.default(view_629, [arg0_1, 4096]);  view_629 = None
        mm_128 = torch.ops.aten.mm.default(view_630, permute_203);  view_630 = permute_203 = None
        view_631 = torch.ops.aten.view.default(mm_128, [1, arg0_1, 1024]);  mm_128 = None
        view_632 = torch.ops.aten.view.default(view_631, [1, arg0_1, -1, 128]);  view_631 = None
        permute_204 = torch.ops.aten.permute.default(view_632, [0, 2, 1, 3]);  view_632 = None
        unsqueeze_112 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_113 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_7498 = torch.ops.aten.mul.Tensor(permute_200, unsqueeze_112)
        slice_418 = torch.ops.aten.slice.Tensor(permute_200, 3, 0, 64)
        slice_419 = torch.ops.aten.slice.Tensor(permute_200, 3, 64, 9223372036854775807);  permute_200 = None
        neg_36 = torch.ops.aten.neg.default(slice_419);  slice_419 = None
        cat_36 = torch.ops.aten.cat.default([neg_36, slice_418], -1);  neg_36 = slice_418 = None
        mul_7515 = torch.ops.aten.mul.Tensor(cat_36, unsqueeze_113);  cat_36 = None
        add_6057 = torch.ops.aten.add.Tensor(mul_7498, mul_7515);  mul_7498 = mul_7515 = None
        mul_7523 = torch.ops.aten.mul.Tensor(permute_202, unsqueeze_112);  unsqueeze_112 = None
        slice_420 = torch.ops.aten.slice.Tensor(permute_202, 3, 0, 64)
        slice_421 = torch.ops.aten.slice.Tensor(permute_202, 3, 64, 9223372036854775807);  permute_202 = None
        neg_37 = torch.ops.aten.neg.default(slice_421);  slice_421 = None
        cat_37 = torch.ops.aten.cat.default([neg_37, slice_420], -1);  neg_37 = slice_420 = None
        mul_7540 = torch.ops.aten.mul.Tensor(cat_37, unsqueeze_113);  cat_37 = unsqueeze_113 = None
        add_6081 = torch.ops.aten.add.Tensor(mul_7523, mul_7540);  mul_7523 = mul_7540 = None
        full_default_72 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_73 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_36 = torch.ops.aten.index_put.default(full_default_72, [None, None, arg3_1], add_6081);  full_default_72 = add_6081 = None
        index_put_37 = torch.ops.aten.index_put.default(full_default_73, [None, None, arg3_1], permute_204);  full_default_73 = permute_204 = None
        unsqueeze_115 = torch.ops.aten.unsqueeze.default(index_put_36, 2)
        expand_95 = torch.ops.aten.expand.default(unsqueeze_115, [1, 8, 4, arg5_1, 128]);  unsqueeze_115 = None
        clone_56 = torch.ops.aten.clone.default(expand_95, memory_format = torch.contiguous_format);  expand_95 = None
        view_633 = torch.ops.aten.view.default(clone_56, [1, 32, arg5_1, 128]);  clone_56 = None
        unsqueeze_117 = torch.ops.aten.unsqueeze.default(index_put_37, 2)
        expand_97 = torch.ops.aten.expand.default(unsqueeze_117, [1, 8, 4, arg5_1, 128]);  unsqueeze_117 = None
        clone_57 = torch.ops.aten.clone.default(expand_97, memory_format = torch.contiguous_format);  expand_97 = None
        view_634 = torch.ops.aten.view.default(clone_57, [1, 32, arg5_1, 128]);  clone_57 = None
        clone_58 = torch.ops.aten.clone.default(add_6057, memory_format = torch.contiguous_format);  add_6057 = None
        full_default_74 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_75 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_18 = torch.ops.aten.where.self(arg6_1, full_default_75, full_default_74);  full_default_75 = full_default_74 = None
        expand_98 = torch.ops.aten.expand.default(where_18, [1, 32, arg0_1, arg5_1]);  where_18 = None
        _scaled_dot_product_efficient_attention_18 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_58, view_633, view_634, expand_98, False, scale = 0.08838834764831845);  clone_58 = view_633 = view_634 = expand_98 = None
        getitem_146 = _scaled_dot_product_efficient_attention_18[0];  _scaled_dot_product_efficient_attention_18 = None
        permute_205 = torch.ops.aten.permute.default(getitem_146, [0, 2, 1, 3]);  getitem_146 = None
        view_635 = torch.ops.aten.view.default(permute_205, [1, arg0_1, -1]);  permute_205 = None
        permute_206 = torch.ops.aten.permute.default(arg193_1, [1, 0]);  arg193_1 = None
        view_636 = torch.ops.aten.view.default(view_635, [arg0_1, 4096]);  view_635 = None
        mm_129 = torch.ops.aten.mm.default(view_636, permute_206);  view_636 = permute_206 = None
        view_637 = torch.ops.aten.view.default(mm_129, [1, arg0_1, 4096]);  mm_129 = None
        add_6239 = torch.ops.aten.add.Tensor(add_5963, view_637);  add_5963 = view_637 = None
        view_638 = torch.ops.aten.view.default(add_6239, [-1, 4096])
        empty_74 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_75 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_37 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 38, constant_args_idx = 37, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_74, 'X_ptr': view_638, 'W_ptr': arg194_1, 'RSTD_ptr': empty_75}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_74 = view_638 = arg194_1 = empty_75 = None
        getitem_150 = triton_kernel_wrapper_functional_proxy_37['Y_ptr'];  triton_kernel_wrapper_functional_proxy_37 = None
        permute_207 = torch.ops.aten.permute.default(arg195_1, [1, 0]);  arg195_1 = None
        view_641 = torch.ops.aten.view.default(getitem_150, [1, arg0_1, 4096])
        view_642 = torch.ops.aten.view.default(view_641, [arg0_1, 4096]);  view_641 = None
        mm_130 = torch.ops.aten.mm.default(view_642, permute_207);  view_642 = permute_207 = None
        view_643 = torch.ops.aten.view.default(mm_130, [1, arg0_1, 14336]);  mm_130 = None
        convert_element_type_301 = torch.ops.prims.convert_element_type.default(view_643, torch.float32);  view_643 = None
        sigmoid_18 = torch.ops.aten.sigmoid.default(convert_element_type_301)
        mul_7788 = torch.ops.aten.mul.Tensor(convert_element_type_301, sigmoid_18);  convert_element_type_301 = sigmoid_18 = None
        convert_element_type_302 = torch.ops.prims.convert_element_type.default(mul_7788, torch.float16);  mul_7788 = None
        permute_208 = torch.ops.aten.permute.default(arg196_1, [1, 0]);  arg196_1 = None
        view_645 = torch.ops.aten.view.default(getitem_150, [1, arg0_1, 4096]);  getitem_150 = None
        view_646 = torch.ops.aten.view.default(view_645, [arg0_1, 4096]);  view_645 = None
        mm_131 = torch.ops.aten.mm.default(view_646, permute_208);  view_646 = permute_208 = None
        view_647 = torch.ops.aten.view.default(mm_131, [1, arg0_1, 14336]);  mm_131 = None
        mul_7805 = torch.ops.aten.mul.Tensor(convert_element_type_302, view_647);  convert_element_type_302 = view_647 = None
        permute_209 = torch.ops.aten.permute.default(arg197_1, [1, 0]);  arg197_1 = None
        view_648 = torch.ops.aten.view.default(mul_7805, [arg0_1, 14336]);  mul_7805 = None
        mm_132 = torch.ops.aten.mm.default(view_648, permute_209);  view_648 = permute_209 = None
        view_649 = torch.ops.aten.view.default(mm_132, [1, arg0_1, 4096]);  mm_132 = None
        add_6292 = torch.ops.aten.add.Tensor(add_6239, view_649);  add_6239 = view_649 = None
        view_650 = torch.ops.aten.view.default(add_6292, [-1, 4096])
        empty_76 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_77 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_38 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 39, constant_args_idx = 38, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_76, 'X_ptr': view_650, 'W_ptr': arg198_1, 'RSTD_ptr': empty_77}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_76 = view_650 = arg198_1 = empty_77 = None
        getitem_152 = triton_kernel_wrapper_functional_proxy_38['Y_ptr'];  triton_kernel_wrapper_functional_proxy_38 = None
        permute_210 = torch.ops.aten.permute.default(arg199_1, [1, 0]);  arg199_1 = None
        view_653 = torch.ops.aten.view.default(getitem_152, [1, arg0_1, 4096])
        view_654 = torch.ops.aten.view.default(view_653, [arg0_1, 4096]);  view_653 = None
        mm_133 = torch.ops.aten.mm.default(view_654, permute_210);  view_654 = permute_210 = None
        view_655 = torch.ops.aten.view.default(mm_133, [1, arg0_1, 4096]);  mm_133 = None
        view_656 = torch.ops.aten.view.default(view_655, [1, arg0_1, -1, 128]);  view_655 = None
        permute_211 = torch.ops.aten.permute.default(view_656, [0, 2, 1, 3]);  view_656 = None
        permute_212 = torch.ops.aten.permute.default(arg200_1, [1, 0]);  arg200_1 = None
        view_658 = torch.ops.aten.view.default(getitem_152, [1, arg0_1, 4096])
        view_659 = torch.ops.aten.view.default(view_658, [arg0_1, 4096]);  view_658 = None
        mm_134 = torch.ops.aten.mm.default(view_659, permute_212);  view_659 = permute_212 = None
        view_660 = torch.ops.aten.view.default(mm_134, [1, arg0_1, 1024]);  mm_134 = None
        view_661 = torch.ops.aten.view.default(view_660, [1, arg0_1, -1, 128]);  view_660 = None
        permute_213 = torch.ops.aten.permute.default(view_661, [0, 2, 1, 3]);  view_661 = None
        permute_214 = torch.ops.aten.permute.default(arg201_1, [1, 0]);  arg201_1 = None
        view_663 = torch.ops.aten.view.default(getitem_152, [1, arg0_1, 4096]);  getitem_152 = None
        view_664 = torch.ops.aten.view.default(view_663, [arg0_1, 4096]);  view_663 = None
        mm_135 = torch.ops.aten.mm.default(view_664, permute_214);  view_664 = permute_214 = None
        view_665 = torch.ops.aten.view.default(mm_135, [1, arg0_1, 1024]);  mm_135 = None
        view_666 = torch.ops.aten.view.default(view_665, [1, arg0_1, -1, 128]);  view_665 = None
        permute_215 = torch.ops.aten.permute.default(view_666, [0, 2, 1, 3]);  view_666 = None
        unsqueeze_118 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_119 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_7907 = torch.ops.aten.mul.Tensor(permute_211, unsqueeze_118)
        slice_441 = torch.ops.aten.slice.Tensor(permute_211, 3, 0, 64)
        slice_442 = torch.ops.aten.slice.Tensor(permute_211, 3, 64, 9223372036854775807);  permute_211 = None
        neg_38 = torch.ops.aten.neg.default(slice_442);  slice_442 = None
        cat_38 = torch.ops.aten.cat.default([neg_38, slice_441], -1);  neg_38 = slice_441 = None
        mul_7924 = torch.ops.aten.mul.Tensor(cat_38, unsqueeze_119);  cat_38 = None
        add_6386 = torch.ops.aten.add.Tensor(mul_7907, mul_7924);  mul_7907 = mul_7924 = None
        mul_7932 = torch.ops.aten.mul.Tensor(permute_213, unsqueeze_118);  unsqueeze_118 = None
        slice_443 = torch.ops.aten.slice.Tensor(permute_213, 3, 0, 64)
        slice_444 = torch.ops.aten.slice.Tensor(permute_213, 3, 64, 9223372036854775807);  permute_213 = None
        neg_39 = torch.ops.aten.neg.default(slice_444);  slice_444 = None
        cat_39 = torch.ops.aten.cat.default([neg_39, slice_443], -1);  neg_39 = slice_443 = None
        mul_7949 = torch.ops.aten.mul.Tensor(cat_39, unsqueeze_119);  cat_39 = unsqueeze_119 = None
        add_6410 = torch.ops.aten.add.Tensor(mul_7932, mul_7949);  mul_7932 = mul_7949 = None
        full_default_76 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_77 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_38 = torch.ops.aten.index_put.default(full_default_76, [None, None, arg3_1], add_6410);  full_default_76 = add_6410 = None
        index_put_39 = torch.ops.aten.index_put.default(full_default_77, [None, None, arg3_1], permute_215);  full_default_77 = permute_215 = None
        unsqueeze_121 = torch.ops.aten.unsqueeze.default(index_put_38, 2)
        expand_100 = torch.ops.aten.expand.default(unsqueeze_121, [1, 8, 4, arg5_1, 128]);  unsqueeze_121 = None
        clone_59 = torch.ops.aten.clone.default(expand_100, memory_format = torch.contiguous_format);  expand_100 = None
        view_667 = torch.ops.aten.view.default(clone_59, [1, 32, arg5_1, 128]);  clone_59 = None
        unsqueeze_123 = torch.ops.aten.unsqueeze.default(index_put_39, 2)
        expand_102 = torch.ops.aten.expand.default(unsqueeze_123, [1, 8, 4, arg5_1, 128]);  unsqueeze_123 = None
        clone_60 = torch.ops.aten.clone.default(expand_102, memory_format = torch.contiguous_format);  expand_102 = None
        view_668 = torch.ops.aten.view.default(clone_60, [1, 32, arg5_1, 128]);  clone_60 = None
        clone_61 = torch.ops.aten.clone.default(add_6386, memory_format = torch.contiguous_format);  add_6386 = None
        full_default_78 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_79 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_19 = torch.ops.aten.where.self(arg6_1, full_default_79, full_default_78);  full_default_79 = full_default_78 = None
        expand_103 = torch.ops.aten.expand.default(where_19, [1, 32, arg0_1, arg5_1]);  where_19 = None
        _scaled_dot_product_efficient_attention_19 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_61, view_667, view_668, expand_103, False, scale = 0.08838834764831845);  clone_61 = view_667 = view_668 = expand_103 = None
        getitem_154 = _scaled_dot_product_efficient_attention_19[0];  _scaled_dot_product_efficient_attention_19 = None
        permute_216 = torch.ops.aten.permute.default(getitem_154, [0, 2, 1, 3]);  getitem_154 = None
        view_669 = torch.ops.aten.view.default(permute_216, [1, arg0_1, -1]);  permute_216 = None
        permute_217 = torch.ops.aten.permute.default(arg203_1, [1, 0]);  arg203_1 = None
        view_670 = torch.ops.aten.view.default(view_669, [arg0_1, 4096]);  view_669 = None
        mm_136 = torch.ops.aten.mm.default(view_670, permute_217);  view_670 = permute_217 = None
        view_671 = torch.ops.aten.view.default(mm_136, [1, arg0_1, 4096]);  mm_136 = None
        add_6568 = torch.ops.aten.add.Tensor(add_6292, view_671);  add_6292 = view_671 = None
        view_672 = torch.ops.aten.view.default(add_6568, [-1, 4096])
        empty_78 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_79 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_39 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 40, constant_args_idx = 39, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_78, 'X_ptr': view_672, 'W_ptr': arg204_1, 'RSTD_ptr': empty_79}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_78 = view_672 = arg204_1 = empty_79 = None
        getitem_158 = triton_kernel_wrapper_functional_proxy_39['Y_ptr'];  triton_kernel_wrapper_functional_proxy_39 = None
        permute_218 = torch.ops.aten.permute.default(arg205_1, [1, 0]);  arg205_1 = None
        view_675 = torch.ops.aten.view.default(getitem_158, [1, arg0_1, 4096])
        view_676 = torch.ops.aten.view.default(view_675, [arg0_1, 4096]);  view_675 = None
        mm_137 = torch.ops.aten.mm.default(view_676, permute_218);  view_676 = permute_218 = None
        view_677 = torch.ops.aten.view.default(mm_137, [1, arg0_1, 14336]);  mm_137 = None
        convert_element_type_317 = torch.ops.prims.convert_element_type.default(view_677, torch.float32);  view_677 = None
        sigmoid_19 = torch.ops.aten.sigmoid.default(convert_element_type_317)
        mul_8197 = torch.ops.aten.mul.Tensor(convert_element_type_317, sigmoid_19);  convert_element_type_317 = sigmoid_19 = None
        convert_element_type_318 = torch.ops.prims.convert_element_type.default(mul_8197, torch.float16);  mul_8197 = None
        permute_219 = torch.ops.aten.permute.default(arg206_1, [1, 0]);  arg206_1 = None
        view_679 = torch.ops.aten.view.default(getitem_158, [1, arg0_1, 4096]);  getitem_158 = None
        view_680 = torch.ops.aten.view.default(view_679, [arg0_1, 4096]);  view_679 = None
        mm_138 = torch.ops.aten.mm.default(view_680, permute_219);  view_680 = permute_219 = None
        view_681 = torch.ops.aten.view.default(mm_138, [1, arg0_1, 14336]);  mm_138 = None
        mul_8214 = torch.ops.aten.mul.Tensor(convert_element_type_318, view_681);  convert_element_type_318 = view_681 = None
        permute_220 = torch.ops.aten.permute.default(arg207_1, [1, 0]);  arg207_1 = None
        view_682 = torch.ops.aten.view.default(mul_8214, [arg0_1, 14336]);  mul_8214 = None
        mm_139 = torch.ops.aten.mm.default(view_682, permute_220);  view_682 = permute_220 = None
        view_683 = torch.ops.aten.view.default(mm_139, [1, arg0_1, 4096]);  mm_139 = None
        add_6621 = torch.ops.aten.add.Tensor(add_6568, view_683);  add_6568 = view_683 = None
        view_684 = torch.ops.aten.view.default(add_6621, [-1, 4096])
        empty_80 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_81 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_40 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 41, constant_args_idx = 40, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_80, 'X_ptr': view_684, 'W_ptr': arg208_1, 'RSTD_ptr': empty_81}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_80 = view_684 = arg208_1 = empty_81 = None
        getitem_160 = triton_kernel_wrapper_functional_proxy_40['Y_ptr'];  triton_kernel_wrapper_functional_proxy_40 = None
        permute_221 = torch.ops.aten.permute.default(arg209_1, [1, 0]);  arg209_1 = None
        view_687 = torch.ops.aten.view.default(getitem_160, [1, arg0_1, 4096])
        view_688 = torch.ops.aten.view.default(view_687, [arg0_1, 4096]);  view_687 = None
        mm_140 = torch.ops.aten.mm.default(view_688, permute_221);  view_688 = permute_221 = None
        view_689 = torch.ops.aten.view.default(mm_140, [1, arg0_1, 4096]);  mm_140 = None
        view_690 = torch.ops.aten.view.default(view_689, [1, arg0_1, -1, 128]);  view_689 = None
        permute_222 = torch.ops.aten.permute.default(view_690, [0, 2, 1, 3]);  view_690 = None
        permute_223 = torch.ops.aten.permute.default(arg210_1, [1, 0]);  arg210_1 = None
        view_692 = torch.ops.aten.view.default(getitem_160, [1, arg0_1, 4096])
        view_693 = torch.ops.aten.view.default(view_692, [arg0_1, 4096]);  view_692 = None
        mm_141 = torch.ops.aten.mm.default(view_693, permute_223);  view_693 = permute_223 = None
        view_694 = torch.ops.aten.view.default(mm_141, [1, arg0_1, 1024]);  mm_141 = None
        view_695 = torch.ops.aten.view.default(view_694, [1, arg0_1, -1, 128]);  view_694 = None
        permute_224 = torch.ops.aten.permute.default(view_695, [0, 2, 1, 3]);  view_695 = None
        permute_225 = torch.ops.aten.permute.default(arg211_1, [1, 0]);  arg211_1 = None
        view_697 = torch.ops.aten.view.default(getitem_160, [1, arg0_1, 4096]);  getitem_160 = None
        view_698 = torch.ops.aten.view.default(view_697, [arg0_1, 4096]);  view_697 = None
        mm_142 = torch.ops.aten.mm.default(view_698, permute_225);  view_698 = permute_225 = None
        view_699 = torch.ops.aten.view.default(mm_142, [1, arg0_1, 1024]);  mm_142 = None
        view_700 = torch.ops.aten.view.default(view_699, [1, arg0_1, -1, 128]);  view_699 = None
        permute_226 = torch.ops.aten.permute.default(view_700, [0, 2, 1, 3]);  view_700 = None
        unsqueeze_124 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_125 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_8316 = torch.ops.aten.mul.Tensor(permute_222, unsqueeze_124)
        slice_464 = torch.ops.aten.slice.Tensor(permute_222, 3, 0, 64)
        slice_465 = torch.ops.aten.slice.Tensor(permute_222, 3, 64, 9223372036854775807);  permute_222 = None
        neg_40 = torch.ops.aten.neg.default(slice_465);  slice_465 = None
        cat_40 = torch.ops.aten.cat.default([neg_40, slice_464], -1);  neg_40 = slice_464 = None
        mul_8333 = torch.ops.aten.mul.Tensor(cat_40, unsqueeze_125);  cat_40 = None
        add_6715 = torch.ops.aten.add.Tensor(mul_8316, mul_8333);  mul_8316 = mul_8333 = None
        mul_8341 = torch.ops.aten.mul.Tensor(permute_224, unsqueeze_124);  unsqueeze_124 = None
        slice_466 = torch.ops.aten.slice.Tensor(permute_224, 3, 0, 64)
        slice_467 = torch.ops.aten.slice.Tensor(permute_224, 3, 64, 9223372036854775807);  permute_224 = None
        neg_41 = torch.ops.aten.neg.default(slice_467);  slice_467 = None
        cat_41 = torch.ops.aten.cat.default([neg_41, slice_466], -1);  neg_41 = slice_466 = None
        mul_8358 = torch.ops.aten.mul.Tensor(cat_41, unsqueeze_125);  cat_41 = unsqueeze_125 = None
        add_6739 = torch.ops.aten.add.Tensor(mul_8341, mul_8358);  mul_8341 = mul_8358 = None
        full_default_80 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_81 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_40 = torch.ops.aten.index_put.default(full_default_80, [None, None, arg3_1], add_6739);  full_default_80 = add_6739 = None
        index_put_41 = torch.ops.aten.index_put.default(full_default_81, [None, None, arg3_1], permute_226);  full_default_81 = permute_226 = None
        unsqueeze_127 = torch.ops.aten.unsqueeze.default(index_put_40, 2)
        expand_105 = torch.ops.aten.expand.default(unsqueeze_127, [1, 8, 4, arg5_1, 128]);  unsqueeze_127 = None
        clone_62 = torch.ops.aten.clone.default(expand_105, memory_format = torch.contiguous_format);  expand_105 = None
        view_701 = torch.ops.aten.view.default(clone_62, [1, 32, arg5_1, 128]);  clone_62 = None
        unsqueeze_129 = torch.ops.aten.unsqueeze.default(index_put_41, 2)
        expand_107 = torch.ops.aten.expand.default(unsqueeze_129, [1, 8, 4, arg5_1, 128]);  unsqueeze_129 = None
        clone_63 = torch.ops.aten.clone.default(expand_107, memory_format = torch.contiguous_format);  expand_107 = None
        view_702 = torch.ops.aten.view.default(clone_63, [1, 32, arg5_1, 128]);  clone_63 = None
        clone_64 = torch.ops.aten.clone.default(add_6715, memory_format = torch.contiguous_format);  add_6715 = None
        full_default_82 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_83 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_20 = torch.ops.aten.where.self(arg6_1, full_default_83, full_default_82);  full_default_83 = full_default_82 = None
        expand_108 = torch.ops.aten.expand.default(where_20, [1, 32, arg0_1, arg5_1]);  where_20 = None
        _scaled_dot_product_efficient_attention_20 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_64, view_701, view_702, expand_108, False, scale = 0.08838834764831845);  clone_64 = view_701 = view_702 = expand_108 = None
        getitem_162 = _scaled_dot_product_efficient_attention_20[0];  _scaled_dot_product_efficient_attention_20 = None
        permute_227 = torch.ops.aten.permute.default(getitem_162, [0, 2, 1, 3]);  getitem_162 = None
        view_703 = torch.ops.aten.view.default(permute_227, [1, arg0_1, -1]);  permute_227 = None
        permute_228 = torch.ops.aten.permute.default(arg213_1, [1, 0]);  arg213_1 = None
        view_704 = torch.ops.aten.view.default(view_703, [arg0_1, 4096]);  view_703 = None
        mm_143 = torch.ops.aten.mm.default(view_704, permute_228);  view_704 = permute_228 = None
        view_705 = torch.ops.aten.view.default(mm_143, [1, arg0_1, 4096]);  mm_143 = None
        add_6897 = torch.ops.aten.add.Tensor(add_6621, view_705);  add_6621 = view_705 = None
        view_706 = torch.ops.aten.view.default(add_6897, [-1, 4096])
        empty_82 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_83 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_41 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 42, constant_args_idx = 41, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_82, 'X_ptr': view_706, 'W_ptr': arg214_1, 'RSTD_ptr': empty_83}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_82 = view_706 = arg214_1 = empty_83 = None
        getitem_166 = triton_kernel_wrapper_functional_proxy_41['Y_ptr'];  triton_kernel_wrapper_functional_proxy_41 = None
        permute_229 = torch.ops.aten.permute.default(arg215_1, [1, 0]);  arg215_1 = None
        view_709 = torch.ops.aten.view.default(getitem_166, [1, arg0_1, 4096])
        view_710 = torch.ops.aten.view.default(view_709, [arg0_1, 4096]);  view_709 = None
        mm_144 = torch.ops.aten.mm.default(view_710, permute_229);  view_710 = permute_229 = None
        view_711 = torch.ops.aten.view.default(mm_144, [1, arg0_1, 14336]);  mm_144 = None
        convert_element_type_333 = torch.ops.prims.convert_element_type.default(view_711, torch.float32);  view_711 = None
        sigmoid_20 = torch.ops.aten.sigmoid.default(convert_element_type_333)
        mul_8606 = torch.ops.aten.mul.Tensor(convert_element_type_333, sigmoid_20);  convert_element_type_333 = sigmoid_20 = None
        convert_element_type_334 = torch.ops.prims.convert_element_type.default(mul_8606, torch.float16);  mul_8606 = None
        permute_230 = torch.ops.aten.permute.default(arg216_1, [1, 0]);  arg216_1 = None
        view_713 = torch.ops.aten.view.default(getitem_166, [1, arg0_1, 4096]);  getitem_166 = None
        view_714 = torch.ops.aten.view.default(view_713, [arg0_1, 4096]);  view_713 = None
        mm_145 = torch.ops.aten.mm.default(view_714, permute_230);  view_714 = permute_230 = None
        view_715 = torch.ops.aten.view.default(mm_145, [1, arg0_1, 14336]);  mm_145 = None
        mul_8623 = torch.ops.aten.mul.Tensor(convert_element_type_334, view_715);  convert_element_type_334 = view_715 = None
        permute_231 = torch.ops.aten.permute.default(arg217_1, [1, 0]);  arg217_1 = None
        view_716 = torch.ops.aten.view.default(mul_8623, [arg0_1, 14336]);  mul_8623 = None
        mm_146 = torch.ops.aten.mm.default(view_716, permute_231);  view_716 = permute_231 = None
        view_717 = torch.ops.aten.view.default(mm_146, [1, arg0_1, 4096]);  mm_146 = None
        add_6950 = torch.ops.aten.add.Tensor(add_6897, view_717);  add_6897 = view_717 = None
        view_718 = torch.ops.aten.view.default(add_6950, [-1, 4096])
        empty_84 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_85 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_42 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 43, constant_args_idx = 42, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_84, 'X_ptr': view_718, 'W_ptr': arg218_1, 'RSTD_ptr': empty_85}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_84 = view_718 = arg218_1 = empty_85 = None
        getitem_168 = triton_kernel_wrapper_functional_proxy_42['Y_ptr'];  triton_kernel_wrapper_functional_proxy_42 = None
        permute_232 = torch.ops.aten.permute.default(arg219_1, [1, 0]);  arg219_1 = None
        view_721 = torch.ops.aten.view.default(getitem_168, [1, arg0_1, 4096])
        view_722 = torch.ops.aten.view.default(view_721, [arg0_1, 4096]);  view_721 = None
        mm_147 = torch.ops.aten.mm.default(view_722, permute_232);  view_722 = permute_232 = None
        view_723 = torch.ops.aten.view.default(mm_147, [1, arg0_1, 4096]);  mm_147 = None
        view_724 = torch.ops.aten.view.default(view_723, [1, arg0_1, -1, 128]);  view_723 = None
        permute_233 = torch.ops.aten.permute.default(view_724, [0, 2, 1, 3]);  view_724 = None
        permute_234 = torch.ops.aten.permute.default(arg220_1, [1, 0]);  arg220_1 = None
        view_726 = torch.ops.aten.view.default(getitem_168, [1, arg0_1, 4096])
        view_727 = torch.ops.aten.view.default(view_726, [arg0_1, 4096]);  view_726 = None
        mm_148 = torch.ops.aten.mm.default(view_727, permute_234);  view_727 = permute_234 = None
        view_728 = torch.ops.aten.view.default(mm_148, [1, arg0_1, 1024]);  mm_148 = None
        view_729 = torch.ops.aten.view.default(view_728, [1, arg0_1, -1, 128]);  view_728 = None
        permute_235 = torch.ops.aten.permute.default(view_729, [0, 2, 1, 3]);  view_729 = None
        permute_236 = torch.ops.aten.permute.default(arg221_1, [1, 0]);  arg221_1 = None
        view_731 = torch.ops.aten.view.default(getitem_168, [1, arg0_1, 4096]);  getitem_168 = None
        view_732 = torch.ops.aten.view.default(view_731, [arg0_1, 4096]);  view_731 = None
        mm_149 = torch.ops.aten.mm.default(view_732, permute_236);  view_732 = permute_236 = None
        view_733 = torch.ops.aten.view.default(mm_149, [1, arg0_1, 1024]);  mm_149 = None
        view_734 = torch.ops.aten.view.default(view_733, [1, arg0_1, -1, 128]);  view_733 = None
        permute_237 = torch.ops.aten.permute.default(view_734, [0, 2, 1, 3]);  view_734 = None
        unsqueeze_130 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_131 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_8725 = torch.ops.aten.mul.Tensor(permute_233, unsqueeze_130)
        slice_487 = torch.ops.aten.slice.Tensor(permute_233, 3, 0, 64)
        slice_488 = torch.ops.aten.slice.Tensor(permute_233, 3, 64, 9223372036854775807);  permute_233 = None
        neg_42 = torch.ops.aten.neg.default(slice_488);  slice_488 = None
        cat_42 = torch.ops.aten.cat.default([neg_42, slice_487], -1);  neg_42 = slice_487 = None
        mul_8742 = torch.ops.aten.mul.Tensor(cat_42, unsqueeze_131);  cat_42 = None
        add_7044 = torch.ops.aten.add.Tensor(mul_8725, mul_8742);  mul_8725 = mul_8742 = None
        mul_8750 = torch.ops.aten.mul.Tensor(permute_235, unsqueeze_130);  unsqueeze_130 = None
        slice_489 = torch.ops.aten.slice.Tensor(permute_235, 3, 0, 64)
        slice_490 = torch.ops.aten.slice.Tensor(permute_235, 3, 64, 9223372036854775807);  permute_235 = None
        neg_43 = torch.ops.aten.neg.default(slice_490);  slice_490 = None
        cat_43 = torch.ops.aten.cat.default([neg_43, slice_489], -1);  neg_43 = slice_489 = None
        mul_8767 = torch.ops.aten.mul.Tensor(cat_43, unsqueeze_131);  cat_43 = unsqueeze_131 = None
        add_7068 = torch.ops.aten.add.Tensor(mul_8750, mul_8767);  mul_8750 = mul_8767 = None
        full_default_84 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_85 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_42 = torch.ops.aten.index_put.default(full_default_84, [None, None, arg3_1], add_7068);  full_default_84 = add_7068 = None
        index_put_43 = torch.ops.aten.index_put.default(full_default_85, [None, None, arg3_1], permute_237);  full_default_85 = permute_237 = None
        unsqueeze_133 = torch.ops.aten.unsqueeze.default(index_put_42, 2)
        expand_110 = torch.ops.aten.expand.default(unsqueeze_133, [1, 8, 4, arg5_1, 128]);  unsqueeze_133 = None
        clone_65 = torch.ops.aten.clone.default(expand_110, memory_format = torch.contiguous_format);  expand_110 = None
        view_735 = torch.ops.aten.view.default(clone_65, [1, 32, arg5_1, 128]);  clone_65 = None
        unsqueeze_135 = torch.ops.aten.unsqueeze.default(index_put_43, 2)
        expand_112 = torch.ops.aten.expand.default(unsqueeze_135, [1, 8, 4, arg5_1, 128]);  unsqueeze_135 = None
        clone_66 = torch.ops.aten.clone.default(expand_112, memory_format = torch.contiguous_format);  expand_112 = None
        view_736 = torch.ops.aten.view.default(clone_66, [1, 32, arg5_1, 128]);  clone_66 = None
        clone_67 = torch.ops.aten.clone.default(add_7044, memory_format = torch.contiguous_format);  add_7044 = None
        full_default_86 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_87 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_21 = torch.ops.aten.where.self(arg6_1, full_default_87, full_default_86);  full_default_87 = full_default_86 = None
        expand_113 = torch.ops.aten.expand.default(where_21, [1, 32, arg0_1, arg5_1]);  where_21 = None
        _scaled_dot_product_efficient_attention_21 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_67, view_735, view_736, expand_113, False, scale = 0.08838834764831845);  clone_67 = view_735 = view_736 = expand_113 = None
        getitem_170 = _scaled_dot_product_efficient_attention_21[0];  _scaled_dot_product_efficient_attention_21 = None
        permute_238 = torch.ops.aten.permute.default(getitem_170, [0, 2, 1, 3]);  getitem_170 = None
        view_737 = torch.ops.aten.view.default(permute_238, [1, arg0_1, -1]);  permute_238 = None
        permute_239 = torch.ops.aten.permute.default(arg223_1, [1, 0]);  arg223_1 = None
        view_738 = torch.ops.aten.view.default(view_737, [arg0_1, 4096]);  view_737 = None
        mm_150 = torch.ops.aten.mm.default(view_738, permute_239);  view_738 = permute_239 = None
        view_739 = torch.ops.aten.view.default(mm_150, [1, arg0_1, 4096]);  mm_150 = None
        add_7226 = torch.ops.aten.add.Tensor(add_6950, view_739);  add_6950 = view_739 = None
        view_740 = torch.ops.aten.view.default(add_7226, [-1, 4096])
        empty_86 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_87 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_43 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 44, constant_args_idx = 43, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_86, 'X_ptr': view_740, 'W_ptr': arg224_1, 'RSTD_ptr': empty_87}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_86 = view_740 = arg224_1 = empty_87 = None
        getitem_174 = triton_kernel_wrapper_functional_proxy_43['Y_ptr'];  triton_kernel_wrapper_functional_proxy_43 = None
        permute_240 = torch.ops.aten.permute.default(arg225_1, [1, 0]);  arg225_1 = None
        view_743 = torch.ops.aten.view.default(getitem_174, [1, arg0_1, 4096])
        view_744 = torch.ops.aten.view.default(view_743, [arg0_1, 4096]);  view_743 = None
        mm_151 = torch.ops.aten.mm.default(view_744, permute_240);  view_744 = permute_240 = None
        view_745 = torch.ops.aten.view.default(mm_151, [1, arg0_1, 14336]);  mm_151 = None
        convert_element_type_349 = torch.ops.prims.convert_element_type.default(view_745, torch.float32);  view_745 = None
        sigmoid_21 = torch.ops.aten.sigmoid.default(convert_element_type_349)
        mul_9015 = torch.ops.aten.mul.Tensor(convert_element_type_349, sigmoid_21);  convert_element_type_349 = sigmoid_21 = None
        convert_element_type_350 = torch.ops.prims.convert_element_type.default(mul_9015, torch.float16);  mul_9015 = None
        permute_241 = torch.ops.aten.permute.default(arg226_1, [1, 0]);  arg226_1 = None
        view_747 = torch.ops.aten.view.default(getitem_174, [1, arg0_1, 4096]);  getitem_174 = None
        view_748 = torch.ops.aten.view.default(view_747, [arg0_1, 4096]);  view_747 = None
        mm_152 = torch.ops.aten.mm.default(view_748, permute_241);  view_748 = permute_241 = None
        view_749 = torch.ops.aten.view.default(mm_152, [1, arg0_1, 14336]);  mm_152 = None
        mul_9032 = torch.ops.aten.mul.Tensor(convert_element_type_350, view_749);  convert_element_type_350 = view_749 = None
        permute_242 = torch.ops.aten.permute.default(arg227_1, [1, 0]);  arg227_1 = None
        view_750 = torch.ops.aten.view.default(mul_9032, [arg0_1, 14336]);  mul_9032 = None
        mm_153 = torch.ops.aten.mm.default(view_750, permute_242);  view_750 = permute_242 = None
        view_751 = torch.ops.aten.view.default(mm_153, [1, arg0_1, 4096]);  mm_153 = None
        add_7279 = torch.ops.aten.add.Tensor(add_7226, view_751);  add_7226 = view_751 = None
        view_752 = torch.ops.aten.view.default(add_7279, [-1, 4096])
        empty_88 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_89 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_44 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 45, constant_args_idx = 44, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_88, 'X_ptr': view_752, 'W_ptr': arg228_1, 'RSTD_ptr': empty_89}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_88 = view_752 = arg228_1 = empty_89 = None
        getitem_176 = triton_kernel_wrapper_functional_proxy_44['Y_ptr'];  triton_kernel_wrapper_functional_proxy_44 = None
        permute_243 = torch.ops.aten.permute.default(arg229_1, [1, 0]);  arg229_1 = None
        view_755 = torch.ops.aten.view.default(getitem_176, [1, arg0_1, 4096])
        view_756 = torch.ops.aten.view.default(view_755, [arg0_1, 4096]);  view_755 = None
        mm_154 = torch.ops.aten.mm.default(view_756, permute_243);  view_756 = permute_243 = None
        view_757 = torch.ops.aten.view.default(mm_154, [1, arg0_1, 4096]);  mm_154 = None
        view_758 = torch.ops.aten.view.default(view_757, [1, arg0_1, -1, 128]);  view_757 = None
        permute_244 = torch.ops.aten.permute.default(view_758, [0, 2, 1, 3]);  view_758 = None
        permute_245 = torch.ops.aten.permute.default(arg230_1, [1, 0]);  arg230_1 = None
        view_760 = torch.ops.aten.view.default(getitem_176, [1, arg0_1, 4096])
        view_761 = torch.ops.aten.view.default(view_760, [arg0_1, 4096]);  view_760 = None
        mm_155 = torch.ops.aten.mm.default(view_761, permute_245);  view_761 = permute_245 = None
        view_762 = torch.ops.aten.view.default(mm_155, [1, arg0_1, 1024]);  mm_155 = None
        view_763 = torch.ops.aten.view.default(view_762, [1, arg0_1, -1, 128]);  view_762 = None
        permute_246 = torch.ops.aten.permute.default(view_763, [0, 2, 1, 3]);  view_763 = None
        permute_247 = torch.ops.aten.permute.default(arg231_1, [1, 0]);  arg231_1 = None
        view_765 = torch.ops.aten.view.default(getitem_176, [1, arg0_1, 4096]);  getitem_176 = None
        view_766 = torch.ops.aten.view.default(view_765, [arg0_1, 4096]);  view_765 = None
        mm_156 = torch.ops.aten.mm.default(view_766, permute_247);  view_766 = permute_247 = None
        view_767 = torch.ops.aten.view.default(mm_156, [1, arg0_1, 1024]);  mm_156 = None
        view_768 = torch.ops.aten.view.default(view_767, [1, arg0_1, -1, 128]);  view_767 = None
        permute_248 = torch.ops.aten.permute.default(view_768, [0, 2, 1, 3]);  view_768 = None
        unsqueeze_136 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_137 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_9134 = torch.ops.aten.mul.Tensor(permute_244, unsqueeze_136)
        slice_510 = torch.ops.aten.slice.Tensor(permute_244, 3, 0, 64)
        slice_511 = torch.ops.aten.slice.Tensor(permute_244, 3, 64, 9223372036854775807);  permute_244 = None
        neg_44 = torch.ops.aten.neg.default(slice_511);  slice_511 = None
        cat_44 = torch.ops.aten.cat.default([neg_44, slice_510], -1);  neg_44 = slice_510 = None
        mul_9151 = torch.ops.aten.mul.Tensor(cat_44, unsqueeze_137);  cat_44 = None
        add_7373 = torch.ops.aten.add.Tensor(mul_9134, mul_9151);  mul_9134 = mul_9151 = None
        mul_9159 = torch.ops.aten.mul.Tensor(permute_246, unsqueeze_136);  unsqueeze_136 = None
        slice_512 = torch.ops.aten.slice.Tensor(permute_246, 3, 0, 64)
        slice_513 = torch.ops.aten.slice.Tensor(permute_246, 3, 64, 9223372036854775807);  permute_246 = None
        neg_45 = torch.ops.aten.neg.default(slice_513);  slice_513 = None
        cat_45 = torch.ops.aten.cat.default([neg_45, slice_512], -1);  neg_45 = slice_512 = None
        mul_9176 = torch.ops.aten.mul.Tensor(cat_45, unsqueeze_137);  cat_45 = unsqueeze_137 = None
        add_7397 = torch.ops.aten.add.Tensor(mul_9159, mul_9176);  mul_9159 = mul_9176 = None
        full_default_88 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_89 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_44 = torch.ops.aten.index_put.default(full_default_88, [None, None, arg3_1], add_7397);  full_default_88 = add_7397 = None
        index_put_45 = torch.ops.aten.index_put.default(full_default_89, [None, None, arg3_1], permute_248);  full_default_89 = permute_248 = None
        unsqueeze_139 = torch.ops.aten.unsqueeze.default(index_put_44, 2)
        expand_115 = torch.ops.aten.expand.default(unsqueeze_139, [1, 8, 4, arg5_1, 128]);  unsqueeze_139 = None
        clone_68 = torch.ops.aten.clone.default(expand_115, memory_format = torch.contiguous_format);  expand_115 = None
        view_769 = torch.ops.aten.view.default(clone_68, [1, 32, arg5_1, 128]);  clone_68 = None
        unsqueeze_141 = torch.ops.aten.unsqueeze.default(index_put_45, 2)
        expand_117 = torch.ops.aten.expand.default(unsqueeze_141, [1, 8, 4, arg5_1, 128]);  unsqueeze_141 = None
        clone_69 = torch.ops.aten.clone.default(expand_117, memory_format = torch.contiguous_format);  expand_117 = None
        view_770 = torch.ops.aten.view.default(clone_69, [1, 32, arg5_1, 128]);  clone_69 = None
        clone_70 = torch.ops.aten.clone.default(add_7373, memory_format = torch.contiguous_format);  add_7373 = None
        full_default_90 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_91 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_22 = torch.ops.aten.where.self(arg6_1, full_default_91, full_default_90);  full_default_91 = full_default_90 = None
        expand_118 = torch.ops.aten.expand.default(where_22, [1, 32, arg0_1, arg5_1]);  where_22 = None
        _scaled_dot_product_efficient_attention_22 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_70, view_769, view_770, expand_118, False, scale = 0.08838834764831845);  clone_70 = view_769 = view_770 = expand_118 = None
        getitem_178 = _scaled_dot_product_efficient_attention_22[0];  _scaled_dot_product_efficient_attention_22 = None
        permute_249 = torch.ops.aten.permute.default(getitem_178, [0, 2, 1, 3]);  getitem_178 = None
        view_771 = torch.ops.aten.view.default(permute_249, [1, arg0_1, -1]);  permute_249 = None
        permute_250 = torch.ops.aten.permute.default(arg233_1, [1, 0]);  arg233_1 = None
        view_772 = torch.ops.aten.view.default(view_771, [arg0_1, 4096]);  view_771 = None
        mm_157 = torch.ops.aten.mm.default(view_772, permute_250);  view_772 = permute_250 = None
        view_773 = torch.ops.aten.view.default(mm_157, [1, arg0_1, 4096]);  mm_157 = None
        add_7555 = torch.ops.aten.add.Tensor(add_7279, view_773);  add_7279 = view_773 = None
        view_774 = torch.ops.aten.view.default(add_7555, [-1, 4096])
        empty_90 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_91 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_45 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 46, constant_args_idx = 45, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_90, 'X_ptr': view_774, 'W_ptr': arg234_1, 'RSTD_ptr': empty_91}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_90 = view_774 = arg234_1 = empty_91 = None
        getitem_182 = triton_kernel_wrapper_functional_proxy_45['Y_ptr'];  triton_kernel_wrapper_functional_proxy_45 = None
        permute_251 = torch.ops.aten.permute.default(arg235_1, [1, 0]);  arg235_1 = None
        view_777 = torch.ops.aten.view.default(getitem_182, [1, arg0_1, 4096])
        view_778 = torch.ops.aten.view.default(view_777, [arg0_1, 4096]);  view_777 = None
        mm_158 = torch.ops.aten.mm.default(view_778, permute_251);  view_778 = permute_251 = None
        view_779 = torch.ops.aten.view.default(mm_158, [1, arg0_1, 14336]);  mm_158 = None
        convert_element_type_365 = torch.ops.prims.convert_element_type.default(view_779, torch.float32);  view_779 = None
        sigmoid_22 = torch.ops.aten.sigmoid.default(convert_element_type_365)
        mul_9424 = torch.ops.aten.mul.Tensor(convert_element_type_365, sigmoid_22);  convert_element_type_365 = sigmoid_22 = None
        convert_element_type_366 = torch.ops.prims.convert_element_type.default(mul_9424, torch.float16);  mul_9424 = None
        permute_252 = torch.ops.aten.permute.default(arg236_1, [1, 0]);  arg236_1 = None
        view_781 = torch.ops.aten.view.default(getitem_182, [1, arg0_1, 4096]);  getitem_182 = None
        view_782 = torch.ops.aten.view.default(view_781, [arg0_1, 4096]);  view_781 = None
        mm_159 = torch.ops.aten.mm.default(view_782, permute_252);  view_782 = permute_252 = None
        view_783 = torch.ops.aten.view.default(mm_159, [1, arg0_1, 14336]);  mm_159 = None
        mul_9441 = torch.ops.aten.mul.Tensor(convert_element_type_366, view_783);  convert_element_type_366 = view_783 = None
        permute_253 = torch.ops.aten.permute.default(arg237_1, [1, 0]);  arg237_1 = None
        view_784 = torch.ops.aten.view.default(mul_9441, [arg0_1, 14336]);  mul_9441 = None
        mm_160 = torch.ops.aten.mm.default(view_784, permute_253);  view_784 = permute_253 = None
        view_785 = torch.ops.aten.view.default(mm_160, [1, arg0_1, 4096]);  mm_160 = None
        add_7608 = torch.ops.aten.add.Tensor(add_7555, view_785);  add_7555 = view_785 = None
        view_786 = torch.ops.aten.view.default(add_7608, [-1, 4096])
        empty_92 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_93 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_46 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 47, constant_args_idx = 46, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_92, 'X_ptr': view_786, 'W_ptr': arg238_1, 'RSTD_ptr': empty_93}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_92 = view_786 = arg238_1 = empty_93 = None
        getitem_184 = triton_kernel_wrapper_functional_proxy_46['Y_ptr'];  triton_kernel_wrapper_functional_proxy_46 = None
        permute_254 = torch.ops.aten.permute.default(arg239_1, [1, 0]);  arg239_1 = None
        view_789 = torch.ops.aten.view.default(getitem_184, [1, arg0_1, 4096])
        view_790 = torch.ops.aten.view.default(view_789, [arg0_1, 4096]);  view_789 = None
        mm_161 = torch.ops.aten.mm.default(view_790, permute_254);  view_790 = permute_254 = None
        view_791 = torch.ops.aten.view.default(mm_161, [1, arg0_1, 4096]);  mm_161 = None
        view_792 = torch.ops.aten.view.default(view_791, [1, arg0_1, -1, 128]);  view_791 = None
        permute_255 = torch.ops.aten.permute.default(view_792, [0, 2, 1, 3]);  view_792 = None
        permute_256 = torch.ops.aten.permute.default(arg240_1, [1, 0]);  arg240_1 = None
        view_794 = torch.ops.aten.view.default(getitem_184, [1, arg0_1, 4096])
        view_795 = torch.ops.aten.view.default(view_794, [arg0_1, 4096]);  view_794 = None
        mm_162 = torch.ops.aten.mm.default(view_795, permute_256);  view_795 = permute_256 = None
        view_796 = torch.ops.aten.view.default(mm_162, [1, arg0_1, 1024]);  mm_162 = None
        view_797 = torch.ops.aten.view.default(view_796, [1, arg0_1, -1, 128]);  view_796 = None
        permute_257 = torch.ops.aten.permute.default(view_797, [0, 2, 1, 3]);  view_797 = None
        permute_258 = torch.ops.aten.permute.default(arg241_1, [1, 0]);  arg241_1 = None
        view_799 = torch.ops.aten.view.default(getitem_184, [1, arg0_1, 4096]);  getitem_184 = None
        view_800 = torch.ops.aten.view.default(view_799, [arg0_1, 4096]);  view_799 = None
        mm_163 = torch.ops.aten.mm.default(view_800, permute_258);  view_800 = permute_258 = None
        view_801 = torch.ops.aten.view.default(mm_163, [1, arg0_1, 1024]);  mm_163 = None
        view_802 = torch.ops.aten.view.default(view_801, [1, arg0_1, -1, 128]);  view_801 = None
        permute_259 = torch.ops.aten.permute.default(view_802, [0, 2, 1, 3]);  view_802 = None
        unsqueeze_142 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_143 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_9543 = torch.ops.aten.mul.Tensor(permute_255, unsqueeze_142)
        slice_533 = torch.ops.aten.slice.Tensor(permute_255, 3, 0, 64)
        slice_534 = torch.ops.aten.slice.Tensor(permute_255, 3, 64, 9223372036854775807);  permute_255 = None
        neg_46 = torch.ops.aten.neg.default(slice_534);  slice_534 = None
        cat_46 = torch.ops.aten.cat.default([neg_46, slice_533], -1);  neg_46 = slice_533 = None
        mul_9560 = torch.ops.aten.mul.Tensor(cat_46, unsqueeze_143);  cat_46 = None
        add_7702 = torch.ops.aten.add.Tensor(mul_9543, mul_9560);  mul_9543 = mul_9560 = None
        mul_9568 = torch.ops.aten.mul.Tensor(permute_257, unsqueeze_142);  unsqueeze_142 = None
        slice_535 = torch.ops.aten.slice.Tensor(permute_257, 3, 0, 64)
        slice_536 = torch.ops.aten.slice.Tensor(permute_257, 3, 64, 9223372036854775807);  permute_257 = None
        neg_47 = torch.ops.aten.neg.default(slice_536);  slice_536 = None
        cat_47 = torch.ops.aten.cat.default([neg_47, slice_535], -1);  neg_47 = slice_535 = None
        mul_9585 = torch.ops.aten.mul.Tensor(cat_47, unsqueeze_143);  cat_47 = unsqueeze_143 = None
        add_7726 = torch.ops.aten.add.Tensor(mul_9568, mul_9585);  mul_9568 = mul_9585 = None
        full_default_92 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_93 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_46 = torch.ops.aten.index_put.default(full_default_92, [None, None, arg3_1], add_7726);  full_default_92 = add_7726 = None
        index_put_47 = torch.ops.aten.index_put.default(full_default_93, [None, None, arg3_1], permute_259);  full_default_93 = permute_259 = None
        unsqueeze_145 = torch.ops.aten.unsqueeze.default(index_put_46, 2)
        expand_120 = torch.ops.aten.expand.default(unsqueeze_145, [1, 8, 4, arg5_1, 128]);  unsqueeze_145 = None
        clone_71 = torch.ops.aten.clone.default(expand_120, memory_format = torch.contiguous_format);  expand_120 = None
        view_803 = torch.ops.aten.view.default(clone_71, [1, 32, arg5_1, 128]);  clone_71 = None
        unsqueeze_147 = torch.ops.aten.unsqueeze.default(index_put_47, 2)
        expand_122 = torch.ops.aten.expand.default(unsqueeze_147, [1, 8, 4, arg5_1, 128]);  unsqueeze_147 = None
        clone_72 = torch.ops.aten.clone.default(expand_122, memory_format = torch.contiguous_format);  expand_122 = None
        view_804 = torch.ops.aten.view.default(clone_72, [1, 32, arg5_1, 128]);  clone_72 = None
        clone_73 = torch.ops.aten.clone.default(add_7702, memory_format = torch.contiguous_format);  add_7702 = None
        full_default_94 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_95 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_23 = torch.ops.aten.where.self(arg6_1, full_default_95, full_default_94);  full_default_95 = full_default_94 = None
        expand_123 = torch.ops.aten.expand.default(where_23, [1, 32, arg0_1, arg5_1]);  where_23 = None
        _scaled_dot_product_efficient_attention_23 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_73, view_803, view_804, expand_123, False, scale = 0.08838834764831845);  clone_73 = view_803 = view_804 = expand_123 = None
        getitem_186 = _scaled_dot_product_efficient_attention_23[0];  _scaled_dot_product_efficient_attention_23 = None
        permute_260 = torch.ops.aten.permute.default(getitem_186, [0, 2, 1, 3]);  getitem_186 = None
        view_805 = torch.ops.aten.view.default(permute_260, [1, arg0_1, -1]);  permute_260 = None
        permute_261 = torch.ops.aten.permute.default(arg243_1, [1, 0]);  arg243_1 = None
        view_806 = torch.ops.aten.view.default(view_805, [arg0_1, 4096]);  view_805 = None
        mm_164 = torch.ops.aten.mm.default(view_806, permute_261);  view_806 = permute_261 = None
        view_807 = torch.ops.aten.view.default(mm_164, [1, arg0_1, 4096]);  mm_164 = None
        add_7884 = torch.ops.aten.add.Tensor(add_7608, view_807);  add_7608 = view_807 = None
        view_808 = torch.ops.aten.view.default(add_7884, [-1, 4096])
        empty_94 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_95 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_47 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 48, constant_args_idx = 47, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_94, 'X_ptr': view_808, 'W_ptr': arg244_1, 'RSTD_ptr': empty_95}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_94 = view_808 = arg244_1 = empty_95 = None
        getitem_190 = triton_kernel_wrapper_functional_proxy_47['Y_ptr'];  triton_kernel_wrapper_functional_proxy_47 = None
        permute_262 = torch.ops.aten.permute.default(arg245_1, [1, 0]);  arg245_1 = None
        view_811 = torch.ops.aten.view.default(getitem_190, [1, arg0_1, 4096])
        view_812 = torch.ops.aten.view.default(view_811, [arg0_1, 4096]);  view_811 = None
        mm_165 = torch.ops.aten.mm.default(view_812, permute_262);  view_812 = permute_262 = None
        view_813 = torch.ops.aten.view.default(mm_165, [1, arg0_1, 14336]);  mm_165 = None
        convert_element_type_381 = torch.ops.prims.convert_element_type.default(view_813, torch.float32);  view_813 = None
        sigmoid_23 = torch.ops.aten.sigmoid.default(convert_element_type_381)
        mul_9833 = torch.ops.aten.mul.Tensor(convert_element_type_381, sigmoid_23);  convert_element_type_381 = sigmoid_23 = None
        convert_element_type_382 = torch.ops.prims.convert_element_type.default(mul_9833, torch.float16);  mul_9833 = None
        permute_263 = torch.ops.aten.permute.default(arg246_1, [1, 0]);  arg246_1 = None
        view_815 = torch.ops.aten.view.default(getitem_190, [1, arg0_1, 4096]);  getitem_190 = None
        view_816 = torch.ops.aten.view.default(view_815, [arg0_1, 4096]);  view_815 = None
        mm_166 = torch.ops.aten.mm.default(view_816, permute_263);  view_816 = permute_263 = None
        view_817 = torch.ops.aten.view.default(mm_166, [1, arg0_1, 14336]);  mm_166 = None
        mul_9850 = torch.ops.aten.mul.Tensor(convert_element_type_382, view_817);  convert_element_type_382 = view_817 = None
        permute_264 = torch.ops.aten.permute.default(arg247_1, [1, 0]);  arg247_1 = None
        view_818 = torch.ops.aten.view.default(mul_9850, [arg0_1, 14336]);  mul_9850 = None
        mm_167 = torch.ops.aten.mm.default(view_818, permute_264);  view_818 = permute_264 = None
        view_819 = torch.ops.aten.view.default(mm_167, [1, arg0_1, 4096]);  mm_167 = None
        add_7937 = torch.ops.aten.add.Tensor(add_7884, view_819);  add_7884 = view_819 = None
        view_820 = torch.ops.aten.view.default(add_7937, [-1, 4096])
        empty_96 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_97 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_48 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 49, constant_args_idx = 48, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_96, 'X_ptr': view_820, 'W_ptr': arg248_1, 'RSTD_ptr': empty_97}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_96 = view_820 = arg248_1 = empty_97 = None
        getitem_192 = triton_kernel_wrapper_functional_proxy_48['Y_ptr'];  triton_kernel_wrapper_functional_proxy_48 = None
        permute_265 = torch.ops.aten.permute.default(arg249_1, [1, 0]);  arg249_1 = None
        view_823 = torch.ops.aten.view.default(getitem_192, [1, arg0_1, 4096])
        view_824 = torch.ops.aten.view.default(view_823, [arg0_1, 4096]);  view_823 = None
        mm_168 = torch.ops.aten.mm.default(view_824, permute_265);  view_824 = permute_265 = None
        view_825 = torch.ops.aten.view.default(mm_168, [1, arg0_1, 4096]);  mm_168 = None
        view_826 = torch.ops.aten.view.default(view_825, [1, arg0_1, -1, 128]);  view_825 = None
        permute_266 = torch.ops.aten.permute.default(view_826, [0, 2, 1, 3]);  view_826 = None
        permute_267 = torch.ops.aten.permute.default(arg250_1, [1, 0]);  arg250_1 = None
        view_828 = torch.ops.aten.view.default(getitem_192, [1, arg0_1, 4096])
        view_829 = torch.ops.aten.view.default(view_828, [arg0_1, 4096]);  view_828 = None
        mm_169 = torch.ops.aten.mm.default(view_829, permute_267);  view_829 = permute_267 = None
        view_830 = torch.ops.aten.view.default(mm_169, [1, arg0_1, 1024]);  mm_169 = None
        view_831 = torch.ops.aten.view.default(view_830, [1, arg0_1, -1, 128]);  view_830 = None
        permute_268 = torch.ops.aten.permute.default(view_831, [0, 2, 1, 3]);  view_831 = None
        permute_269 = torch.ops.aten.permute.default(arg251_1, [1, 0]);  arg251_1 = None
        view_833 = torch.ops.aten.view.default(getitem_192, [1, arg0_1, 4096]);  getitem_192 = None
        view_834 = torch.ops.aten.view.default(view_833, [arg0_1, 4096]);  view_833 = None
        mm_170 = torch.ops.aten.mm.default(view_834, permute_269);  view_834 = permute_269 = None
        view_835 = torch.ops.aten.view.default(mm_170, [1, arg0_1, 1024]);  mm_170 = None
        view_836 = torch.ops.aten.view.default(view_835, [1, arg0_1, -1, 128]);  view_835 = None
        permute_270 = torch.ops.aten.permute.default(view_836, [0, 2, 1, 3]);  view_836 = None
        unsqueeze_148 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_149 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_9952 = torch.ops.aten.mul.Tensor(permute_266, unsqueeze_148)
        slice_556 = torch.ops.aten.slice.Tensor(permute_266, 3, 0, 64)
        slice_557 = torch.ops.aten.slice.Tensor(permute_266, 3, 64, 9223372036854775807);  permute_266 = None
        neg_48 = torch.ops.aten.neg.default(slice_557);  slice_557 = None
        cat_48 = torch.ops.aten.cat.default([neg_48, slice_556], -1);  neg_48 = slice_556 = None
        mul_9969 = torch.ops.aten.mul.Tensor(cat_48, unsqueeze_149);  cat_48 = None
        add_8031 = torch.ops.aten.add.Tensor(mul_9952, mul_9969);  mul_9952 = mul_9969 = None
        mul_9977 = torch.ops.aten.mul.Tensor(permute_268, unsqueeze_148);  unsqueeze_148 = None
        slice_558 = torch.ops.aten.slice.Tensor(permute_268, 3, 0, 64)
        slice_559 = torch.ops.aten.slice.Tensor(permute_268, 3, 64, 9223372036854775807);  permute_268 = None
        neg_49 = torch.ops.aten.neg.default(slice_559);  slice_559 = None
        cat_49 = torch.ops.aten.cat.default([neg_49, slice_558], -1);  neg_49 = slice_558 = None
        mul_9994 = torch.ops.aten.mul.Tensor(cat_49, unsqueeze_149);  cat_49 = unsqueeze_149 = None
        add_8055 = torch.ops.aten.add.Tensor(mul_9977, mul_9994);  mul_9977 = mul_9994 = None
        full_default_96 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_97 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_48 = torch.ops.aten.index_put.default(full_default_96, [None, None, arg3_1], add_8055);  full_default_96 = add_8055 = None
        index_put_49 = torch.ops.aten.index_put.default(full_default_97, [None, None, arg3_1], permute_270);  full_default_97 = permute_270 = None
        unsqueeze_151 = torch.ops.aten.unsqueeze.default(index_put_48, 2)
        expand_125 = torch.ops.aten.expand.default(unsqueeze_151, [1, 8, 4, arg5_1, 128]);  unsqueeze_151 = None
        clone_74 = torch.ops.aten.clone.default(expand_125, memory_format = torch.contiguous_format);  expand_125 = None
        view_837 = torch.ops.aten.view.default(clone_74, [1, 32, arg5_1, 128]);  clone_74 = None
        unsqueeze_153 = torch.ops.aten.unsqueeze.default(index_put_49, 2)
        expand_127 = torch.ops.aten.expand.default(unsqueeze_153, [1, 8, 4, arg5_1, 128]);  unsqueeze_153 = None
        clone_75 = torch.ops.aten.clone.default(expand_127, memory_format = torch.contiguous_format);  expand_127 = None
        view_838 = torch.ops.aten.view.default(clone_75, [1, 32, arg5_1, 128]);  clone_75 = None
        clone_76 = torch.ops.aten.clone.default(add_8031, memory_format = torch.contiguous_format);  add_8031 = None
        full_default_98 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_99 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_24 = torch.ops.aten.where.self(arg6_1, full_default_99, full_default_98);  full_default_99 = full_default_98 = None
        expand_128 = torch.ops.aten.expand.default(where_24, [1, 32, arg0_1, arg5_1]);  where_24 = None
        _scaled_dot_product_efficient_attention_24 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_76, view_837, view_838, expand_128, False, scale = 0.08838834764831845);  clone_76 = view_837 = view_838 = expand_128 = None
        getitem_194 = _scaled_dot_product_efficient_attention_24[0];  _scaled_dot_product_efficient_attention_24 = None
        permute_271 = torch.ops.aten.permute.default(getitem_194, [0, 2, 1, 3]);  getitem_194 = None
        view_839 = torch.ops.aten.view.default(permute_271, [1, arg0_1, -1]);  permute_271 = None
        permute_272 = torch.ops.aten.permute.default(arg253_1, [1, 0]);  arg253_1 = None
        view_840 = torch.ops.aten.view.default(view_839, [arg0_1, 4096]);  view_839 = None
        mm_171 = torch.ops.aten.mm.default(view_840, permute_272);  view_840 = permute_272 = None
        view_841 = torch.ops.aten.view.default(mm_171, [1, arg0_1, 4096]);  mm_171 = None
        add_8213 = torch.ops.aten.add.Tensor(add_7937, view_841);  add_7937 = view_841 = None
        view_842 = torch.ops.aten.view.default(add_8213, [-1, 4096])
        empty_98 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_99 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_49 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 50, constant_args_idx = 49, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_98, 'X_ptr': view_842, 'W_ptr': arg254_1, 'RSTD_ptr': empty_99}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_98 = view_842 = arg254_1 = empty_99 = None
        getitem_198 = triton_kernel_wrapper_functional_proxy_49['Y_ptr'];  triton_kernel_wrapper_functional_proxy_49 = None
        permute_273 = torch.ops.aten.permute.default(arg255_1, [1, 0]);  arg255_1 = None
        view_845 = torch.ops.aten.view.default(getitem_198, [1, arg0_1, 4096])
        view_846 = torch.ops.aten.view.default(view_845, [arg0_1, 4096]);  view_845 = None
        mm_172 = torch.ops.aten.mm.default(view_846, permute_273);  view_846 = permute_273 = None
        view_847 = torch.ops.aten.view.default(mm_172, [1, arg0_1, 14336]);  mm_172 = None
        convert_element_type_397 = torch.ops.prims.convert_element_type.default(view_847, torch.float32);  view_847 = None
        sigmoid_24 = torch.ops.aten.sigmoid.default(convert_element_type_397)
        mul_10242 = torch.ops.aten.mul.Tensor(convert_element_type_397, sigmoid_24);  convert_element_type_397 = sigmoid_24 = None
        convert_element_type_398 = torch.ops.prims.convert_element_type.default(mul_10242, torch.float16);  mul_10242 = None
        permute_274 = torch.ops.aten.permute.default(arg256_1, [1, 0]);  arg256_1 = None
        view_849 = torch.ops.aten.view.default(getitem_198, [1, arg0_1, 4096]);  getitem_198 = None
        view_850 = torch.ops.aten.view.default(view_849, [arg0_1, 4096]);  view_849 = None
        mm_173 = torch.ops.aten.mm.default(view_850, permute_274);  view_850 = permute_274 = None
        view_851 = torch.ops.aten.view.default(mm_173, [1, arg0_1, 14336]);  mm_173 = None
        mul_10259 = torch.ops.aten.mul.Tensor(convert_element_type_398, view_851);  convert_element_type_398 = view_851 = None
        permute_275 = torch.ops.aten.permute.default(arg257_1, [1, 0]);  arg257_1 = None
        view_852 = torch.ops.aten.view.default(mul_10259, [arg0_1, 14336]);  mul_10259 = None
        mm_174 = torch.ops.aten.mm.default(view_852, permute_275);  view_852 = permute_275 = None
        view_853 = torch.ops.aten.view.default(mm_174, [1, arg0_1, 4096]);  mm_174 = None
        add_8266 = torch.ops.aten.add.Tensor(add_8213, view_853);  add_8213 = view_853 = None
        view_854 = torch.ops.aten.view.default(add_8266, [-1, 4096])
        empty_100 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_101 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_50 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 51, constant_args_idx = 50, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_100, 'X_ptr': view_854, 'W_ptr': arg258_1, 'RSTD_ptr': empty_101}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_100 = view_854 = arg258_1 = empty_101 = None
        getitem_200 = triton_kernel_wrapper_functional_proxy_50['Y_ptr'];  triton_kernel_wrapper_functional_proxy_50 = None
        permute_276 = torch.ops.aten.permute.default(arg259_1, [1, 0]);  arg259_1 = None
        view_857 = torch.ops.aten.view.default(getitem_200, [1, arg0_1, 4096])
        view_858 = torch.ops.aten.view.default(view_857, [arg0_1, 4096]);  view_857 = None
        mm_175 = torch.ops.aten.mm.default(view_858, permute_276);  view_858 = permute_276 = None
        view_859 = torch.ops.aten.view.default(mm_175, [1, arg0_1, 4096]);  mm_175 = None
        view_860 = torch.ops.aten.view.default(view_859, [1, arg0_1, -1, 128]);  view_859 = None
        permute_277 = torch.ops.aten.permute.default(view_860, [0, 2, 1, 3]);  view_860 = None
        permute_278 = torch.ops.aten.permute.default(arg260_1, [1, 0]);  arg260_1 = None
        view_862 = torch.ops.aten.view.default(getitem_200, [1, arg0_1, 4096])
        view_863 = torch.ops.aten.view.default(view_862, [arg0_1, 4096]);  view_862 = None
        mm_176 = torch.ops.aten.mm.default(view_863, permute_278);  view_863 = permute_278 = None
        view_864 = torch.ops.aten.view.default(mm_176, [1, arg0_1, 1024]);  mm_176 = None
        view_865 = torch.ops.aten.view.default(view_864, [1, arg0_1, -1, 128]);  view_864 = None
        permute_279 = torch.ops.aten.permute.default(view_865, [0, 2, 1, 3]);  view_865 = None
        permute_280 = torch.ops.aten.permute.default(arg261_1, [1, 0]);  arg261_1 = None
        view_867 = torch.ops.aten.view.default(getitem_200, [1, arg0_1, 4096]);  getitem_200 = None
        view_868 = torch.ops.aten.view.default(view_867, [arg0_1, 4096]);  view_867 = None
        mm_177 = torch.ops.aten.mm.default(view_868, permute_280);  view_868 = permute_280 = None
        view_869 = torch.ops.aten.view.default(mm_177, [1, arg0_1, 1024]);  mm_177 = None
        view_870 = torch.ops.aten.view.default(view_869, [1, arg0_1, -1, 128]);  view_869 = None
        permute_281 = torch.ops.aten.permute.default(view_870, [0, 2, 1, 3]);  view_870 = None
        unsqueeze_154 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_155 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_10361 = torch.ops.aten.mul.Tensor(permute_277, unsqueeze_154)
        slice_579 = torch.ops.aten.slice.Tensor(permute_277, 3, 0, 64)
        slice_580 = torch.ops.aten.slice.Tensor(permute_277, 3, 64, 9223372036854775807);  permute_277 = None
        neg_50 = torch.ops.aten.neg.default(slice_580);  slice_580 = None
        cat_50 = torch.ops.aten.cat.default([neg_50, slice_579], -1);  neg_50 = slice_579 = None
        mul_10378 = torch.ops.aten.mul.Tensor(cat_50, unsqueeze_155);  cat_50 = None
        add_8360 = torch.ops.aten.add.Tensor(mul_10361, mul_10378);  mul_10361 = mul_10378 = None
        mul_10386 = torch.ops.aten.mul.Tensor(permute_279, unsqueeze_154);  unsqueeze_154 = None
        slice_581 = torch.ops.aten.slice.Tensor(permute_279, 3, 0, 64)
        slice_582 = torch.ops.aten.slice.Tensor(permute_279, 3, 64, 9223372036854775807);  permute_279 = None
        neg_51 = torch.ops.aten.neg.default(slice_582);  slice_582 = None
        cat_51 = torch.ops.aten.cat.default([neg_51, slice_581], -1);  neg_51 = slice_581 = None
        mul_10403 = torch.ops.aten.mul.Tensor(cat_51, unsqueeze_155);  cat_51 = unsqueeze_155 = None
        add_8384 = torch.ops.aten.add.Tensor(mul_10386, mul_10403);  mul_10386 = mul_10403 = None
        full_default_100 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_101 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_50 = torch.ops.aten.index_put.default(full_default_100, [None, None, arg3_1], add_8384);  full_default_100 = add_8384 = None
        index_put_51 = torch.ops.aten.index_put.default(full_default_101, [None, None, arg3_1], permute_281);  full_default_101 = permute_281 = None
        unsqueeze_157 = torch.ops.aten.unsqueeze.default(index_put_50, 2)
        expand_130 = torch.ops.aten.expand.default(unsqueeze_157, [1, 8, 4, arg5_1, 128]);  unsqueeze_157 = None
        clone_77 = torch.ops.aten.clone.default(expand_130, memory_format = torch.contiguous_format);  expand_130 = None
        view_871 = torch.ops.aten.view.default(clone_77, [1, 32, arg5_1, 128]);  clone_77 = None
        unsqueeze_159 = torch.ops.aten.unsqueeze.default(index_put_51, 2)
        expand_132 = torch.ops.aten.expand.default(unsqueeze_159, [1, 8, 4, arg5_1, 128]);  unsqueeze_159 = None
        clone_78 = torch.ops.aten.clone.default(expand_132, memory_format = torch.contiguous_format);  expand_132 = None
        view_872 = torch.ops.aten.view.default(clone_78, [1, 32, arg5_1, 128]);  clone_78 = None
        clone_79 = torch.ops.aten.clone.default(add_8360, memory_format = torch.contiguous_format);  add_8360 = None
        full_default_102 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_103 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_25 = torch.ops.aten.where.self(arg6_1, full_default_103, full_default_102);  full_default_103 = full_default_102 = None
        expand_133 = torch.ops.aten.expand.default(where_25, [1, 32, arg0_1, arg5_1]);  where_25 = None
        _scaled_dot_product_efficient_attention_25 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_79, view_871, view_872, expand_133, False, scale = 0.08838834764831845);  clone_79 = view_871 = view_872 = expand_133 = None
        getitem_202 = _scaled_dot_product_efficient_attention_25[0];  _scaled_dot_product_efficient_attention_25 = None
        permute_282 = torch.ops.aten.permute.default(getitem_202, [0, 2, 1, 3]);  getitem_202 = None
        view_873 = torch.ops.aten.view.default(permute_282, [1, arg0_1, -1]);  permute_282 = None
        permute_283 = torch.ops.aten.permute.default(arg263_1, [1, 0]);  arg263_1 = None
        view_874 = torch.ops.aten.view.default(view_873, [arg0_1, 4096]);  view_873 = None
        mm_178 = torch.ops.aten.mm.default(view_874, permute_283);  view_874 = permute_283 = None
        view_875 = torch.ops.aten.view.default(mm_178, [1, arg0_1, 4096]);  mm_178 = None
        add_8542 = torch.ops.aten.add.Tensor(add_8266, view_875);  add_8266 = view_875 = None
        view_876 = torch.ops.aten.view.default(add_8542, [-1, 4096])
        empty_102 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_103 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_51 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 52, constant_args_idx = 51, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_102, 'X_ptr': view_876, 'W_ptr': arg264_1, 'RSTD_ptr': empty_103}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_102 = view_876 = arg264_1 = empty_103 = None
        getitem_206 = triton_kernel_wrapper_functional_proxy_51['Y_ptr'];  triton_kernel_wrapper_functional_proxy_51 = None
        permute_284 = torch.ops.aten.permute.default(arg265_1, [1, 0]);  arg265_1 = None
        view_879 = torch.ops.aten.view.default(getitem_206, [1, arg0_1, 4096])
        view_880 = torch.ops.aten.view.default(view_879, [arg0_1, 4096]);  view_879 = None
        mm_179 = torch.ops.aten.mm.default(view_880, permute_284);  view_880 = permute_284 = None
        view_881 = torch.ops.aten.view.default(mm_179, [1, arg0_1, 14336]);  mm_179 = None
        convert_element_type_413 = torch.ops.prims.convert_element_type.default(view_881, torch.float32);  view_881 = None
        sigmoid_25 = torch.ops.aten.sigmoid.default(convert_element_type_413)
        mul_10651 = torch.ops.aten.mul.Tensor(convert_element_type_413, sigmoid_25);  convert_element_type_413 = sigmoid_25 = None
        convert_element_type_414 = torch.ops.prims.convert_element_type.default(mul_10651, torch.float16);  mul_10651 = None
        permute_285 = torch.ops.aten.permute.default(arg266_1, [1, 0]);  arg266_1 = None
        view_883 = torch.ops.aten.view.default(getitem_206, [1, arg0_1, 4096]);  getitem_206 = None
        view_884 = torch.ops.aten.view.default(view_883, [arg0_1, 4096]);  view_883 = None
        mm_180 = torch.ops.aten.mm.default(view_884, permute_285);  view_884 = permute_285 = None
        view_885 = torch.ops.aten.view.default(mm_180, [1, arg0_1, 14336]);  mm_180 = None
        mul_10668 = torch.ops.aten.mul.Tensor(convert_element_type_414, view_885);  convert_element_type_414 = view_885 = None
        permute_286 = torch.ops.aten.permute.default(arg267_1, [1, 0]);  arg267_1 = None
        view_886 = torch.ops.aten.view.default(mul_10668, [arg0_1, 14336]);  mul_10668 = None
        mm_181 = torch.ops.aten.mm.default(view_886, permute_286);  view_886 = permute_286 = None
        view_887 = torch.ops.aten.view.default(mm_181, [1, arg0_1, 4096]);  mm_181 = None
        add_8595 = torch.ops.aten.add.Tensor(add_8542, view_887);  add_8542 = view_887 = None
        view_888 = torch.ops.aten.view.default(add_8595, [-1, 4096])
        empty_104 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_105 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_52 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 53, constant_args_idx = 52, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_104, 'X_ptr': view_888, 'W_ptr': arg268_1, 'RSTD_ptr': empty_105}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_104 = view_888 = arg268_1 = empty_105 = None
        getitem_208 = triton_kernel_wrapper_functional_proxy_52['Y_ptr'];  triton_kernel_wrapper_functional_proxy_52 = None
        permute_287 = torch.ops.aten.permute.default(arg269_1, [1, 0]);  arg269_1 = None
        view_891 = torch.ops.aten.view.default(getitem_208, [1, arg0_1, 4096])
        view_892 = torch.ops.aten.view.default(view_891, [arg0_1, 4096]);  view_891 = None
        mm_182 = torch.ops.aten.mm.default(view_892, permute_287);  view_892 = permute_287 = None
        view_893 = torch.ops.aten.view.default(mm_182, [1, arg0_1, 4096]);  mm_182 = None
        view_894 = torch.ops.aten.view.default(view_893, [1, arg0_1, -1, 128]);  view_893 = None
        permute_288 = torch.ops.aten.permute.default(view_894, [0, 2, 1, 3]);  view_894 = None
        permute_289 = torch.ops.aten.permute.default(arg270_1, [1, 0]);  arg270_1 = None
        view_896 = torch.ops.aten.view.default(getitem_208, [1, arg0_1, 4096])
        view_897 = torch.ops.aten.view.default(view_896, [arg0_1, 4096]);  view_896 = None
        mm_183 = torch.ops.aten.mm.default(view_897, permute_289);  view_897 = permute_289 = None
        view_898 = torch.ops.aten.view.default(mm_183, [1, arg0_1, 1024]);  mm_183 = None
        view_899 = torch.ops.aten.view.default(view_898, [1, arg0_1, -1, 128]);  view_898 = None
        permute_290 = torch.ops.aten.permute.default(view_899, [0, 2, 1, 3]);  view_899 = None
        permute_291 = torch.ops.aten.permute.default(arg271_1, [1, 0]);  arg271_1 = None
        view_901 = torch.ops.aten.view.default(getitem_208, [1, arg0_1, 4096]);  getitem_208 = None
        view_902 = torch.ops.aten.view.default(view_901, [arg0_1, 4096]);  view_901 = None
        mm_184 = torch.ops.aten.mm.default(view_902, permute_291);  view_902 = permute_291 = None
        view_903 = torch.ops.aten.view.default(mm_184, [1, arg0_1, 1024]);  mm_184 = None
        view_904 = torch.ops.aten.view.default(view_903, [1, arg0_1, -1, 128]);  view_903 = None
        permute_292 = torch.ops.aten.permute.default(view_904, [0, 2, 1, 3]);  view_904 = None
        unsqueeze_160 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_161 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_10770 = torch.ops.aten.mul.Tensor(permute_288, unsqueeze_160)
        slice_602 = torch.ops.aten.slice.Tensor(permute_288, 3, 0, 64)
        slice_603 = torch.ops.aten.slice.Tensor(permute_288, 3, 64, 9223372036854775807);  permute_288 = None
        neg_52 = torch.ops.aten.neg.default(slice_603);  slice_603 = None
        cat_52 = torch.ops.aten.cat.default([neg_52, slice_602], -1);  neg_52 = slice_602 = None
        mul_10787 = torch.ops.aten.mul.Tensor(cat_52, unsqueeze_161);  cat_52 = None
        add_8689 = torch.ops.aten.add.Tensor(mul_10770, mul_10787);  mul_10770 = mul_10787 = None
        mul_10795 = torch.ops.aten.mul.Tensor(permute_290, unsqueeze_160);  unsqueeze_160 = None
        slice_604 = torch.ops.aten.slice.Tensor(permute_290, 3, 0, 64)
        slice_605 = torch.ops.aten.slice.Tensor(permute_290, 3, 64, 9223372036854775807);  permute_290 = None
        neg_53 = torch.ops.aten.neg.default(slice_605);  slice_605 = None
        cat_53 = torch.ops.aten.cat.default([neg_53, slice_604], -1);  neg_53 = slice_604 = None
        mul_10812 = torch.ops.aten.mul.Tensor(cat_53, unsqueeze_161);  cat_53 = unsqueeze_161 = None
        add_8713 = torch.ops.aten.add.Tensor(mul_10795, mul_10812);  mul_10795 = mul_10812 = None
        full_default_104 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_105 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_52 = torch.ops.aten.index_put.default(full_default_104, [None, None, arg3_1], add_8713);  full_default_104 = add_8713 = None
        index_put_53 = torch.ops.aten.index_put.default(full_default_105, [None, None, arg3_1], permute_292);  full_default_105 = permute_292 = None
        unsqueeze_163 = torch.ops.aten.unsqueeze.default(index_put_52, 2)
        expand_135 = torch.ops.aten.expand.default(unsqueeze_163, [1, 8, 4, arg5_1, 128]);  unsqueeze_163 = None
        clone_80 = torch.ops.aten.clone.default(expand_135, memory_format = torch.contiguous_format);  expand_135 = None
        view_905 = torch.ops.aten.view.default(clone_80, [1, 32, arg5_1, 128]);  clone_80 = None
        unsqueeze_165 = torch.ops.aten.unsqueeze.default(index_put_53, 2)
        expand_137 = torch.ops.aten.expand.default(unsqueeze_165, [1, 8, 4, arg5_1, 128]);  unsqueeze_165 = None
        clone_81 = torch.ops.aten.clone.default(expand_137, memory_format = torch.contiguous_format);  expand_137 = None
        view_906 = torch.ops.aten.view.default(clone_81, [1, 32, arg5_1, 128]);  clone_81 = None
        clone_82 = torch.ops.aten.clone.default(add_8689, memory_format = torch.contiguous_format);  add_8689 = None
        full_default_106 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_107 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_26 = torch.ops.aten.where.self(arg6_1, full_default_107, full_default_106);  full_default_107 = full_default_106 = None
        expand_138 = torch.ops.aten.expand.default(where_26, [1, 32, arg0_1, arg5_1]);  where_26 = None
        _scaled_dot_product_efficient_attention_26 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_82, view_905, view_906, expand_138, False, scale = 0.08838834764831845);  clone_82 = view_905 = view_906 = expand_138 = None
        getitem_210 = _scaled_dot_product_efficient_attention_26[0];  _scaled_dot_product_efficient_attention_26 = None
        permute_293 = torch.ops.aten.permute.default(getitem_210, [0, 2, 1, 3]);  getitem_210 = None
        view_907 = torch.ops.aten.view.default(permute_293, [1, arg0_1, -1]);  permute_293 = None
        permute_294 = torch.ops.aten.permute.default(arg273_1, [1, 0]);  arg273_1 = None
        view_908 = torch.ops.aten.view.default(view_907, [arg0_1, 4096]);  view_907 = None
        mm_185 = torch.ops.aten.mm.default(view_908, permute_294);  view_908 = permute_294 = None
        view_909 = torch.ops.aten.view.default(mm_185, [1, arg0_1, 4096]);  mm_185 = None
        add_8871 = torch.ops.aten.add.Tensor(add_8595, view_909);  add_8595 = view_909 = None
        view_910 = torch.ops.aten.view.default(add_8871, [-1, 4096])
        empty_106 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_107 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_53 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 54, constant_args_idx = 53, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_106, 'X_ptr': view_910, 'W_ptr': arg274_1, 'RSTD_ptr': empty_107}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_106 = view_910 = arg274_1 = empty_107 = None
        getitem_214 = triton_kernel_wrapper_functional_proxy_53['Y_ptr'];  triton_kernel_wrapper_functional_proxy_53 = None
        permute_295 = torch.ops.aten.permute.default(arg275_1, [1, 0]);  arg275_1 = None
        view_913 = torch.ops.aten.view.default(getitem_214, [1, arg0_1, 4096])
        view_914 = torch.ops.aten.view.default(view_913, [arg0_1, 4096]);  view_913 = None
        mm_186 = torch.ops.aten.mm.default(view_914, permute_295);  view_914 = permute_295 = None
        view_915 = torch.ops.aten.view.default(mm_186, [1, arg0_1, 14336]);  mm_186 = None
        convert_element_type_429 = torch.ops.prims.convert_element_type.default(view_915, torch.float32);  view_915 = None
        sigmoid_26 = torch.ops.aten.sigmoid.default(convert_element_type_429)
        mul_11060 = torch.ops.aten.mul.Tensor(convert_element_type_429, sigmoid_26);  convert_element_type_429 = sigmoid_26 = None
        convert_element_type_430 = torch.ops.prims.convert_element_type.default(mul_11060, torch.float16);  mul_11060 = None
        permute_296 = torch.ops.aten.permute.default(arg276_1, [1, 0]);  arg276_1 = None
        view_917 = torch.ops.aten.view.default(getitem_214, [1, arg0_1, 4096]);  getitem_214 = None
        view_918 = torch.ops.aten.view.default(view_917, [arg0_1, 4096]);  view_917 = None
        mm_187 = torch.ops.aten.mm.default(view_918, permute_296);  view_918 = permute_296 = None
        view_919 = torch.ops.aten.view.default(mm_187, [1, arg0_1, 14336]);  mm_187 = None
        mul_11077 = torch.ops.aten.mul.Tensor(convert_element_type_430, view_919);  convert_element_type_430 = view_919 = None
        permute_297 = torch.ops.aten.permute.default(arg277_1, [1, 0]);  arg277_1 = None
        view_920 = torch.ops.aten.view.default(mul_11077, [arg0_1, 14336]);  mul_11077 = None
        mm_188 = torch.ops.aten.mm.default(view_920, permute_297);  view_920 = permute_297 = None
        view_921 = torch.ops.aten.view.default(mm_188, [1, arg0_1, 4096]);  mm_188 = None
        add_8924 = torch.ops.aten.add.Tensor(add_8871, view_921);  add_8871 = view_921 = None
        view_922 = torch.ops.aten.view.default(add_8924, [-1, 4096])
        empty_108 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_109 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_54 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 55, constant_args_idx = 54, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_108, 'X_ptr': view_922, 'W_ptr': arg278_1, 'RSTD_ptr': empty_109}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_108 = view_922 = arg278_1 = empty_109 = None
        getitem_216 = triton_kernel_wrapper_functional_proxy_54['Y_ptr'];  triton_kernel_wrapper_functional_proxy_54 = None
        permute_298 = torch.ops.aten.permute.default(arg279_1, [1, 0]);  arg279_1 = None
        view_925 = torch.ops.aten.view.default(getitem_216, [1, arg0_1, 4096])
        view_926 = torch.ops.aten.view.default(view_925, [arg0_1, 4096]);  view_925 = None
        mm_189 = torch.ops.aten.mm.default(view_926, permute_298);  view_926 = permute_298 = None
        view_927 = torch.ops.aten.view.default(mm_189, [1, arg0_1, 4096]);  mm_189 = None
        view_928 = torch.ops.aten.view.default(view_927, [1, arg0_1, -1, 128]);  view_927 = None
        permute_299 = torch.ops.aten.permute.default(view_928, [0, 2, 1, 3]);  view_928 = None
        permute_300 = torch.ops.aten.permute.default(arg280_1, [1, 0]);  arg280_1 = None
        view_930 = torch.ops.aten.view.default(getitem_216, [1, arg0_1, 4096])
        view_931 = torch.ops.aten.view.default(view_930, [arg0_1, 4096]);  view_930 = None
        mm_190 = torch.ops.aten.mm.default(view_931, permute_300);  view_931 = permute_300 = None
        view_932 = torch.ops.aten.view.default(mm_190, [1, arg0_1, 1024]);  mm_190 = None
        view_933 = torch.ops.aten.view.default(view_932, [1, arg0_1, -1, 128]);  view_932 = None
        permute_301 = torch.ops.aten.permute.default(view_933, [0, 2, 1, 3]);  view_933 = None
        permute_302 = torch.ops.aten.permute.default(arg281_1, [1, 0]);  arg281_1 = None
        view_935 = torch.ops.aten.view.default(getitem_216, [1, arg0_1, 4096]);  getitem_216 = None
        view_936 = torch.ops.aten.view.default(view_935, [arg0_1, 4096]);  view_935 = None
        mm_191 = torch.ops.aten.mm.default(view_936, permute_302);  view_936 = permute_302 = None
        view_937 = torch.ops.aten.view.default(mm_191, [1, arg0_1, 1024]);  mm_191 = None
        view_938 = torch.ops.aten.view.default(view_937, [1, arg0_1, -1, 128]);  view_937 = None
        permute_303 = torch.ops.aten.permute.default(view_938, [0, 2, 1, 3]);  view_938 = None
        unsqueeze_166 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_167 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_11179 = torch.ops.aten.mul.Tensor(permute_299, unsqueeze_166)
        slice_625 = torch.ops.aten.slice.Tensor(permute_299, 3, 0, 64)
        slice_626 = torch.ops.aten.slice.Tensor(permute_299, 3, 64, 9223372036854775807);  permute_299 = None
        neg_54 = torch.ops.aten.neg.default(slice_626);  slice_626 = None
        cat_54 = torch.ops.aten.cat.default([neg_54, slice_625], -1);  neg_54 = slice_625 = None
        mul_11196 = torch.ops.aten.mul.Tensor(cat_54, unsqueeze_167);  cat_54 = None
        add_9018 = torch.ops.aten.add.Tensor(mul_11179, mul_11196);  mul_11179 = mul_11196 = None
        mul_11204 = torch.ops.aten.mul.Tensor(permute_301, unsqueeze_166);  unsqueeze_166 = None
        slice_627 = torch.ops.aten.slice.Tensor(permute_301, 3, 0, 64)
        slice_628 = torch.ops.aten.slice.Tensor(permute_301, 3, 64, 9223372036854775807);  permute_301 = None
        neg_55 = torch.ops.aten.neg.default(slice_628);  slice_628 = None
        cat_55 = torch.ops.aten.cat.default([neg_55, slice_627], -1);  neg_55 = slice_627 = None
        mul_11221 = torch.ops.aten.mul.Tensor(cat_55, unsqueeze_167);  cat_55 = unsqueeze_167 = None
        add_9042 = torch.ops.aten.add.Tensor(mul_11204, mul_11221);  mul_11204 = mul_11221 = None
        full_default_108 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_109 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_54 = torch.ops.aten.index_put.default(full_default_108, [None, None, arg3_1], add_9042);  full_default_108 = add_9042 = None
        index_put_55 = torch.ops.aten.index_put.default(full_default_109, [None, None, arg3_1], permute_303);  full_default_109 = permute_303 = None
        unsqueeze_169 = torch.ops.aten.unsqueeze.default(index_put_54, 2)
        expand_140 = torch.ops.aten.expand.default(unsqueeze_169, [1, 8, 4, arg5_1, 128]);  unsqueeze_169 = None
        clone_83 = torch.ops.aten.clone.default(expand_140, memory_format = torch.contiguous_format);  expand_140 = None
        view_939 = torch.ops.aten.view.default(clone_83, [1, 32, arg5_1, 128]);  clone_83 = None
        unsqueeze_171 = torch.ops.aten.unsqueeze.default(index_put_55, 2)
        expand_142 = torch.ops.aten.expand.default(unsqueeze_171, [1, 8, 4, arg5_1, 128]);  unsqueeze_171 = None
        clone_84 = torch.ops.aten.clone.default(expand_142, memory_format = torch.contiguous_format);  expand_142 = None
        view_940 = torch.ops.aten.view.default(clone_84, [1, 32, arg5_1, 128]);  clone_84 = None
        clone_85 = torch.ops.aten.clone.default(add_9018, memory_format = torch.contiguous_format);  add_9018 = None
        full_default_110 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_111 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_27 = torch.ops.aten.where.self(arg6_1, full_default_111, full_default_110);  full_default_111 = full_default_110 = None
        expand_143 = torch.ops.aten.expand.default(where_27, [1, 32, arg0_1, arg5_1]);  where_27 = None
        _scaled_dot_product_efficient_attention_27 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_85, view_939, view_940, expand_143, False, scale = 0.08838834764831845);  clone_85 = view_939 = view_940 = expand_143 = None
        getitem_218 = _scaled_dot_product_efficient_attention_27[0];  _scaled_dot_product_efficient_attention_27 = None
        permute_304 = torch.ops.aten.permute.default(getitem_218, [0, 2, 1, 3]);  getitem_218 = None
        view_941 = torch.ops.aten.view.default(permute_304, [1, arg0_1, -1]);  permute_304 = None
        permute_305 = torch.ops.aten.permute.default(arg283_1, [1, 0]);  arg283_1 = None
        view_942 = torch.ops.aten.view.default(view_941, [arg0_1, 4096]);  view_941 = None
        mm_192 = torch.ops.aten.mm.default(view_942, permute_305);  view_942 = permute_305 = None
        view_943 = torch.ops.aten.view.default(mm_192, [1, arg0_1, 4096]);  mm_192 = None
        add_9200 = torch.ops.aten.add.Tensor(add_8924, view_943);  add_8924 = view_943 = None
        view_944 = torch.ops.aten.view.default(add_9200, [-1, 4096])
        empty_110 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_111 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_55 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 56, constant_args_idx = 55, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_110, 'X_ptr': view_944, 'W_ptr': arg284_1, 'RSTD_ptr': empty_111}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_110 = view_944 = arg284_1 = empty_111 = None
        getitem_222 = triton_kernel_wrapper_functional_proxy_55['Y_ptr'];  triton_kernel_wrapper_functional_proxy_55 = None
        permute_306 = torch.ops.aten.permute.default(arg285_1, [1, 0]);  arg285_1 = None
        view_947 = torch.ops.aten.view.default(getitem_222, [1, arg0_1, 4096])
        view_948 = torch.ops.aten.view.default(view_947, [arg0_1, 4096]);  view_947 = None
        mm_193 = torch.ops.aten.mm.default(view_948, permute_306);  view_948 = permute_306 = None
        view_949 = torch.ops.aten.view.default(mm_193, [1, arg0_1, 14336]);  mm_193 = None
        convert_element_type_445 = torch.ops.prims.convert_element_type.default(view_949, torch.float32);  view_949 = None
        sigmoid_27 = torch.ops.aten.sigmoid.default(convert_element_type_445)
        mul_11469 = torch.ops.aten.mul.Tensor(convert_element_type_445, sigmoid_27);  convert_element_type_445 = sigmoid_27 = None
        convert_element_type_446 = torch.ops.prims.convert_element_type.default(mul_11469, torch.float16);  mul_11469 = None
        permute_307 = torch.ops.aten.permute.default(arg286_1, [1, 0]);  arg286_1 = None
        view_951 = torch.ops.aten.view.default(getitem_222, [1, arg0_1, 4096]);  getitem_222 = None
        view_952 = torch.ops.aten.view.default(view_951, [arg0_1, 4096]);  view_951 = None
        mm_194 = torch.ops.aten.mm.default(view_952, permute_307);  view_952 = permute_307 = None
        view_953 = torch.ops.aten.view.default(mm_194, [1, arg0_1, 14336]);  mm_194 = None
        mul_11486 = torch.ops.aten.mul.Tensor(convert_element_type_446, view_953);  convert_element_type_446 = view_953 = None
        permute_308 = torch.ops.aten.permute.default(arg287_1, [1, 0]);  arg287_1 = None
        view_954 = torch.ops.aten.view.default(mul_11486, [arg0_1, 14336]);  mul_11486 = None
        mm_195 = torch.ops.aten.mm.default(view_954, permute_308);  view_954 = permute_308 = None
        view_955 = torch.ops.aten.view.default(mm_195, [1, arg0_1, 4096]);  mm_195 = None
        add_9253 = torch.ops.aten.add.Tensor(add_9200, view_955);  add_9200 = view_955 = None
        view_956 = torch.ops.aten.view.default(add_9253, [-1, 4096])
        empty_112 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_113 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_56 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 57, constant_args_idx = 56, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_112, 'X_ptr': view_956, 'W_ptr': arg288_1, 'RSTD_ptr': empty_113}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_112 = view_956 = arg288_1 = empty_113 = None
        getitem_224 = triton_kernel_wrapper_functional_proxy_56['Y_ptr'];  triton_kernel_wrapper_functional_proxy_56 = None
        permute_309 = torch.ops.aten.permute.default(arg289_1, [1, 0]);  arg289_1 = None
        view_959 = torch.ops.aten.view.default(getitem_224, [1, arg0_1, 4096])
        view_960 = torch.ops.aten.view.default(view_959, [arg0_1, 4096]);  view_959 = None
        mm_196 = torch.ops.aten.mm.default(view_960, permute_309);  view_960 = permute_309 = None
        view_961 = torch.ops.aten.view.default(mm_196, [1, arg0_1, 4096]);  mm_196 = None
        view_962 = torch.ops.aten.view.default(view_961, [1, arg0_1, -1, 128]);  view_961 = None
        permute_310 = torch.ops.aten.permute.default(view_962, [0, 2, 1, 3]);  view_962 = None
        permute_311 = torch.ops.aten.permute.default(arg290_1, [1, 0]);  arg290_1 = None
        view_964 = torch.ops.aten.view.default(getitem_224, [1, arg0_1, 4096])
        view_965 = torch.ops.aten.view.default(view_964, [arg0_1, 4096]);  view_964 = None
        mm_197 = torch.ops.aten.mm.default(view_965, permute_311);  view_965 = permute_311 = None
        view_966 = torch.ops.aten.view.default(mm_197, [1, arg0_1, 1024]);  mm_197 = None
        view_967 = torch.ops.aten.view.default(view_966, [1, arg0_1, -1, 128]);  view_966 = None
        permute_312 = torch.ops.aten.permute.default(view_967, [0, 2, 1, 3]);  view_967 = None
        permute_313 = torch.ops.aten.permute.default(arg291_1, [1, 0]);  arg291_1 = None
        view_969 = torch.ops.aten.view.default(getitem_224, [1, arg0_1, 4096]);  getitem_224 = None
        view_970 = torch.ops.aten.view.default(view_969, [arg0_1, 4096]);  view_969 = None
        mm_198 = torch.ops.aten.mm.default(view_970, permute_313);  view_970 = permute_313 = None
        view_971 = torch.ops.aten.view.default(mm_198, [1, arg0_1, 1024]);  mm_198 = None
        view_972 = torch.ops.aten.view.default(view_971, [1, arg0_1, -1, 128]);  view_971 = None
        permute_314 = torch.ops.aten.permute.default(view_972, [0, 2, 1, 3]);  view_972 = None
        unsqueeze_172 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_173 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_11588 = torch.ops.aten.mul.Tensor(permute_310, unsqueeze_172)
        slice_648 = torch.ops.aten.slice.Tensor(permute_310, 3, 0, 64)
        slice_649 = torch.ops.aten.slice.Tensor(permute_310, 3, 64, 9223372036854775807);  permute_310 = None
        neg_56 = torch.ops.aten.neg.default(slice_649);  slice_649 = None
        cat_56 = torch.ops.aten.cat.default([neg_56, slice_648], -1);  neg_56 = slice_648 = None
        mul_11605 = torch.ops.aten.mul.Tensor(cat_56, unsqueeze_173);  cat_56 = None
        add_9347 = torch.ops.aten.add.Tensor(mul_11588, mul_11605);  mul_11588 = mul_11605 = None
        mul_11613 = torch.ops.aten.mul.Tensor(permute_312, unsqueeze_172);  unsqueeze_172 = None
        slice_650 = torch.ops.aten.slice.Tensor(permute_312, 3, 0, 64)
        slice_651 = torch.ops.aten.slice.Tensor(permute_312, 3, 64, 9223372036854775807);  permute_312 = None
        neg_57 = torch.ops.aten.neg.default(slice_651);  slice_651 = None
        cat_57 = torch.ops.aten.cat.default([neg_57, slice_650], -1);  neg_57 = slice_650 = None
        mul_11630 = torch.ops.aten.mul.Tensor(cat_57, unsqueeze_173);  cat_57 = unsqueeze_173 = None
        add_9371 = torch.ops.aten.add.Tensor(mul_11613, mul_11630);  mul_11613 = mul_11630 = None
        full_default_112 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_113 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_56 = torch.ops.aten.index_put.default(full_default_112, [None, None, arg3_1], add_9371);  full_default_112 = add_9371 = None
        index_put_57 = torch.ops.aten.index_put.default(full_default_113, [None, None, arg3_1], permute_314);  full_default_113 = permute_314 = None
        unsqueeze_175 = torch.ops.aten.unsqueeze.default(index_put_56, 2)
        expand_145 = torch.ops.aten.expand.default(unsqueeze_175, [1, 8, 4, arg5_1, 128]);  unsqueeze_175 = None
        clone_86 = torch.ops.aten.clone.default(expand_145, memory_format = torch.contiguous_format);  expand_145 = None
        view_973 = torch.ops.aten.view.default(clone_86, [1, 32, arg5_1, 128]);  clone_86 = None
        unsqueeze_177 = torch.ops.aten.unsqueeze.default(index_put_57, 2)
        expand_147 = torch.ops.aten.expand.default(unsqueeze_177, [1, 8, 4, arg5_1, 128]);  unsqueeze_177 = None
        clone_87 = torch.ops.aten.clone.default(expand_147, memory_format = torch.contiguous_format);  expand_147 = None
        view_974 = torch.ops.aten.view.default(clone_87, [1, 32, arg5_1, 128]);  clone_87 = None
        clone_88 = torch.ops.aten.clone.default(add_9347, memory_format = torch.contiguous_format);  add_9347 = None
        full_default_114 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_115 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_28 = torch.ops.aten.where.self(arg6_1, full_default_115, full_default_114);  full_default_115 = full_default_114 = None
        expand_148 = torch.ops.aten.expand.default(where_28, [1, 32, arg0_1, arg5_1]);  where_28 = None
        _scaled_dot_product_efficient_attention_28 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_88, view_973, view_974, expand_148, False, scale = 0.08838834764831845);  clone_88 = view_973 = view_974 = expand_148 = None
        getitem_226 = _scaled_dot_product_efficient_attention_28[0];  _scaled_dot_product_efficient_attention_28 = None
        permute_315 = torch.ops.aten.permute.default(getitem_226, [0, 2, 1, 3]);  getitem_226 = None
        view_975 = torch.ops.aten.view.default(permute_315, [1, arg0_1, -1]);  permute_315 = None
        permute_316 = torch.ops.aten.permute.default(arg293_1, [1, 0]);  arg293_1 = None
        view_976 = torch.ops.aten.view.default(view_975, [arg0_1, 4096]);  view_975 = None
        mm_199 = torch.ops.aten.mm.default(view_976, permute_316);  view_976 = permute_316 = None
        view_977 = torch.ops.aten.view.default(mm_199, [1, arg0_1, 4096]);  mm_199 = None
        add_9529 = torch.ops.aten.add.Tensor(add_9253, view_977);  add_9253 = view_977 = None
        view_978 = torch.ops.aten.view.default(add_9529, [-1, 4096])
        empty_114 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_115 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_57 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 58, constant_args_idx = 57, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_114, 'X_ptr': view_978, 'W_ptr': arg294_1, 'RSTD_ptr': empty_115}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_114 = view_978 = arg294_1 = empty_115 = None
        getitem_230 = triton_kernel_wrapper_functional_proxy_57['Y_ptr'];  triton_kernel_wrapper_functional_proxy_57 = None
        permute_317 = torch.ops.aten.permute.default(arg295_1, [1, 0]);  arg295_1 = None
        view_981 = torch.ops.aten.view.default(getitem_230, [1, arg0_1, 4096])
        view_982 = torch.ops.aten.view.default(view_981, [arg0_1, 4096]);  view_981 = None
        mm_200 = torch.ops.aten.mm.default(view_982, permute_317);  view_982 = permute_317 = None
        view_983 = torch.ops.aten.view.default(mm_200, [1, arg0_1, 14336]);  mm_200 = None
        convert_element_type_461 = torch.ops.prims.convert_element_type.default(view_983, torch.float32);  view_983 = None
        sigmoid_28 = torch.ops.aten.sigmoid.default(convert_element_type_461)
        mul_11878 = torch.ops.aten.mul.Tensor(convert_element_type_461, sigmoid_28);  convert_element_type_461 = sigmoid_28 = None
        convert_element_type_462 = torch.ops.prims.convert_element_type.default(mul_11878, torch.float16);  mul_11878 = None
        permute_318 = torch.ops.aten.permute.default(arg296_1, [1, 0]);  arg296_1 = None
        view_985 = torch.ops.aten.view.default(getitem_230, [1, arg0_1, 4096]);  getitem_230 = None
        view_986 = torch.ops.aten.view.default(view_985, [arg0_1, 4096]);  view_985 = None
        mm_201 = torch.ops.aten.mm.default(view_986, permute_318);  view_986 = permute_318 = None
        view_987 = torch.ops.aten.view.default(mm_201, [1, arg0_1, 14336]);  mm_201 = None
        mul_11895 = torch.ops.aten.mul.Tensor(convert_element_type_462, view_987);  convert_element_type_462 = view_987 = None
        permute_319 = torch.ops.aten.permute.default(arg297_1, [1, 0]);  arg297_1 = None
        view_988 = torch.ops.aten.view.default(mul_11895, [arg0_1, 14336]);  mul_11895 = None
        mm_202 = torch.ops.aten.mm.default(view_988, permute_319);  view_988 = permute_319 = None
        view_989 = torch.ops.aten.view.default(mm_202, [1, arg0_1, 4096]);  mm_202 = None
        add_9582 = torch.ops.aten.add.Tensor(add_9529, view_989);  add_9529 = view_989 = None
        view_990 = torch.ops.aten.view.default(add_9582, [-1, 4096])
        empty_116 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_117 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_58 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 59, constant_args_idx = 58, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_116, 'X_ptr': view_990, 'W_ptr': arg298_1, 'RSTD_ptr': empty_117}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_116 = view_990 = arg298_1 = empty_117 = None
        getitem_232 = triton_kernel_wrapper_functional_proxy_58['Y_ptr'];  triton_kernel_wrapper_functional_proxy_58 = None
        permute_320 = torch.ops.aten.permute.default(arg299_1, [1, 0]);  arg299_1 = None
        view_993 = torch.ops.aten.view.default(getitem_232, [1, arg0_1, 4096])
        view_994 = torch.ops.aten.view.default(view_993, [arg0_1, 4096]);  view_993 = None
        mm_203 = torch.ops.aten.mm.default(view_994, permute_320);  view_994 = permute_320 = None
        view_995 = torch.ops.aten.view.default(mm_203, [1, arg0_1, 4096]);  mm_203 = None
        view_996 = torch.ops.aten.view.default(view_995, [1, arg0_1, -1, 128]);  view_995 = None
        permute_321 = torch.ops.aten.permute.default(view_996, [0, 2, 1, 3]);  view_996 = None
        permute_322 = torch.ops.aten.permute.default(arg300_1, [1, 0]);  arg300_1 = None
        view_998 = torch.ops.aten.view.default(getitem_232, [1, arg0_1, 4096])
        view_999 = torch.ops.aten.view.default(view_998, [arg0_1, 4096]);  view_998 = None
        mm_204 = torch.ops.aten.mm.default(view_999, permute_322);  view_999 = permute_322 = None
        view_1000 = torch.ops.aten.view.default(mm_204, [1, arg0_1, 1024]);  mm_204 = None
        view_1001 = torch.ops.aten.view.default(view_1000, [1, arg0_1, -1, 128]);  view_1000 = None
        permute_323 = torch.ops.aten.permute.default(view_1001, [0, 2, 1, 3]);  view_1001 = None
        permute_324 = torch.ops.aten.permute.default(arg301_1, [1, 0]);  arg301_1 = None
        view_1003 = torch.ops.aten.view.default(getitem_232, [1, arg0_1, 4096]);  getitem_232 = None
        view_1004 = torch.ops.aten.view.default(view_1003, [arg0_1, 4096]);  view_1003 = None
        mm_205 = torch.ops.aten.mm.default(view_1004, permute_324);  view_1004 = permute_324 = None
        view_1005 = torch.ops.aten.view.default(mm_205, [1, arg0_1, 1024]);  mm_205 = None
        view_1006 = torch.ops.aten.view.default(view_1005, [1, arg0_1, -1, 128]);  view_1005 = None
        permute_325 = torch.ops.aten.permute.default(view_1006, [0, 2, 1, 3]);  view_1006 = None
        unsqueeze_178 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_179 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_11997 = torch.ops.aten.mul.Tensor(permute_321, unsqueeze_178)
        slice_671 = torch.ops.aten.slice.Tensor(permute_321, 3, 0, 64)
        slice_672 = torch.ops.aten.slice.Tensor(permute_321, 3, 64, 9223372036854775807);  permute_321 = None
        neg_58 = torch.ops.aten.neg.default(slice_672);  slice_672 = None
        cat_58 = torch.ops.aten.cat.default([neg_58, slice_671], -1);  neg_58 = slice_671 = None
        mul_12014 = torch.ops.aten.mul.Tensor(cat_58, unsqueeze_179);  cat_58 = None
        add_9676 = torch.ops.aten.add.Tensor(mul_11997, mul_12014);  mul_11997 = mul_12014 = None
        mul_12022 = torch.ops.aten.mul.Tensor(permute_323, unsqueeze_178);  unsqueeze_178 = None
        slice_673 = torch.ops.aten.slice.Tensor(permute_323, 3, 0, 64)
        slice_674 = torch.ops.aten.slice.Tensor(permute_323, 3, 64, 9223372036854775807);  permute_323 = None
        neg_59 = torch.ops.aten.neg.default(slice_674);  slice_674 = None
        cat_59 = torch.ops.aten.cat.default([neg_59, slice_673], -1);  neg_59 = slice_673 = None
        mul_12039 = torch.ops.aten.mul.Tensor(cat_59, unsqueeze_179);  cat_59 = unsqueeze_179 = None
        add_9700 = torch.ops.aten.add.Tensor(mul_12022, mul_12039);  mul_12022 = mul_12039 = None
        full_default_116 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_117 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_58 = torch.ops.aten.index_put.default(full_default_116, [None, None, arg3_1], add_9700);  full_default_116 = add_9700 = None
        index_put_59 = torch.ops.aten.index_put.default(full_default_117, [None, None, arg3_1], permute_325);  full_default_117 = permute_325 = None
        unsqueeze_181 = torch.ops.aten.unsqueeze.default(index_put_58, 2)
        expand_150 = torch.ops.aten.expand.default(unsqueeze_181, [1, 8, 4, arg5_1, 128]);  unsqueeze_181 = None
        clone_89 = torch.ops.aten.clone.default(expand_150, memory_format = torch.contiguous_format);  expand_150 = None
        view_1007 = torch.ops.aten.view.default(clone_89, [1, 32, arg5_1, 128]);  clone_89 = None
        unsqueeze_183 = torch.ops.aten.unsqueeze.default(index_put_59, 2)
        expand_152 = torch.ops.aten.expand.default(unsqueeze_183, [1, 8, 4, arg5_1, 128]);  unsqueeze_183 = None
        clone_90 = torch.ops.aten.clone.default(expand_152, memory_format = torch.contiguous_format);  expand_152 = None
        view_1008 = torch.ops.aten.view.default(clone_90, [1, 32, arg5_1, 128]);  clone_90 = None
        clone_91 = torch.ops.aten.clone.default(add_9676, memory_format = torch.contiguous_format);  add_9676 = None
        full_default_118 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_119 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_29 = torch.ops.aten.where.self(arg6_1, full_default_119, full_default_118);  full_default_119 = full_default_118 = None
        expand_153 = torch.ops.aten.expand.default(where_29, [1, 32, arg0_1, arg5_1]);  where_29 = None
        _scaled_dot_product_efficient_attention_29 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_91, view_1007, view_1008, expand_153, False, scale = 0.08838834764831845);  clone_91 = view_1007 = view_1008 = expand_153 = None
        getitem_234 = _scaled_dot_product_efficient_attention_29[0];  _scaled_dot_product_efficient_attention_29 = None
        permute_326 = torch.ops.aten.permute.default(getitem_234, [0, 2, 1, 3]);  getitem_234 = None
        view_1009 = torch.ops.aten.view.default(permute_326, [1, arg0_1, -1]);  permute_326 = None
        permute_327 = torch.ops.aten.permute.default(arg303_1, [1, 0]);  arg303_1 = None
        view_1010 = torch.ops.aten.view.default(view_1009, [arg0_1, 4096]);  view_1009 = None
        mm_206 = torch.ops.aten.mm.default(view_1010, permute_327);  view_1010 = permute_327 = None
        view_1011 = torch.ops.aten.view.default(mm_206, [1, arg0_1, 4096]);  mm_206 = None
        add_9858 = torch.ops.aten.add.Tensor(add_9582, view_1011);  add_9582 = view_1011 = None
        view_1012 = torch.ops.aten.view.default(add_9858, [-1, 4096])
        empty_118 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_119 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_59 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 60, constant_args_idx = 59, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_118, 'X_ptr': view_1012, 'W_ptr': arg304_1, 'RSTD_ptr': empty_119}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_118 = view_1012 = arg304_1 = empty_119 = None
        getitem_238 = triton_kernel_wrapper_functional_proxy_59['Y_ptr'];  triton_kernel_wrapper_functional_proxy_59 = None
        permute_328 = torch.ops.aten.permute.default(arg305_1, [1, 0]);  arg305_1 = None
        view_1015 = torch.ops.aten.view.default(getitem_238, [1, arg0_1, 4096])
        view_1016 = torch.ops.aten.view.default(view_1015, [arg0_1, 4096]);  view_1015 = None
        mm_207 = torch.ops.aten.mm.default(view_1016, permute_328);  view_1016 = permute_328 = None
        view_1017 = torch.ops.aten.view.default(mm_207, [1, arg0_1, 14336]);  mm_207 = None
        convert_element_type_477 = torch.ops.prims.convert_element_type.default(view_1017, torch.float32);  view_1017 = None
        sigmoid_29 = torch.ops.aten.sigmoid.default(convert_element_type_477)
        mul_12287 = torch.ops.aten.mul.Tensor(convert_element_type_477, sigmoid_29);  convert_element_type_477 = sigmoid_29 = None
        convert_element_type_478 = torch.ops.prims.convert_element_type.default(mul_12287, torch.float16);  mul_12287 = None
        permute_329 = torch.ops.aten.permute.default(arg306_1, [1, 0]);  arg306_1 = None
        view_1019 = torch.ops.aten.view.default(getitem_238, [1, arg0_1, 4096]);  getitem_238 = None
        view_1020 = torch.ops.aten.view.default(view_1019, [arg0_1, 4096]);  view_1019 = None
        mm_208 = torch.ops.aten.mm.default(view_1020, permute_329);  view_1020 = permute_329 = None
        view_1021 = torch.ops.aten.view.default(mm_208, [1, arg0_1, 14336]);  mm_208 = None
        mul_12304 = torch.ops.aten.mul.Tensor(convert_element_type_478, view_1021);  convert_element_type_478 = view_1021 = None
        permute_330 = torch.ops.aten.permute.default(arg307_1, [1, 0]);  arg307_1 = None
        view_1022 = torch.ops.aten.view.default(mul_12304, [arg0_1, 14336]);  mul_12304 = None
        mm_209 = torch.ops.aten.mm.default(view_1022, permute_330);  view_1022 = permute_330 = None
        view_1023 = torch.ops.aten.view.default(mm_209, [1, arg0_1, 4096]);  mm_209 = None
        add_9911 = torch.ops.aten.add.Tensor(add_9858, view_1023);  add_9858 = view_1023 = None
        view_1024 = torch.ops.aten.view.default(add_9911, [-1, 4096])
        empty_120 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_121 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_60 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 61, constant_args_idx = 60, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_120, 'X_ptr': view_1024, 'W_ptr': arg308_1, 'RSTD_ptr': empty_121}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_120 = view_1024 = arg308_1 = empty_121 = None
        getitem_240 = triton_kernel_wrapper_functional_proxy_60['Y_ptr'];  triton_kernel_wrapper_functional_proxy_60 = None
        permute_331 = torch.ops.aten.permute.default(arg309_1, [1, 0]);  arg309_1 = None
        view_1027 = torch.ops.aten.view.default(getitem_240, [1, arg0_1, 4096])
        view_1028 = torch.ops.aten.view.default(view_1027, [arg0_1, 4096]);  view_1027 = None
        mm_210 = torch.ops.aten.mm.default(view_1028, permute_331);  view_1028 = permute_331 = None
        view_1029 = torch.ops.aten.view.default(mm_210, [1, arg0_1, 4096]);  mm_210 = None
        view_1030 = torch.ops.aten.view.default(view_1029, [1, arg0_1, -1, 128]);  view_1029 = None
        permute_332 = torch.ops.aten.permute.default(view_1030, [0, 2, 1, 3]);  view_1030 = None
        permute_333 = torch.ops.aten.permute.default(arg310_1, [1, 0]);  arg310_1 = None
        view_1032 = torch.ops.aten.view.default(getitem_240, [1, arg0_1, 4096])
        view_1033 = torch.ops.aten.view.default(view_1032, [arg0_1, 4096]);  view_1032 = None
        mm_211 = torch.ops.aten.mm.default(view_1033, permute_333);  view_1033 = permute_333 = None
        view_1034 = torch.ops.aten.view.default(mm_211, [1, arg0_1, 1024]);  mm_211 = None
        view_1035 = torch.ops.aten.view.default(view_1034, [1, arg0_1, -1, 128]);  view_1034 = None
        permute_334 = torch.ops.aten.permute.default(view_1035, [0, 2, 1, 3]);  view_1035 = None
        permute_335 = torch.ops.aten.permute.default(arg311_1, [1, 0]);  arg311_1 = None
        view_1037 = torch.ops.aten.view.default(getitem_240, [1, arg0_1, 4096]);  getitem_240 = None
        view_1038 = torch.ops.aten.view.default(view_1037, [arg0_1, 4096]);  view_1037 = None
        mm_212 = torch.ops.aten.mm.default(view_1038, permute_335);  view_1038 = permute_335 = None
        view_1039 = torch.ops.aten.view.default(mm_212, [1, arg0_1, 1024]);  mm_212 = None
        view_1040 = torch.ops.aten.view.default(view_1039, [1, arg0_1, -1, 128]);  view_1039 = None
        permute_336 = torch.ops.aten.permute.default(view_1040, [0, 2, 1, 3]);  view_1040 = None
        unsqueeze_184 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1)
        unsqueeze_185 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1)
        mul_12406 = torch.ops.aten.mul.Tensor(permute_332, unsqueeze_184)
        slice_694 = torch.ops.aten.slice.Tensor(permute_332, 3, 0, 64)
        slice_695 = torch.ops.aten.slice.Tensor(permute_332, 3, 64, 9223372036854775807);  permute_332 = None
        neg_60 = torch.ops.aten.neg.default(slice_695);  slice_695 = None
        cat_60 = torch.ops.aten.cat.default([neg_60, slice_694], -1);  neg_60 = slice_694 = None
        mul_12423 = torch.ops.aten.mul.Tensor(cat_60, unsqueeze_185);  cat_60 = None
        add_10005 = torch.ops.aten.add.Tensor(mul_12406, mul_12423);  mul_12406 = mul_12423 = None
        mul_12431 = torch.ops.aten.mul.Tensor(permute_334, unsqueeze_184);  unsqueeze_184 = None
        slice_696 = torch.ops.aten.slice.Tensor(permute_334, 3, 0, 64)
        slice_697 = torch.ops.aten.slice.Tensor(permute_334, 3, 64, 9223372036854775807);  permute_334 = None
        neg_61 = torch.ops.aten.neg.default(slice_697);  slice_697 = None
        cat_61 = torch.ops.aten.cat.default([neg_61, slice_696], -1);  neg_61 = slice_696 = None
        mul_12448 = torch.ops.aten.mul.Tensor(cat_61, unsqueeze_185);  cat_61 = unsqueeze_185 = None
        add_10029 = torch.ops.aten.add.Tensor(mul_12431, mul_12448);  mul_12431 = mul_12448 = None
        full_default_120 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_121 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        index_put_60 = torch.ops.aten.index_put.default(full_default_120, [None, None, arg3_1], add_10029);  full_default_120 = add_10029 = None
        index_put_61 = torch.ops.aten.index_put.default(full_default_121, [None, None, arg3_1], permute_336);  full_default_121 = permute_336 = None
        unsqueeze_187 = torch.ops.aten.unsqueeze.default(index_put_60, 2)
        expand_155 = torch.ops.aten.expand.default(unsqueeze_187, [1, 8, 4, arg5_1, 128]);  unsqueeze_187 = None
        clone_92 = torch.ops.aten.clone.default(expand_155, memory_format = torch.contiguous_format);  expand_155 = None
        view_1041 = torch.ops.aten.view.default(clone_92, [1, 32, arg5_1, 128]);  clone_92 = None
        unsqueeze_189 = torch.ops.aten.unsqueeze.default(index_put_61, 2)
        expand_157 = torch.ops.aten.expand.default(unsqueeze_189, [1, 8, 4, arg5_1, 128]);  unsqueeze_189 = None
        clone_93 = torch.ops.aten.clone.default(expand_157, memory_format = torch.contiguous_format);  expand_157 = None
        view_1042 = torch.ops.aten.view.default(clone_93, [1, 32, arg5_1, 128]);  clone_93 = None
        clone_94 = torch.ops.aten.clone.default(add_10005, memory_format = torch.contiguous_format);  add_10005 = None
        full_default_122 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_123 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_30 = torch.ops.aten.where.self(arg6_1, full_default_123, full_default_122);  full_default_123 = full_default_122 = None
        expand_158 = torch.ops.aten.expand.default(where_30, [1, 32, arg0_1, arg5_1]);  where_30 = None
        _scaled_dot_product_efficient_attention_30 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_94, view_1041, view_1042, expand_158, False, scale = 0.08838834764831845);  clone_94 = view_1041 = view_1042 = expand_158 = None
        getitem_242 = _scaled_dot_product_efficient_attention_30[0];  _scaled_dot_product_efficient_attention_30 = None
        permute_337 = torch.ops.aten.permute.default(getitem_242, [0, 2, 1, 3]);  getitem_242 = None
        view_1043 = torch.ops.aten.view.default(permute_337, [1, arg0_1, -1]);  permute_337 = None
        permute_338 = torch.ops.aten.permute.default(arg313_1, [1, 0]);  arg313_1 = None
        view_1044 = torch.ops.aten.view.default(view_1043, [arg0_1, 4096]);  view_1043 = None
        mm_213 = torch.ops.aten.mm.default(view_1044, permute_338);  view_1044 = permute_338 = None
        view_1045 = torch.ops.aten.view.default(mm_213, [1, arg0_1, 4096]);  mm_213 = None
        add_10187 = torch.ops.aten.add.Tensor(add_9911, view_1045);  add_9911 = view_1045 = None
        view_1046 = torch.ops.aten.view.default(add_10187, [-1, 4096])
        empty_122 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_123 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_61 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 62, constant_args_idx = 61, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_122, 'X_ptr': view_1046, 'W_ptr': arg314_1, 'RSTD_ptr': empty_123}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_122 = view_1046 = arg314_1 = empty_123 = None
        getitem_246 = triton_kernel_wrapper_functional_proxy_61['Y_ptr'];  triton_kernel_wrapper_functional_proxy_61 = None
        permute_339 = torch.ops.aten.permute.default(arg315_1, [1, 0]);  arg315_1 = None
        view_1049 = torch.ops.aten.view.default(getitem_246, [1, arg0_1, 4096])
        view_1050 = torch.ops.aten.view.default(view_1049, [arg0_1, 4096]);  view_1049 = None
        mm_214 = torch.ops.aten.mm.default(view_1050, permute_339);  view_1050 = permute_339 = None
        view_1051 = torch.ops.aten.view.default(mm_214, [1, arg0_1, 14336]);  mm_214 = None
        convert_element_type_493 = torch.ops.prims.convert_element_type.default(view_1051, torch.float32);  view_1051 = None
        sigmoid_30 = torch.ops.aten.sigmoid.default(convert_element_type_493)
        mul_12696 = torch.ops.aten.mul.Tensor(convert_element_type_493, sigmoid_30);  convert_element_type_493 = sigmoid_30 = None
        convert_element_type_494 = torch.ops.prims.convert_element_type.default(mul_12696, torch.float16);  mul_12696 = None
        permute_340 = torch.ops.aten.permute.default(arg316_1, [1, 0]);  arg316_1 = None
        view_1053 = torch.ops.aten.view.default(getitem_246, [1, arg0_1, 4096]);  getitem_246 = None
        view_1054 = torch.ops.aten.view.default(view_1053, [arg0_1, 4096]);  view_1053 = None
        mm_215 = torch.ops.aten.mm.default(view_1054, permute_340);  view_1054 = permute_340 = None
        view_1055 = torch.ops.aten.view.default(mm_215, [1, arg0_1, 14336]);  mm_215 = None
        mul_12713 = torch.ops.aten.mul.Tensor(convert_element_type_494, view_1055);  convert_element_type_494 = view_1055 = None
        permute_341 = torch.ops.aten.permute.default(arg317_1, [1, 0]);  arg317_1 = None
        view_1056 = torch.ops.aten.view.default(mul_12713, [arg0_1, 14336]);  mul_12713 = None
        mm_216 = torch.ops.aten.mm.default(view_1056, permute_341);  view_1056 = permute_341 = None
        view_1057 = torch.ops.aten.view.default(mm_216, [1, arg0_1, 4096]);  mm_216 = None
        add_10240 = torch.ops.aten.add.Tensor(add_10187, view_1057);  add_10187 = view_1057 = None
        view_1058 = torch.ops.aten.view.default(add_10240, [-1, 4096])
        empty_124 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_125 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_62 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 63, constant_args_idx = 62, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_124, 'X_ptr': view_1058, 'W_ptr': arg318_1, 'RSTD_ptr': empty_125}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_124 = view_1058 = arg318_1 = empty_125 = None
        getitem_248 = triton_kernel_wrapper_functional_proxy_62['Y_ptr'];  triton_kernel_wrapper_functional_proxy_62 = None
        permute_342 = torch.ops.aten.permute.default(arg319_1, [1, 0]);  arg319_1 = None
        view_1061 = torch.ops.aten.view.default(getitem_248, [1, arg0_1, 4096])
        view_1062 = torch.ops.aten.view.default(view_1061, [arg0_1, 4096]);  view_1061 = None
        mm_217 = torch.ops.aten.mm.default(view_1062, permute_342);  view_1062 = permute_342 = None
        view_1063 = torch.ops.aten.view.default(mm_217, [1, arg0_1, 4096]);  mm_217 = None
        view_1064 = torch.ops.aten.view.default(view_1063, [1, arg0_1, -1, 128]);  view_1063 = None
        permute_343 = torch.ops.aten.permute.default(view_1064, [0, 2, 1, 3]);  view_1064 = None
        permute_344 = torch.ops.aten.permute.default(arg320_1, [1, 0]);  arg320_1 = None
        view_1066 = torch.ops.aten.view.default(getitem_248, [1, arg0_1, 4096])
        view_1067 = torch.ops.aten.view.default(view_1066, [arg0_1, 4096]);  view_1066 = None
        mm_218 = torch.ops.aten.mm.default(view_1067, permute_344);  view_1067 = permute_344 = None
        view_1068 = torch.ops.aten.view.default(mm_218, [1, arg0_1, 1024]);  mm_218 = None
        view_1069 = torch.ops.aten.view.default(view_1068, [1, arg0_1, -1, 128]);  view_1068 = None
        permute_345 = torch.ops.aten.permute.default(view_1069, [0, 2, 1, 3]);  view_1069 = None
        permute_346 = torch.ops.aten.permute.default(arg321_1, [1, 0]);  arg321_1 = None
        view_1071 = torch.ops.aten.view.default(getitem_248, [1, arg0_1, 4096]);  getitem_248 = None
        view_1072 = torch.ops.aten.view.default(view_1071, [arg0_1, 4096]);  view_1071 = None
        mm_219 = torch.ops.aten.mm.default(view_1072, permute_346);  view_1072 = permute_346 = None
        view_1073 = torch.ops.aten.view.default(mm_219, [1, arg0_1, 1024]);  mm_219 = None
        view_1074 = torch.ops.aten.view.default(view_1073, [1, arg0_1, -1, 128]);  view_1073 = None
        permute_347 = torch.ops.aten.permute.default(view_1074, [0, 2, 1, 3]);  view_1074 = None
        unsqueeze_190 = torch.ops.aten.unsqueeze.default(convert_element_type_1, 1);  convert_element_type_1 = None
        unsqueeze_191 = torch.ops.aten.unsqueeze.default(convert_element_type_2, 1);  convert_element_type_2 = None
        mul_12815 = torch.ops.aten.mul.Tensor(permute_343, unsqueeze_190)
        slice_717 = torch.ops.aten.slice.Tensor(permute_343, 3, 0, 64)
        slice_718 = torch.ops.aten.slice.Tensor(permute_343, 3, 64, 9223372036854775807);  permute_343 = None
        neg_62 = torch.ops.aten.neg.default(slice_718);  slice_718 = None
        cat_62 = torch.ops.aten.cat.default([neg_62, slice_717], -1);  neg_62 = slice_717 = None
        mul_12832 = torch.ops.aten.mul.Tensor(cat_62, unsqueeze_191);  cat_62 = None
        add_10334 = torch.ops.aten.add.Tensor(mul_12815, mul_12832);  mul_12815 = mul_12832 = None
        mul_12840 = torch.ops.aten.mul.Tensor(permute_345, unsqueeze_190);  unsqueeze_190 = None
        slice_719 = torch.ops.aten.slice.Tensor(permute_345, 3, 0, 64)
        slice_720 = torch.ops.aten.slice.Tensor(permute_345, 3, 64, 9223372036854775807);  permute_345 = None
        neg_63 = torch.ops.aten.neg.default(slice_720);  slice_720 = None
        cat_63 = torch.ops.aten.cat.default([neg_63, slice_719], -1);  neg_63 = slice_719 = None
        mul_12857 = torch.ops.aten.mul.Tensor(cat_63, unsqueeze_191);  cat_63 = unsqueeze_191 = None
        add_10358 = torch.ops.aten.add.Tensor(mul_12840, mul_12857);  mul_12840 = mul_12857 = None
        full_default_124 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_125 = torch.ops.aten.full.default([1, 8, arg322_1, 128], 0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False);  arg322_1 = None
        index_put_62 = torch.ops.aten.index_put.default(full_default_124, [None, None, arg3_1], add_10358);  full_default_124 = add_10358 = None
        index_put_63 = torch.ops.aten.index_put.default(full_default_125, [None, None, arg3_1], permute_347);  full_default_125 = arg3_1 = permute_347 = None
        unsqueeze_193 = torch.ops.aten.unsqueeze.default(index_put_62, 2)
        expand_160 = torch.ops.aten.expand.default(unsqueeze_193, [1, 8, 4, arg5_1, 128]);  unsqueeze_193 = None
        clone_95 = torch.ops.aten.clone.default(expand_160, memory_format = torch.contiguous_format);  expand_160 = None
        view_1075 = torch.ops.aten.view.default(clone_95, [1, 32, arg5_1, 128]);  clone_95 = None
        unsqueeze_195 = torch.ops.aten.unsqueeze.default(index_put_63, 2)
        expand_162 = torch.ops.aten.expand.default(unsqueeze_195, [1, 8, 4, arg5_1, 128]);  unsqueeze_195 = None
        clone_96 = torch.ops.aten.clone.default(expand_162, memory_format = torch.contiguous_format);  expand_162 = None
        view_1076 = torch.ops.aten.view.default(clone_96, [1, 32, arg5_1, 128]);  clone_96 = None
        clone_97 = torch.ops.aten.clone.default(add_10334, memory_format = torch.contiguous_format);  add_10334 = None
        full_default_126 = torch.ops.aten.full.default([], -inf, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        full_default_127 = torch.ops.aten.full.default([], 0.0, dtype = torch.float16, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
        where_31 = torch.ops.aten.where.self(arg6_1, full_default_127, full_default_126);  arg6_1 = full_default_127 = full_default_126 = None
        expand_163 = torch.ops.aten.expand.default(where_31, [1, 32, arg0_1, arg5_1]);  where_31 = arg5_1 = None
        _scaled_dot_product_efficient_attention_31 = torch.ops.aten._scaled_dot_product_efficient_attention.default(clone_97, view_1075, view_1076, expand_163, False, scale = 0.08838834764831845);  clone_97 = view_1075 = view_1076 = expand_163 = None
        getitem_250 = _scaled_dot_product_efficient_attention_31[0];  _scaled_dot_product_efficient_attention_31 = None
        permute_348 = torch.ops.aten.permute.default(getitem_250, [0, 2, 1, 3]);  getitem_250 = None
        view_1077 = torch.ops.aten.view.default(permute_348, [1, arg0_1, -1]);  permute_348 = None
        permute_349 = torch.ops.aten.permute.default(arg323_1, [1, 0]);  arg323_1 = None
        view_1078 = torch.ops.aten.view.default(view_1077, [arg0_1, 4096]);  view_1077 = None
        mm_220 = torch.ops.aten.mm.default(view_1078, permute_349);  view_1078 = permute_349 = None
        view_1079 = torch.ops.aten.view.default(mm_220, [1, arg0_1, 4096]);  mm_220 = None
        add_10516 = torch.ops.aten.add.Tensor(add_10240, view_1079);  add_10240 = view_1079 = None
        view_1080 = torch.ops.aten.view.default(add_10516, [-1, 4096])
        empty_126 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_127 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_63 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 64, constant_args_idx = 63, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_126, 'X_ptr': view_1080, 'W_ptr': arg324_1, 'RSTD_ptr': empty_127}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_126 = view_1080 = arg324_1 = empty_127 = None
        getitem_254 = triton_kernel_wrapper_functional_proxy_63['Y_ptr'];  triton_kernel_wrapper_functional_proxy_63 = None
        permute_350 = torch.ops.aten.permute.default(arg325_1, [1, 0]);  arg325_1 = None
        view_1083 = torch.ops.aten.view.default(getitem_254, [1, arg0_1, 4096])
        view_1084 = torch.ops.aten.view.default(view_1083, [arg0_1, 4096]);  view_1083 = None
        mm_221 = torch.ops.aten.mm.default(view_1084, permute_350);  view_1084 = permute_350 = None
        view_1085 = torch.ops.aten.view.default(mm_221, [1, arg0_1, 14336]);  mm_221 = None
        convert_element_type_509 = torch.ops.prims.convert_element_type.default(view_1085, torch.float32);  view_1085 = None
        sigmoid_31 = torch.ops.aten.sigmoid.default(convert_element_type_509)
        mul_13105 = torch.ops.aten.mul.Tensor(convert_element_type_509, sigmoid_31);  convert_element_type_509 = sigmoid_31 = None
        convert_element_type_510 = torch.ops.prims.convert_element_type.default(mul_13105, torch.float16);  mul_13105 = None
        permute_351 = torch.ops.aten.permute.default(arg326_1, [1, 0]);  arg326_1 = None
        view_1087 = torch.ops.aten.view.default(getitem_254, [1, arg0_1, 4096]);  getitem_254 = None
        view_1088 = torch.ops.aten.view.default(view_1087, [arg0_1, 4096]);  view_1087 = None
        mm_222 = torch.ops.aten.mm.default(view_1088, permute_351);  view_1088 = permute_351 = None
        view_1089 = torch.ops.aten.view.default(mm_222, [1, arg0_1, 14336]);  mm_222 = None
        mul_13122 = torch.ops.aten.mul.Tensor(convert_element_type_510, view_1089);  convert_element_type_510 = view_1089 = None
        permute_352 = torch.ops.aten.permute.default(arg327_1, [1, 0]);  arg327_1 = None
        view_1090 = torch.ops.aten.view.default(mul_13122, [arg0_1, 14336]);  mul_13122 = None
        mm_223 = torch.ops.aten.mm.default(view_1090, permute_352);  view_1090 = permute_352 = None
        view_1091 = torch.ops.aten.view.default(mm_223, [1, arg0_1, 4096]);  mm_223 = None
        add_10569 = torch.ops.aten.add.Tensor(add_10516, view_1091);  add_10516 = view_1091 = None
        view_1092 = torch.ops.aten.view.default(add_10569, [-1, 4096]);  add_10569 = None
        empty_128 = torch.ops.aten.empty.memory_format([arg0_1, 4096], dtype = torch.float16, device = device(type='cuda', index=0), pin_memory = False)
        empty_129 = torch.ops.aten.empty.memory_format([arg0_1], dtype = torch.float32, device = device(type='cuda', index=0), pin_memory = False)
        triton_kernel_wrapper_functional_proxy_64 = torch.ops.higher_order.triton_kernel_wrapper_functional(kernel_idx = 65, constant_args_idx = 64, grid = [(arg0_1, 1, 1)], tma_descriptor_metadata = {}, kwargs = {'Y_ptr': empty_128, 'X_ptr': view_1092, 'W_ptr': arg328_1, 'RSTD_ptr': empty_129}, tensors_to_clone = ['Y_ptr', 'RSTD_ptr']);  empty_128 = view_1092 = arg328_1 = empty_129 = None
        getitem_256 = triton_kernel_wrapper_functional_proxy_64['Y_ptr'];  triton_kernel_wrapper_functional_proxy_64 = None
        permute_353 = torch.ops.aten.permute.default(arg330_1, [1, 0]);  arg330_1 = None
        view_1095 = torch.ops.aten.view.default(getitem_256, [1, arg0_1, 4096]);  getitem_256 = arg0_1 = None
        slice_744 = torch.ops.aten.slice.Tensor(view_1095, 1, -1, 9223372036854775807);  view_1095 = None
        view_1096 = torch.ops.aten.view.default(slice_744, [1, 4096]);  slice_744 = None
        convert_element_type_515 = torch.ops.prims.convert_element_type.default(view_1096, torch.float32);  view_1096 = None
        convert_element_type_516 = torch.ops.prims.convert_element_type.default(permute_353, torch.float32);  permute_353 = None
        unsqueeze_196 = torch.ops.aten.unsqueeze.default(convert_element_type_515, 2);  convert_element_type_515 = None
        unsqueeze_197 = torch.ops.aten.unsqueeze.default(convert_element_type_516, 0);  convert_element_type_516 = None
        mul_13166 = torch.ops.aten.mul.Tensor(unsqueeze_196, unsqueeze_197);  unsqueeze_196 = unsqueeze_197 = None
        sum_1 = torch.ops.aten.sum.dim_IntList(mul_13166, [1]);  mul_13166 = None
        convert_element_type_517 = torch.ops.prims.convert_element_type.default(sum_1, torch.float16);  sum_1 = None
        view_1097 = torch.ops.aten.view.default(convert_element_type_517, [1, 1, 128256]);  convert_element_type_517 = None
        return (index_put_1, index_put, index_put_3, index_put_2, index_put_5, index_put_4, index_put_7, index_put_6, index_put_9, index_put_8, index_put_11, index_put_10, index_put_13, index_put_12, index_put_15, index_put_14, index_put_17, index_put_16, index_put_19, index_put_18, index_put_21, index_put_20, index_put_23, index_put_22, index_put_25, index_put_24, index_put_27, index_put_26, index_put_29, index_put_28, index_put_31, index_put_30, index_put_33, index_put_32, index_put_35, index_put_34, index_put_37, index_put_36, index_put_39, index_put_38, index_put_41, index_put_40, index_put_43, index_put_42, index_put_45, index_put_44, index_put_47, index_put_46, index_put_49, index_put_48, index_put_51, index_put_50, index_put_53, index_put_52, index_put_55, index_put_54, index_put_57, index_put_56, index_put_59, index_put_58, index_put_61, index_put_60, index_put_63, index_put_62, view_1097)
        
def load_args(reader):
    reader.symint(9)  # arg0_1
    buf0 = reader.storage(None, 8*s0, device=device(type='cuda', index=0), dtype_hint=torch.int64)
    reader.tensor(buf0, (1, s0), dtype=torch.int64, is_leaf=True)  # arg1_1
    buf1 = reader.storage(None, 1050673152, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf1, (128256, 4096), dtype=torch.float16, is_leaf=True)  # arg2_1
    buf2 = reader.storage(None, 8*s0, device=device(type='cuda', index=0), dtype_hint=torch.int64)
    reader.tensor(buf2, (s0,), dtype=torch.int64, is_leaf=True)  # arg3_1
    buf3 = reader.storage(None, 8*s0, device=device(type='cuda', index=0), dtype_hint=torch.int64)
    reader.tensor(buf3, (1, s0), dtype=torch.int64, is_leaf=True)  # arg4_1
    reader.symint(2048)  # arg5_1
    buf4 = reader.storage(None, s1*(s0 - 1) + s1, device=device(type='cuda', index=0), dtype_hint=torch.bool)
    reader.tensor(buf4, (1, 1, s0, s1), dtype=torch.bool, is_leaf=True)  # arg6_1
    buf5 = reader.storage(None, 256, device=device(type='cuda', index=0))
    reader.tensor(buf5, (64,), is_leaf=True)  # arg7_1
    buf6 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf6, (4096,), dtype=torch.float16, is_leaf=True)  # arg8_1
    buf7 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf7, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg9_1
    buf8 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf8, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg10_1
    buf9 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf9, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg11_1
    reader.symint(2048)  # arg12_1
    buf10 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf10, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg13_1
    buf11 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf11, (4096,), dtype=torch.float16, is_leaf=True)  # arg14_1
    buf12 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf12, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg15_1
    buf13 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf13, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg16_1
    buf14 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf14, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg17_1
    buf15 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf15, (4096,), dtype=torch.float16, is_leaf=True)  # arg18_1
    buf16 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf16, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg19_1
    buf17 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf17, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg20_1
    buf18 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf18, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg21_1
    reader.symint(2048)  # arg22_1
    buf19 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf19, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg23_1
    buf20 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf20, (4096,), dtype=torch.float16, is_leaf=True)  # arg24_1
    buf21 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf21, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg25_1
    buf22 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf22, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg26_1
    buf23 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf23, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg27_1
    buf24 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf24, (4096,), dtype=torch.float16, is_leaf=True)  # arg28_1
    buf25 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf25, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg29_1
    buf26 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf26, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg30_1
    buf27 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf27, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg31_1
    reader.symint(2048)  # arg32_1
    buf28 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf28, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg33_1
    buf29 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf29, (4096,), dtype=torch.float16, is_leaf=True)  # arg34_1
    buf30 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf30, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg35_1
    buf31 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf31, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg36_1
    buf32 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf32, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg37_1
    buf33 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf33, (4096,), dtype=torch.float16, is_leaf=True)  # arg38_1
    buf34 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf34, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg39_1
    buf35 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf35, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg40_1
    buf36 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf36, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg41_1
    reader.symint(2048)  # arg42_1
    buf37 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf37, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg43_1
    buf38 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf38, (4096,), dtype=torch.float16, is_leaf=True)  # arg44_1
    buf39 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf39, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg45_1
    buf40 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf40, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg46_1
    buf41 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf41, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg47_1
    buf42 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf42, (4096,), dtype=torch.float16, is_leaf=True)  # arg48_1
    buf43 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf43, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg49_1
    buf44 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf44, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg50_1
    buf45 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf45, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg51_1
    reader.symint(2048)  # arg52_1
    buf46 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf46, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg53_1
    buf47 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf47, (4096,), dtype=torch.float16, is_leaf=True)  # arg54_1
    buf48 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf48, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg55_1
    buf49 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf49, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg56_1
    buf50 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf50, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg57_1
    buf51 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf51, (4096,), dtype=torch.float16, is_leaf=True)  # arg58_1
    buf52 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf52, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg59_1
    buf53 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf53, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg60_1
    buf54 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf54, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg61_1
    reader.symint(2048)  # arg62_1
    buf55 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf55, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg63_1
    buf56 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf56, (4096,), dtype=torch.float16, is_leaf=True)  # arg64_1
    buf57 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf57, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg65_1
    buf58 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf58, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg66_1
    buf59 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf59, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg67_1
    buf60 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf60, (4096,), dtype=torch.float16, is_leaf=True)  # arg68_1
    buf61 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf61, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg69_1
    buf62 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf62, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg70_1
    buf63 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf63, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg71_1
    reader.symint(2048)  # arg72_1
    buf64 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf64, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg73_1
    buf65 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf65, (4096,), dtype=torch.float16, is_leaf=True)  # arg74_1
    buf66 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf66, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg75_1
    buf67 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf67, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg76_1
    buf68 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf68, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg77_1
    buf69 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf69, (4096,), dtype=torch.float16, is_leaf=True)  # arg78_1
    buf70 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf70, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg79_1
    buf71 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf71, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg80_1
    buf72 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf72, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg81_1
    reader.symint(2048)  # arg82_1
    buf73 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf73, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg83_1
    buf74 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf74, (4096,), dtype=torch.float16, is_leaf=True)  # arg84_1
    buf75 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf75, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg85_1
    buf76 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf76, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg86_1
    buf77 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf77, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg87_1
    buf78 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf78, (4096,), dtype=torch.float16, is_leaf=True)  # arg88_1
    buf79 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf79, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg89_1
    buf80 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf80, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg90_1
    buf81 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf81, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg91_1
    reader.symint(2048)  # arg92_1
    buf82 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf82, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg93_1
    buf83 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf83, (4096,), dtype=torch.float16, is_leaf=True)  # arg94_1
    buf84 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf84, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg95_1
    buf85 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf85, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg96_1
    buf86 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf86, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg97_1
    buf87 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf87, (4096,), dtype=torch.float16, is_leaf=True)  # arg98_1
    buf88 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf88, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg99_1
    buf89 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf89, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg100_1
    buf90 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf90, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg101_1
    reader.symint(2048)  # arg102_1
    buf91 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf91, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg103_1
    buf92 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf92, (4096,), dtype=torch.float16, is_leaf=True)  # arg104_1
    buf93 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf93, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg105_1
    buf94 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf94, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg106_1
    buf95 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf95, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg107_1
    buf96 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf96, (4096,), dtype=torch.float16, is_leaf=True)  # arg108_1
    buf97 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf97, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg109_1
    buf98 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf98, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg110_1
    buf99 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf99, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg111_1
    reader.symint(2048)  # arg112_1
    buf100 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf100, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg113_1
    buf101 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf101, (4096,), dtype=torch.float16, is_leaf=True)  # arg114_1
    buf102 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf102, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg115_1
    buf103 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf103, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg116_1
    buf104 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf104, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg117_1
    buf105 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf105, (4096,), dtype=torch.float16, is_leaf=True)  # arg118_1
    buf106 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf106, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg119_1
    buf107 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf107, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg120_1
    buf108 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf108, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg121_1
    reader.symint(2048)  # arg122_1
    buf109 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf109, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg123_1
    buf110 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf110, (4096,), dtype=torch.float16, is_leaf=True)  # arg124_1
    buf111 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf111, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg125_1
    buf112 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf112, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg126_1
    buf113 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf113, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg127_1
    buf114 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf114, (4096,), dtype=torch.float16, is_leaf=True)  # arg128_1
    buf115 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf115, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg129_1
    buf116 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf116, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg130_1
    buf117 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf117, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg131_1
    reader.symint(2048)  # arg132_1
    buf118 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf118, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg133_1
    buf119 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf119, (4096,), dtype=torch.float16, is_leaf=True)  # arg134_1
    buf120 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf120, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg135_1
    buf121 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf121, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg136_1
    buf122 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf122, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg137_1
    buf123 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf123, (4096,), dtype=torch.float16, is_leaf=True)  # arg138_1
    buf124 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf124, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg139_1
    buf125 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf125, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg140_1
    buf126 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf126, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg141_1
    reader.symint(2048)  # arg142_1
    buf127 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf127, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg143_1
    buf128 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf128, (4096,), dtype=torch.float16, is_leaf=True)  # arg144_1
    buf129 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf129, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg145_1
    buf130 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf130, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg146_1
    buf131 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf131, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg147_1
    buf132 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf132, (4096,), dtype=torch.float16, is_leaf=True)  # arg148_1
    buf133 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf133, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg149_1
    buf134 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf134, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg150_1
    buf135 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf135, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg151_1
    reader.symint(2048)  # arg152_1
    buf136 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf136, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg153_1
    buf137 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf137, (4096,), dtype=torch.float16, is_leaf=True)  # arg154_1
    buf138 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf138, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg155_1
    buf139 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf139, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg156_1
    buf140 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf140, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg157_1
    buf141 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf141, (4096,), dtype=torch.float16, is_leaf=True)  # arg158_1
    buf142 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf142, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg159_1
    buf143 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf143, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg160_1
    buf144 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf144, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg161_1
    reader.symint(2048)  # arg162_1
    buf145 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf145, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg163_1
    buf146 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf146, (4096,), dtype=torch.float16, is_leaf=True)  # arg164_1
    buf147 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf147, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg165_1
    buf148 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf148, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg166_1
    buf149 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf149, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg167_1
    buf150 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf150, (4096,), dtype=torch.float16, is_leaf=True)  # arg168_1
    buf151 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf151, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg169_1
    buf152 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf152, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg170_1
    buf153 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf153, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg171_1
    reader.symint(2048)  # arg172_1
    buf154 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf154, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg173_1
    buf155 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf155, (4096,), dtype=torch.float16, is_leaf=True)  # arg174_1
    buf156 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf156, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg175_1
    buf157 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf157, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg176_1
    buf158 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf158, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg177_1
    buf159 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf159, (4096,), dtype=torch.float16, is_leaf=True)  # arg178_1
    buf160 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf160, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg179_1
    buf161 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf161, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg180_1
    buf162 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf162, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg181_1
    reader.symint(2048)  # arg182_1
    buf163 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf163, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg183_1
    buf164 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf164, (4096,), dtype=torch.float16, is_leaf=True)  # arg184_1
    buf165 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf165, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg185_1
    buf166 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf166, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg186_1
    buf167 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf167, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg187_1
    buf168 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf168, (4096,), dtype=torch.float16, is_leaf=True)  # arg188_1
    buf169 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf169, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg189_1
    buf170 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf170, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg190_1
    buf171 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf171, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg191_1
    reader.symint(2048)  # arg192_1
    buf172 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf172, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg193_1
    buf173 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf173, (4096,), dtype=torch.float16, is_leaf=True)  # arg194_1
    buf174 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf174, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg195_1
    buf175 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf175, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg196_1
    buf176 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf176, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg197_1
    buf177 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf177, (4096,), dtype=torch.float16, is_leaf=True)  # arg198_1
    buf178 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf178, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg199_1
    buf179 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf179, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg200_1
    buf180 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf180, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg201_1
    reader.symint(2048)  # arg202_1
    buf181 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf181, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg203_1
    buf182 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf182, (4096,), dtype=torch.float16, is_leaf=True)  # arg204_1
    buf183 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf183, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg205_1
    buf184 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf184, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg206_1
    buf185 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf185, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg207_1
    buf186 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf186, (4096,), dtype=torch.float16, is_leaf=True)  # arg208_1
    buf187 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf187, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg209_1
    buf188 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf188, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg210_1
    buf189 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf189, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg211_1
    reader.symint(2048)  # arg212_1
    buf190 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf190, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg213_1
    buf191 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf191, (4096,), dtype=torch.float16, is_leaf=True)  # arg214_1
    buf192 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf192, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg215_1
    buf193 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf193, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg216_1
    buf194 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf194, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg217_1
    buf195 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf195, (4096,), dtype=torch.float16, is_leaf=True)  # arg218_1
    buf196 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf196, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg219_1
    buf197 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf197, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg220_1
    buf198 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf198, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg221_1
    reader.symint(2048)  # arg222_1
    buf199 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf199, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg223_1
    buf200 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf200, (4096,), dtype=torch.float16, is_leaf=True)  # arg224_1
    buf201 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf201, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg225_1
    buf202 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf202, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg226_1
    buf203 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf203, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg227_1
    buf204 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf204, (4096,), dtype=torch.float16, is_leaf=True)  # arg228_1
    buf205 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf205, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg229_1
    buf206 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf206, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg230_1
    buf207 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf207, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg231_1
    reader.symint(2048)  # arg232_1
    buf208 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf208, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg233_1
    buf209 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf209, (4096,), dtype=torch.float16, is_leaf=True)  # arg234_1
    buf210 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf210, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg235_1
    buf211 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf211, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg236_1
    buf212 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf212, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg237_1
    buf213 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf213, (4096,), dtype=torch.float16, is_leaf=True)  # arg238_1
    buf214 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf214, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg239_1
    buf215 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf215, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg240_1
    buf216 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf216, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg241_1
    reader.symint(2048)  # arg242_1
    buf217 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf217, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg243_1
    buf218 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf218, (4096,), dtype=torch.float16, is_leaf=True)  # arg244_1
    buf219 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf219, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg245_1
    buf220 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf220, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg246_1
    buf221 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf221, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg247_1
    buf222 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf222, (4096,), dtype=torch.float16, is_leaf=True)  # arg248_1
    buf223 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf223, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg249_1
    buf224 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf224, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg250_1
    buf225 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf225, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg251_1
    reader.symint(2048)  # arg252_1
    buf226 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf226, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg253_1
    buf227 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf227, (4096,), dtype=torch.float16, is_leaf=True)  # arg254_1
    buf228 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf228, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg255_1
    buf229 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf229, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg256_1
    buf230 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf230, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg257_1
    buf231 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf231, (4096,), dtype=torch.float16, is_leaf=True)  # arg258_1
    buf232 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf232, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg259_1
    buf233 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf233, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg260_1
    buf234 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf234, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg261_1
    reader.symint(2048)  # arg262_1
    buf235 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf235, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg263_1
    buf236 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf236, (4096,), dtype=torch.float16, is_leaf=True)  # arg264_1
    buf237 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf237, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg265_1
    buf238 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf238, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg266_1
    buf239 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf239, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg267_1
    buf240 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf240, (4096,), dtype=torch.float16, is_leaf=True)  # arg268_1
    buf241 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf241, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg269_1
    buf242 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf242, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg270_1
    buf243 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf243, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg271_1
    reader.symint(2048)  # arg272_1
    buf244 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf244, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg273_1
    buf245 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf245, (4096,), dtype=torch.float16, is_leaf=True)  # arg274_1
    buf246 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf246, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg275_1
    buf247 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf247, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg276_1
    buf248 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf248, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg277_1
    buf249 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf249, (4096,), dtype=torch.float16, is_leaf=True)  # arg278_1
    buf250 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf250, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg279_1
    buf251 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf251, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg280_1
    buf252 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf252, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg281_1
    reader.symint(2048)  # arg282_1
    buf253 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf253, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg283_1
    buf254 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf254, (4096,), dtype=torch.float16, is_leaf=True)  # arg284_1
    buf255 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf255, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg285_1
    buf256 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf256, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg286_1
    buf257 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf257, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg287_1
    buf258 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf258, (4096,), dtype=torch.float16, is_leaf=True)  # arg288_1
    buf259 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf259, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg289_1
    buf260 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf260, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg290_1
    buf261 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf261, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg291_1
    reader.symint(2048)  # arg292_1
    buf262 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf262, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg293_1
    buf263 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf263, (4096,), dtype=torch.float16, is_leaf=True)  # arg294_1
    buf264 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf264, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg295_1
    buf265 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf265, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg296_1
    buf266 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf266, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg297_1
    buf267 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf267, (4096,), dtype=torch.float16, is_leaf=True)  # arg298_1
    buf268 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf268, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg299_1
    buf269 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf269, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg300_1
    buf270 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf270, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg301_1
    reader.symint(2048)  # arg302_1
    buf271 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf271, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg303_1
    buf272 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf272, (4096,), dtype=torch.float16, is_leaf=True)  # arg304_1
    buf273 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf273, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg305_1
    buf274 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf274, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg306_1
    buf275 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf275, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg307_1
    buf276 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf276, (4096,), dtype=torch.float16, is_leaf=True)  # arg308_1
    buf277 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf277, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg309_1
    buf278 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf278, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg310_1
    buf279 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf279, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg311_1
    reader.symint(2048)  # arg312_1
    buf280 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf280, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg313_1
    buf281 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf281, (4096,), dtype=torch.float16, is_leaf=True)  # arg314_1
    buf282 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf282, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg315_1
    buf283 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf283, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg316_1
    buf284 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf284, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg317_1
    buf285 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf285, (4096,), dtype=torch.float16, is_leaf=True)  # arg318_1
    buf286 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf286, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg319_1
    buf287 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf287, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg320_1
    buf288 = reader.storage(None, 8388608, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf288, (1024, 4096), dtype=torch.float16, is_leaf=True)  # arg321_1
    reader.symint(2048)  # arg322_1
    buf289 = reader.storage(None, 33554432, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf289, (4096, 4096), dtype=torch.float16, is_leaf=True)  # arg323_1
    buf290 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf290, (4096,), dtype=torch.float16, is_leaf=True)  # arg324_1
    buf291 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf291, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg325_1
    buf292 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf292, (14336, 4096), dtype=torch.float16, is_leaf=True)  # arg326_1
    buf293 = reader.storage(None, 117440512, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf293, (4096, 14336), dtype=torch.float16, is_leaf=True)  # arg327_1
    buf294 = reader.storage(None, 8192, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf294, (4096,), dtype=torch.float16, is_leaf=True)  # arg328_1
    reader.symint(1)  # arg329_1
    buf295 = reader.storage(None, 1050673152, device=device(type='cuda', index=0), dtype_hint=torch.float16)
    reader.tensor(buf295, (128256, 4096), dtype=torch.float16, is_leaf=True)  # arg330_1
load_args._version = 0
mod = Repro()
if __name__ == '__main__':
    from torch._dynamo.repro.after_aot import run_repro
    with torch.no_grad():
        run_repro(mod, load_args, accuracy=False, command='run', save_dir=None, tracing_mode='symbolic', check_str=None)
        # To run it separately, do 
        # mod, args = run_repro(mod, load_args, accuracy=False, command='get_args', save_dir=None, tracing_mode='symbolic', check_str=None)
        # mod(*args)